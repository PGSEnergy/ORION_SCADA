[EN]
U_INTERLOCKING_1=; By this program it is possible to create internal interlockings by utilizing SCIL
U_INTERLOCKING_2=
U_INTERLOCKING_3=; as OUTPUT you can give variables:
U_INTERLOCKING_4=; @OPEN_INTERLOCKED, boolean, (if true then opening gets disabled)
U_INTERLOCKING_5=; @CLOSE_INTERLOCKED, boolean, (if true then closing gets disabled)
U_INTERLOCKING_6=; @INTERLOCKING_CAUSE, text, cause to be shown on the dialog infobar
U_INTERLOCKING_7=; None of these is obligatory!
U_INTERLOCKING_8=; Add your code before #RETURN LIST(... function
U_INTERLOCKING_9=
U_INTERLOCKING_10=#RETURN LIST(OPEN_INTERLOCKED=%OPEN_INTERLOCKED, CLOSE_INTERLOCKED=%CLOSE_INTERLOCKED, INTERLOCKING_CAUSE=%INTERLOCKING_CAUSE)
U_INTERLOCKING_VS_1=; By this program it is possible to create internal interlockings by utilizing SCIL
U_INTERLOCKING_VS_2=
U_INTERLOCKING_VS_3=; as OUTPUT you can give variables:
U_INTERLOCKING_VS_4=; @OPEN_INTERLOCKED, boolean, (if true then opening gets disabled)
U_INTERLOCKING_VS_5=; @CLOSE_INTERLOCKED, boolean, (if true then closing gets disabled)
U_INTERLOCKING_VS_6=; @INTERLOCKING_CAUSE, text, cause to be shown on the dialog infobar
U_INTERLOCKING_VS_7=; @EVENT_OBJECTS, vector(list(LN=ln1, IX=ix1), list(LN=ln2, IX=ix2 ...)) , LNs and IXs for #ON blocks in VS SCIL dialog
U_INTERLOCKING_VS_8=; None of these is obligatory!
U_INTERLOCKING_VS_9=; Add your code before #RETURN LIST(... function
U_INTERLOCKING_VS_10=
U_INTERLOCKING_VS_11=#RETURN LIST(OPEN_INTERLOCKED=%OPEN_INTERLOCKED, CLOSE_INTERLOCKED=%CLOSE_INTERLOCKED, INTERLOCKING_CAUSE=%INTERLOCKING_CAUSE, EVENT_OBJECTS=%EVENT_OBJECTS)
U_OTHER_OBJECTS_1=; By this program You can define logical name (LN) for other objects
U_OTHER_OBJECTS_2=; that is being required by the main control dialogs. For syntax/
U_OTHER_OBJECTS_3=; selections please refer to the installation help!
U_OTHER_OBJECTS_4=
U_OTHER_OBJECTS_5=; This program is for optimization/customization purposes and
U_OTHER_OBJECTS_6=; therefore not obligatory. The control dialog is automatically
U_OTHER_OBJECTS_7=; collecting this same information from the database if it is not
U_OTHER_OBJECTS_8=; defined here.
U_OTHER_OBJECTS_9=
U_OTHER_OBJECTS_10=@U_OTHER_OBJECTS = LIST(-
U_OTHER_OBJECTS_11=STATION_LN = "",-
U_OTHER_OBJECTS_12=BAY_LN     = "",-
U_OTHER_OBJECTS_13=AR_LN      = "",-
U_OTHER_OBJECTS_14=TRIP_LN    = "")
U_OTHER_OBJECTS_15=
U_OTHER_OBJECTS_16=#RETURN %U_OTHER_OBJECTS
U_OTHER_OBJECTS_TR_1=; By this program You can define logical name (LN) for other objects
U_OTHER_OBJECTS_TR_2=; that is being required by the main control dialogs. For syntax/
U_OTHER_OBJECTS_TR_3=; selections please refer to the installation help!
U_OTHER_OBJECTS_TR_4=
U_OTHER_OBJECTS_TR_5=; This program is for optimization/customization purposes and
U_OTHER_OBJECTS_TR_6=; therefore not obligatory. The control dialog is automatically
U_OTHER_OBJECTS_TR_7=; collecting this same information from the database if it is not
U_OTHER_OBJECTS_TR_8=; defined here.
U_OTHER_OBJECTS_TR_9=
U_OTHER_OBJECTS_TR_10=@U_OTHER_OBJECTS = LIST(-
U_OTHER_OBJECTS_TR_11=STATION_LN = "",-
U_OTHER_OBJECTS_TR_12=BAY_LN     = "")
U_OTHER_OBJECTS_TR_13=
U_OTHER_OBJECTS_TR_14=#RETURN %U_OTHER_OBJECTS
U_OTHER_OBJECTS_ME_1=; By this program You can define logical name (LN) for other objects
U_OTHER_OBJECTS_ME_2=; that is being required by the main control dialogs. For syntax/
U_OTHER_OBJECTS_ME_3=; selections please refer to the installation help!
U_OTHER_OBJECTS_ME_4=
U_OTHER_OBJECTS_ME_5=; This program is for optimization/customization purposes and
U_OTHER_OBJECTS_ME_6=; therefore not obligatory. The control dialog is automatically
U_OTHER_OBJECTS_ME_7=; collecting this same information from the database if it is not
U_OTHER_OBJECTS_ME_8=; defined here.
U_OTHER_OBJECTS_ME_9=
U_OTHER_OBJECTS_ME_10=@U_OTHER_OBJECTS = LIST(-
U_OTHER_OBJECTS_ME_11=STATION_LN = "",-
U_OTHER_OBJECTS_ME_12=BAY_LN     = "")
U_OTHER_OBJECTS_ME_13=
U_OTHER_OBJECTS_ME_14=#RETURN %U_OTHER_OBJECTS
U_OTHER_OBJECTS_BA_1=; By this program You can define logical name (LN) for other objects
U_OTHER_OBJECTS_BA_2=; that is being required by the main control dialogs. For syntax/
U_OTHER_OBJECTS_BA_3=; selections please refer to the installation help!
U_OTHER_OBJECTS_BA_4=
U_OTHER_OBJECTS_BA_5=; This program is for optimization/customization purposes and
U_OTHER_OBJECTS_BA_6=; therefore not obligatory. The control dialog is automatically
U_OTHER_OBJECTS_BA_7=; collecting this same information from the database if it is not
U_OTHER_OBJECTS_BA_8=; defined here.
U_OTHER_OBJECTS_BA_9=
U_OTHER_OBJECTS_BA_10=@U_OTHER_OBJECTS = LIST(-
U_OTHER_OBJECTS_BA_11=STATION_LN = "")
U_OTHER_OBJECTS_BA_12=
U_OTHER_OBJECTS_BA_13=#RETURN %U_OTHER_OBJECTS
U_LR_VALUE_CONVENTION_1=; By this program You can map the the value of the L/R switch to authorized
U_LR_VALUE_CONVENTION_2=; control locations. There can be more than one locations mapped to one value.
U_LR_VALUE_CONVENTION_3=; Key words are:
U_LR_VALUE_CONVENTION_4=; OFF, control disabled from everywhere
U_LR_VALUE_CONVENTION_5=; LOCAL, control from the front panel of IED
U_LR_VALUE_CONVENTION_6=; STATION, Control from Station level
U_LR_VALUE_CONVENTION_7=; NCC, control from Network control center
U_LR_VALUE_CONVENTION_8=; ALL, control allowed from everywhere
U_LR_VALUE_CONVENTION_9=; System location is checked from APL:BSV3 (0="NCC", 1="STATION")
U_LR_VALUE_CONVENTION_10=; Arbitrary system name can be also given and mapped to value in attibute THIS_SYSTEM_NAME
U_LR_VALUE_CONVENTION_11=; If position is controllable define CONTROL_POSITION, CONTROL_VALUE, CONTROL_INDEX and CONTROL_LN for the value
U_LR_VALUE_CONVENTION_12=; Note that event handling object of index 10 needs to be changed according to convention.
U_LR_VALUE_CONVENTION_13=; Example below, remove the comment marks (;) to take it in use
U_LR_VALUE_CONVENTION_14=;
U_LR_VALUE_CONVENTION_15=;#RETURN LIST(-
U_LR_VALUE_CONVENTION_16=;THIS_SYSTEM_NAME = "",-
U_LR_VALUE_CONVENTION_17=;   SIGNALS = VECTOR(-
U_LR_VALUE_CONVENTION_18=;      LIST(VALUE = 0, CONTROL_PLACES = VECTOR("OFF")),-
U_LR_VALUE_CONVENTION_19=;      LIST(VALUE = 1, CONTROL_PLACES = VECTOR("LOCAL")),-
U_LR_VALUE_CONVENTION_20=;      LIST(VALUE = 3, CONTROL_PLACES = VECTOR("STATION")),-
U_LR_VALUE_CONVENTION_21=;      LIST(VALUE = 5, CONTROL_PLACES = VECTOR("LOCAL", "STATION")),-
U_LR_VALUE_CONVENTION_22=;      LIST(VALUE = 6, CONTROL_PLACES = VECTOR("ALL")),-
U_LR_VALUE_CONVENTION_23=;      LIST(VALUE = 7, CONTROL_PLACES = VECTOR("STATION", "NCC")),-
U_LR_VALUE_CONVENTION_24=;      LIST(CONTROL_POSITION = translation("Remote=0"), CONTROL_VALUE = 0, CONTROL_INDEX = 23),-  
U_LR_VALUE_CONVENTION_25=;      LIST(CONTROL_POSITION = "Station=1", CONTROL_VALUE = 1, CONTROL_INDEX = 23, CONTROL_LN = "")-
U_LR_VALUE_CONVENTION_26=;))
