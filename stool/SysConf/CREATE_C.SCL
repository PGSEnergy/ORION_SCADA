; File: Create_C.scl(t_Target_Object)
; Parameters: t_Target_Object, the target object of SCIL-program.
;             [i_Net_Number, the NET number if t_Target_Object = NET]
; Description: Construct SCIL -level clauses for base system configuration.
; -------------------------------------------------------------------------

@t_Error_State = error_state
#error continue

@t_Target_Object = argument(1)

@l_System_Configuration = SYS:BSV2

#if data_type(%l_System_Configuration) == "LIST" #then #block

   #if substr(upper_case(SYS:BPR), 1, 3) <> "SMS" and substr(upper_case(SYS:BPR), 1, 3) <> "CAP" #then #block

      #set l_System_Configuration:vl_System_Start_Time = hr_clock
      #set SYS:BSV2 = %l_System_Configuration

   #block_end

   #if length(select(list_attr(%l_System_Configuration), "==""T_SYSTEM_CONFIGURATION_FILE""")) > 0 #then #block

      @t_Inter_File = l_System_Configuration:vt_System_Configuration_File

      #if length(select(list_attr(%l_System_Configuration), "==""B_CONF_MECH_IN_USE""")) == 0 #then #block

         #set l_System_Configuration:vb_Conf_Mech_In_Use = TRUE
         #set SYS:BSV2 = %l_System_Configuration

      #block_end

      #if l_System_Configuration:vb_Conf_Mech_In_Use #then #block

         #case %t_Target_Object

            #when "BASE_SYSTEM" #block

               @i_Status = do (read_text("sys_tool/msglog.scl"), "INFO", "Configuring base system...")
               @v_Create_Block = vector()
               @v_SCT_Mgr = evaluate(read_text("sys_tool/SCT_Mgr.bin"))
               @Gv_SCT_Mgr__ = %v_SCT_Mgr(1)
               @Gl_SCT_Table__ = %v_SCT_Mgr(2)
               @v_SCT_Mgr
               @i_Links_Status = do (read_text("sys_tool/Create_B.scl"), "BASE_SYSTEM_LINK")
               @i_Nodes_Status = do (read_text("sys_tool/Create_B.scl"), "BASE_SYSTEM_NODE")
               @i_Stations_Status = do (read_text("sys_tool/Create_B.scl"), "BASE_SYSTEM_STATION")
               @i_Station_Types_Status = do (read_text("sys_tool/Create_B.scl"), "BASE_SYSTEM_STATION_TYPE")
               @i_Write_Commands_Status = write_text("sys_/sys_base.scl", %v_Create_Block)
               #if length(%v_Create_Block) > 0 #then @i_Do_Commands_Status = do (read_text("sys_tool/docmd.scl"), %v_Create_Block)

               @i_Status = do (read_text("sys_tool/msglog.scl"), "INFO", "Base system configuration finished.")

            #block_end

            #when "NET" #block

               @i_Net_Number = argument(2)
               @v_Create_Block = vector()
               @i_Status = do (read_text("sys_tool/SCT_Mgr.scl"), "acInit")
               @i_Status = do (read_text("sys_tool/msglog.scl"), "INFO", "Configuring NET 'i_Net_Number'...")
               @i_Net_Status = do (read_text("sys_tool/Create_N.scl"), vector(%i_Net_Number))
               @i_REX_Status = do (read_text("sys_tool/Create_P.scl"), "REX", vector(0), %i_Net_Number)
               @i_LMK_Status = do (read_text("sys_tool/Create_P.scl"), "LMK", vector(0), %i_Net_Number)
               @i_SPA_Status = do (read_text("sys_tool/Create_P.scl"), "SPA", vector(0), %i_Net_Number)
               @i_PLC_Status = do (read_text("sys_tool/Create_P.scl"), "PLC", vector(0), %i_Net_Number)
               @i_STA_Status = do (read_text("sys_tool/Create_P.scl"), "STA", vector(0), %i_Net_Number)
               @i_DNP_Status = do (read_text("sys_tool/Create_P.scl"), "DNP", vector(0), %i_Net_Number)
               @i_NetInUse_Status = do (read_text("sys_tool/InUse_N.scl"), vector(%i_Net_Number))
               @i_Write_Commands_Status = write_text("sys_/sys_net'i_Net_Number'.scl", %v_Create_Block)
               #if length(%v_Create_Block) > 0 #then @i_Do_Commands_Status = do (read_text("sys_tool/docmd.scl"), %v_Create_Block)
               @i_Status = do (read_text("sys_tool/msglog.scl"), "INFO", "NET 'i_Net_Number' configuration finished.")

            #block_end

         #case_end

      #block_end

   #block_end

#block_end
#else #block

   @l_System_Configuration = list(-
      t_System_Configuration_File = "",-
      t_Version = "8.4.2",-
      b_Conf_Mech_In_Use = FALSE-
   )

#block_end

#error 't_Error_State'
