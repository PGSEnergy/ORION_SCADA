; Command Procedure: SYS_NETMR
; Version: SYS 600 9.3
; Description: This is command procedure for receiving system messages for NETs
; ------------------------------------------------------------------------------

;read in general info
@l_General_Info = APL:BSV45

@ENABLE_ANALOG_MODEL = TRUE
#if attribute_exists(%l_General_Info, "ENABLE_ANALOG_MODEL") #then @ENABLE_ANALOG_MODEL = l_General_Info:vENABLE_ANALOG_MODEL

#if %ENABLE_ANALOG_MODEL #then #block

;read in object data
@l_Obj_Data = do(apl:bsv40, "SSS", "GetObjectDefinitions", "ROUTINGS_NODE", %LN, %IX)

#if l_Obj_Data:vSTATUS == 0 #then #if l_Obj_Data:vINDICATION <> "#" #then #block ; 1

   ;read in filtering info
   @l_Filtering_Info = do(apl:bsv40, "SSS", "GetFilterAttributes", "SYS_MSG_NET_'l_Obj_Data:vTYPE'", trunc(%OV))

   ;write to log, event/alarm activation
   #if l_Filtering_Info:vSTATUS == 0 #then #block ; 2

      ;write to log, if requested
      #if l_Filtering_Info:vLOG and l_General_Info:vENABLE_LOG #then -
         @i_Log_Write = do(apl:bsv40, "SSS", "WriteLogItem", "STE", "MSG_NET")

      ;activate event, if requested
      #if l_Filtering_Info:vEVENT and l_General_Info:vENABLE_EVENT #then #block
         @l_Event_Point = do(apl:bsv40, "SSS", "GetEvents", "EVENT", "NODE", l_Obj_Data:vNUMBER, list(EVENT = trunc(%OV)))
         
         #if l_Event_Point:vSTATUS == 0 #then #set 'l_Event_Point:vEVENT' = 1
         #else #block
            @l_Event_Point = do(apl:bsv40,"SSS","CreateProcessObject", "NODE", "EVENT", l_Obj_Data:vNUMBER, list(EVENT = trunc(%OV)))
            #set 'l_Event_Point:vEVENT' = 1
         #block_end      
      #block_end
      
      ;activate alarm, if requested
      #if l_Filtering_Info:vALARM and l_General_Info:vENABLE_ALARM #then #block
         @l_Alarm_Point = do(apl:bsv40, "SSS", "GetEvents", "ALARM", "NODE", l_Obj_Data:vNUMBER, list(EVENT = trunc(%OV)))
         
         #if l_Alarm_Point:vSTATUS == 0 #then #set 'l_Alarm_Point:vALARM' = abs(1 - 'l_Alarm_Point:vALARM')
         #else #block
            @l_Alarm_Point = do(apl:bsv40, "SSS", "CreateProcessObject", "NODE", "ALARM", l_Obj_Data:vNUMBER, list(EVENT = trunc(%OV)))
            #set 'l_Alarm_Point:vALARM' = 1
         #block_end
      #block_end
   
   #block_end ; 2
      #else_if l_Filtering_Info:vSTATUS > 0 #then @i_MsgLog = do(read_text("SYS_TOOL/msglog.scl"), "INFO [SSS, sys_netmr:c]", l_Filtering_Info:vDESCRIPTIVE_TEXT)
   
   ;update indication point
   #if l_Filtering_Info:vSTATUS == 0 #then #block
      #if l_Filtering_Info:vALARM #then #set 'l_Obj_Data:vINDICATION' = 10
         #else #set 'l_Obj_Data:vINDICATION' = 0
   #block_end
   #else_if l_Filtering_Info:vSTATUS < 0 and l_Obj_Data:vTYPE == "MFL" #then #block
      #if %OV > 0 and %OV < 100 #then #set 'l_Obj_Data:vINDICATION' = 10   ;for redundant frontend pairs
         #else #set 'l_Obj_Data:vINDICATION' = 0
   #block_end
   #else_if l_Filtering_Info:vSTATUS < 0 and l_Obj_Data:vTYPE <> "MFL" #then #set 'l_Obj_Data:vINDICATION' = 0
   #else #block
      #error ignore
         @i_OV = 1
         @i_OV = 'l_Obj_Data:vINDICATION'
      #error stop
      #set 'l_Obj_Data:vINDICATION' = list(OV = %i_OV, OS = 4)
   #block_end

   ;update NET info (in case of NET start-up)
   #if %OV == 10001 #then #block
      #error ignore
         @l_Apl_Bsv = APL:BSV46
      #error stop
      
      #if data_type(%l_Apl_Bsv) <> "LIST" #then @l_Apl_Bsv = list()
      #if l_Obj_Data:vTYPE <> "61850NET" #then #block
         #set l_Apl_Bsv:v'l_Obj_Data:vTYPE''l_Obj_Data:vNUMBER'_RM = 0
         #set APL:BSV46 = %l_Apl_Bsv
      #block_end
   #block_end
   
#block_end ; 1
   #else_if l_Obj_Data:vSTATUS > 0 #then @i_MsgLog = do(read_text("SYS_TOOL/msglog.scl"), "INFO [SSS, sys_netmr:c]", l_Obj_Data:vDESCRIPTIVE_TEXT)
#block_end
