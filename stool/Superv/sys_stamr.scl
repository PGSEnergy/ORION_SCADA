; Command Procedure: SYS_STAMR
; Version: SYS 600 9.3
; Description: This is command procedure for receiving system messages for stations
;              Note! This procedure is executed, if ENABLE_STATION_MESSAGES -switch 
;                    is enabled in SSS_Setup.scl
; ----------------------------------------------------------------------------------

;read in general info
@l_General_Info = APL:BSV45

@ENABLE_ANALOG_MODEL = TRUE
#if attribute_exists(%l_General_Info, "ENABLE_ANALOG_MODEL") #then @ENABLE_ANALOG_MODEL = l_General_Info:vENABLE_ANALOG_MODEL

#if l_General_Info:vENABLE_STATION_MESSAGES and %ENABLE_ANALOG_MODEL #then #block

   #if 'LN':PPT(%IX) == 3 and 'LN':POA(%IX) >= 16777216 #then #block
      ;use binary object for events and alarms
   #block_end
   #else #block ;read in object data
      @l_Obj_Data = do(apl:bsv40, "SSS", "GetObjectDefinitions", "ROUTINGS_STATION", %LN, %IX)
      
      #if l_Obj_Data:vSTATUS == 0 #then #if l_Obj_Data:vINDICATION <> "#" #then #block ; 1
      
         ;read in filtering info
         @l_Filtering_Info = do(apl:bsv40,"SSS","GetFilterAttributes","SYS_MSG_STA_'l_Obj_Data:vST'",trunc(%OV))
         
         ;write to log, event/alarm activation
         #if l_Filtering_Info:vSTATUS == 0 #then #block ; 2
      
            ;write to log, if requested
            #if l_Filtering_Info:vLOG and l_General_Info:vENABLE_LOG #then -
               @i_Log_Write = do(apl:bsv40, "SSS", "WriteLogItem", "STE", "MSG_STA")
       
            ;activate event, if requested
            #if l_Filtering_Info:vEVENT and l_General_Info:vENABLE_EVENT #then #block
               @l_Event_Point = do(apl:bsv40, "SSS", "GetEvents", "EVENT", "STATION", l_Obj_Data:vNUMBER, list(EVENT = trunc(%OV)))
               
               #if l_Event_Point:vSTATUS == 0 #then #set 'l_Event_Point:vEVENT' = 1
               #else #block
                  @l_Event_Point = do(apl:bsv40, "SSS", "CreateProcessObject", "STATION", "EVENT", l_Obj_Data:vNUMBER, list(EVENT = trunc(%OV)))
                  #set 'l_Event_Point:vEVENT' = 1
               #block_end
            #block_end
            
            ;activate alarm, if requested
            #if l_Filtering_Info:vALARM and l_General_Info:vENABLE_ALARM #then #block
               @l_Alarm_Point = do(apl:bsv40, "SSS", "GetEvents", "ALARM", "STATION", l_Obj_Data:vNUMBER, list(EVENT = trunc(%OV)))
               
               #if l_Alarm_Point:vSTATUS == 0 #then #set 'l_Alarm_Point:vALARM' = abs(1 - 'l_Alarm_Point:vALARM')
               #else #block
                  @l_Alarm_Point = do(apl:bsv40, "SSS", "CreateProcessObject", "STATION", "ALARM", l_Obj_Data:vNUMBER, list(EVENT = trunc(%OV)))
                  #set 'l_Alarm_Point:vALARM' = 1
               #block_end
            #block_end
         
         #block_end ; 2
            #else_if l_Filtering_Info:vSTATUS > 0 #then @i_Msglog = do(read_text("SYS_TOOL/msglog.scl"), "INFO [SSS, sys_stamr:c]", l_Filtering_Info:vDESCRIPTIVE_TEXT)
         
         ;update indication point
         @i_Timeout = timeout(l_General_Info:vTIMEOUT_LENGTH)
         #error ignore
            @i_Status = status
            @i_IU = STA'l_Obj_Data:vNUMBER':SIU
         #error stop
         @i_Timeout = timeout(%i_Timeout)  
         
         #if status == 0 #then #block
            #if %i_IU == 0 #then #set 'l_Obj_Data:vINDICATION' = -1
            #else #block
               #if l_Filtering_Info:vSTATUS == 0 #then #block
                  #if l_Filtering_Info:vALARM #then #set 'l_Obj_Data:vINDICATION' = 10
                     #else #set 'l_Obj_Data:vINDICATION' = 0                                         ;SYS-3002 HoDa 1.4.2015
               #block_end
               #else_if l_Filtering_Info:vSTATUS < 0 #then #set 'l_Obj_Data:vINDICATION' = 0
               #else #block
                  #error ignore
                     @i_OV = 1
                     @i_OV = 'l_Obj_Data:vINDICATION'
                  #error stop
                  #set 'l_Obj_Data:vINDICATION' = list(OV = %i_OV, OS = 4)
               #block_end     
            #block_end
         #block_end
         #else #block
            #error ignore
               @i_OV = 1
               @i_OV = 'l_Obj_Data:vINDICATION'
            #error stop
            #set 'l_Obj_Data:vINDICATION' = list(OV = %i_OV, OS = 4)
         #block_end
         
      #block_end ; 1
         #else_if l_Obj_Data:vSTATUS > 0 #then @i_Msglog = do(read_text("SYS_TOOL/msglog.scl"), "INFO [SSS, sys_stamr:c]", l_Obj_Data:vDESCRIPTIVE_TEXT)
   #block_end
      
#block_end
