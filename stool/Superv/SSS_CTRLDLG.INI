;Version
[GENERAL]
; OBJECTTYPECALLBACK callback method to override automatic LN based 
; object type detection
; Return value either empty string or ObjectType, Callback method should set all the needed variables for
; Init_Dialog call, if it returns non-empty string. (eg. for default objects ROOT.i_ObjectNumber should be set)
OBJECTTYPECALLBACK = VECTOR("#local l_CustomData = ROOT.GetCustomData", "#IF ATTRIBUTE_EXISTS(l_CustomData, ""OBJECTTYPE"") #THEN #RETURN l_CustomData.OBJECTTYPE", "#RETURN """"")

;Object Types section

;; Parameters available:
; LN	- LN value of custom data 
; IX	- IX value of custom data
;
; When LN = SYS_AxxxxI
; 	APPNUM	Application number
; When LN = SYS_NxxxxI and xxxx isn't the Base System node number
; 	LINKNUM LINK number of NODE xxxx
; 	NODENUM xxxx of LN
; 	NETNUM  xxxx of LN 
; When LN = SYS_SxxxxI 
; 	STANUM	xxxx of LN
;
; In addition Repeat parameter will be provided, if repeat is used. The naming of this parameter is 
; handled in tab level and it's name depends on the tab. For GEN_TABLE the name is PARAM2.

[BASE_APL_SINGLE]
; References to Tab section. Each of the sections defined in the TABS vector
; need to be found in this file. The lenght of TABS, VISIBILITY and POSITION vectors
; need to be equal.
TABS		= ("APL_MAIN", "APL_DIAG")

; >5  not visible, 0 <= visible for all, 1 = for Auth.Level 1, 2 = for Auth.Level 2, 5 = for Auth.Level 5 
VISIBILITY	= (0, 1)
; A=Advanced view, B=Base View
; 	Tabs are loaded in the order they are declared in TABS vector
; 	Position defines on which Notebook the tab is loaded (Main = B, or Advanced = A)
POSITION	= ("B", "A")
; Basic or Advanced
START_MODE  = "ADVANCED"
; OI Fields shown in the Object Identification box
OI1			= SYS:BCX
OI2			= SYS:BNN

[BASE_APL_HSB]
; References to Tab section. Each of the sections defined in the TABS vector
; need to be found in this file. The lenght of TABS, VISIBILITY and POSITION vectors
; need to be equal.
TABS		= ("APL_MAIN", "APL_DIAG", "SHAD_DIAG", "APL_TAKEOVER")

; >5  not visible, 0 <= visible for all, 1 = for Auth.Level 1, 2 = for Auth.Level 2, 5 = for Auth.Level 5 
VISIBILITY	= (0, 1, 1, 2)
; A=Advanced view, B=Base View
; 	Tabs are loaded in the order they are declared in TABS vector
; 	Position defines on which Notebook the tab is loaded (Main = B, or Advanced = A)
POSITION	= ("B", "A", "A", "A")
; Basic or Advanced
START_MODE  = "ADVANCED"
; OI Fields shown in the Object Identification box
OI1			= SYS:BCX
OI2			= SYS:BNN

[BASE_SYS]
; References to Tab section. Each of the sections defined in the TABS vector
; need to be found in this file. The length of TABS, VISIBILITY and POSITION vectors
; need to be equal.
TABS		= VECTOR("BASE_MAIN")
; >5  not visible, 0 <= visible for all, 1 = for Auth.Level 1, 2 = for Auth.Level 2, 5 = for Auth.Level 5 
VISIBILITY 	= VECTOR(0)
; Basic or Advanced
POSITION	= VECTOR("B")
; OI Fields shown in the Object Identification box
OI1			= SYS:BCX
OI2			= SYS:BNN

[BASE_SYS_EXT]
TABS 		= VECTOR("SYS_EXT")
VISIBILITY	= VECTOR(0)
POSITION	= VECTOR("B")
; OI Fields shown in the Object Identification box
OI1			= 'LN':PCX
OI2			= 'LN':POI'IX'

[COM_PCNET]
; References to Tab section. Each of the sections defined in the TABS vector
; need to be found in this file. The lenght of TABS, VISIBILITY and POSITION vectors
; need to be equal.
; REPEAT_1: REPEAT_x should return a vector of elements. For each of these elements 
; Tab is created with current element as a 2nd parameter.
TABS		= ("COM_MAIN", "NET_CTRL", "ALARMS", "REPEAT_1:NET_DIAG", "REPEAT_1:LIN_DIAG")
REPEAT_1	= VECTOR("#RETURN DO(READ_TEXT(""SYS_TOOL/SSS_CTRLDLG.SCL""), ""GET_NODE_LINE_NUMBERS"", 'NETNUM')")
VISIBILITY	= (0, 0, 0, 1, 1)
POSITION	= ("B", "A", "A", "A", "A")
; OI Fields shown in the Object Identification box
OI1			= "Node 'NODENUM'"
OI2 		= LIN'LINKNUM':BLT

[COM_61850]
OI1			= "Node 'NODENUM'"
OI2 		= LIN'LINKNUM':BLT
TABS		= VECTOR("COM_MAIN")
VISIBILITY	= VECTOR(0)
POSITION	= VECTOR("B")

[STA_PCNET]
OI1			= "Station 'STANUM'"
OI2			= STA'STANUM':BST
TABS		= ("DEV_INFO", "DEV_CTRL", "ALARMS", "DEV_DIAG")
VISIBILITY	= (0, 2, 0, 0)
POSITION	= ("B", "A", "A", "A")

[STA_61850]
OI1			= "Station 'STANUM'"
OI2			= STA'STANUM':BST
TABS		= ("DEV_INFO", "DEV_CTRL", "ALARMS")
VISIBILITY	= (0, 2, 0)
POSITION	= ("B", "A", "A")


[SNMP_SWITCH_20]
TITLE		= "Network Switch Supervision"
OI1			= "Network Switch"
OI2			= 'LN':POI
TABS		= ("SWITCH_PORTS_20", "ALARMS")
VISIBILITY	= (0, 0)
POSITION	= ("B", "A")


[SNMP_SWITCH_8]
TITLE		= "Network Switch Supervision"
OI1			= "Network Switch"
OI2			= 'LN':POI
TABS		= ("SWITCH_PORTS_8", "ALARMS")
VISIBILITY	= (0, 0)
POSITION	= ("B", "A")

[SNMP_SWITCH_4]
TITLE		= "Network Switch Supervision"
OI1			= "Network Switch"
OI2			= 'LN':POI
TABS		= VECTOR("SWITCH_PORTS_4")
VISIBILITY	= VECTOR(0)
POSITION	= VECTOR("B")

[SNMP_GPS]
TITLE		= "GPS Supervision"
OI1			= "GPS"
OI2			= 'LN':POI
TABS		= ("GPS", "ALARMS")
VISIBILITY	= (0, 0)
POSITION	= ("B", "A")

[SNMP_COMPUTER]
TITLE		= "Computer Supervision"
OI1			= "Computer"
OI2			= 'LN':POI
TABS		= VECTOR("COMPUTER", "ALARMS")
VISIBILITY	= VECTOR(0, 0)
POSITION	= VECTOR("B", "A")

[SNMP_PRINTER]
TITLE		= "Printer Supervision"
OI1			= "Printer"
OI2			= 'LN':POI
TABS		= VECTOR("PRINTER", "ALARMS")
VISIBILITY	= VECTOR(0, 0)
POSITION	= VECTOR("B", "A")



;----------------------------------------------
; 			Tab section
;----------------------------------------------


[BASE_MAIN]
; Object name is prefixed with NBP_ by SSS_CtrlDlg
OBJECT		= GEN_TABLE
; VSO to load the Component, if empty or missing SSS_CTRLDLG.VSO is defaulted to
;VSO		= 
;The title shown in the tab label
TABTITLE	= "Main"
; For GEN_TABLE type of object ATTRIBUTES Vector defines what data is loaded into the table. These
; can be MicroSCADA process objects or data from file. In case of a file format is FILEx:LINENUMBER,column(or column range)
; In case the source is File, the FILEx key containing the filename needs to be defined also.
ATTRIBUTES	= ("SYS:BND", "SYS:BSA", "SYS:BER", "SYS:BNN","SYS:BON","SYS:BPR","SYS:BRE", "SYS:BCX")
; SOURCE vector specifies where and how the data is read. Possible values are "SYS", "STATIC" and "FILE"
; SYS - values are evaluated by SCIL function and variable expanded
; STATIC - values are similar to SYS, but no VARIABLE expansion is done
; FILE - Data is read from file
SOURCE		= ("SYS","SYS","SYS","SYS","SYS", "SYS", "SYS", "SYS")
; >5  not visible, 0 = visible for all, 1 = for Auth.Level 1, 2 = for Auth.Level 2, 5 = for Auth.Level 5 
VISIBILITY	= (0,0,0,0,0,0,0,0)
; How often the contents are re-read and refreshed to the table. If rate is 0 or key is missing
; the contents of the table are only refreshed when table is loaded.
;UPDATERATE = 0

; Column separator to use when reading data from file source. If attribute isn't defined space is used. 
; Separator must be a single character.
COLSEPARATOR=:
; Command executed before values are read from FILE1
FILE1_PRE	= OPS_CALL("Systeminfo >" + FM_REPRESENT(FM_SCIL_FILE("PICT/SYS_INFO.TXT")))
FILE1       = pict/Sys_Info.txt
; Command executed after values are read
FILE1_POST	= FILE_MANAGER("DELETE", FM_SCIL_FILE("PICT/SYS_INFO.TXT"))

[SYS_EXT]	; For external base system, at the moment there isn't much data available
OBJECT		= GEN_TABLE
TABTITLE	= "Main"
ATTRIBUTES	= ("'NODENUM'", "NOD'NODENUM':BSA", "NOD'NODENUM':BNN", "NOD'NODENUM':BNT", "NOD'NODENUM':BLI")
ATTRTITLES	= ("Node Number", "Station Address", "Node Name", "Node Type", "Link Number")
VISIBILITY	= (0, 0, 0, 0, 0)
SOURCE		= ("SYS", "SYS", "SYS", "SYS", "SYS")

[APL_MAIN]
OBJECT		= GEN_TABLE
TABTITLE	= "Main"
ATTRIBUTES  = ("APL'APPNUM':BNA", "APL'APPNUM':BAS", "APL'APPNUM':BAN")
VISIBILITY	= (0, 0, 0)
SOURCE		= ("SYS", "SYS", "SYS")
EVENT_UPDATE = VECTOR("'LN':10", "'LN':20")

[BASE_DIAG]
OBJECT		= GEN_TABLE
TABTITLE	= "Diagnostics"
ATTRIBUTES  = VECTOR("SYS:BME", "SYS:BMP")
VISIBILITY	= VECTOR( 0, 0)
SOURCE		= ("SYS", "SYS")
; Update interval in seconds
;UPDATERATE  = 5	

[APL_DIAG]
OBJECT		= GEN_TABLE
TABTITLE	= "Diagnostics"
ATTRIBUTES	= ("APL'APPNUM':BEM", "APL'APPNUM':BEU", "APL'APPNUM':BQM1", "APL'APPNUM':BQU1", "APL'APPNUM':BQM2", "APL'APPNUM':BQU2", "APL'APPNUM':BQM3", "APL'APPNUM':BQU3", "APL'APPNUM':BQM4", "APL'APPNUM':BQU4", "APL'APPNUM':BAC")
VISIBILITY	= (1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
ATTRTITLES	= ("Process Event Queue Max", "Process Event Queue", "Time Channel Queue Max", "Time Channel Queue", "Event Queue Max", "Event Queue", "Parallel Queues Max", "Parallel Queues", "Delayed Exec Queue Max", "Delayed Exec Queue")
SOURCE		= ("SYS", "SYS", "SYS", "SYS", "SYS", "SYS", "SYS", "SYS", "SYS", "SYS", "SYS")
UPDATERATE	= 5

[APL_CTL]
OBJECT		= APL_CTRL
TABTITLE	= "Control"
APL_CONTROL	= 2

[MON_ATTR]
OBJECT		= GEN_TABLE
TABTITLE	= "Monitor attributes"
ATTRIBUTES	= ("MON:BWP", "MON:BST", "MON:BID", "MON:BOD", "MON:BSV11")
VISIBILITY	= (5, 5, 5, 5, 5)
SOURCE		= ("SYS", "SYS", "SYS", "SYS", "SYS")
UPDATERATE	= 1

[COM_MAIN]
OBJECT		= GEN_TABLE
TABTITLE	= "Main"
ATTRIBUTES	= VECTOR("LIN'LINKNUM':BLT", "NOD'NODENUM':BNT", "NOD'NODENUM':BDI", "NOD'NODENUM':BDT", "NOD'NODENUM':BCX")
VISIBILITY	= Vector(0,0,0,0,0)
SOURCE		= VECTOR("SYS", "SYS", "SYS","SYS","SYS")
EVENT_UPDATE = VECTOR("'LN':10")

[NET_DIAG]
OBJECT		= GEN_TABLE
TABTITLE	= "Line 'PARAM2'"
PRELOAD 	= VECTOR("@TRASH = DO(READ_TEXT(""SYS_TOOL/SSS_CTRLDLG.SCL""), ""CHECK_LINE"", 'NETNUM', 'PARAM2')") 
ATTRIBUTES	= (DO(READ_TEXT("SYS_TOOL/SSS_CTRLDLG.SCL"), "TRANSLATE_IU", "NET'NETNUM':SIU'PARAM2'"), DO(READ_TEXT("SYS_TOOL/SSS_CTRLDLG.SCL"), "TRANSLATE_PO", "NET'NETNUM':SPO'PARAM2'"), "NET'NETNUM':SSD'PARAM2'", "NET'NETNUM':SLD'PARAM2'")
ATTRTITLES  = ("In Use", "Line Type", "System Device Name", "Local Address")
VISIBILITY	= (1, 1, 1, 1)
SOURCE		= ("STATIC", "STATIC", "SYS", "SYS")

[DEV_DIAG]
OBJECT		= STATION_DIAGNOSTIC_COUNTERS
VSO 		= SYS_TOOL/SYSCONF.VSO
TABTITLE	= "Diagnostics"
; PRELOAD is executed before the tabs .LOAD call
PRELOAD		= VECTOR("@TRASH = DO(READ_TEXT(""SYS_TOOL/SSS_CTRLDLG.SCL""), ""DEV_DIAG_PRELOAD"")")
; Postload is executed after the tab has been loaded. If the loading succeeded without problems.
POSTLOAD	= VECTOR("@TRSH = DO(READ_TEXT(""SYS_TOOL/SSS_CTRLDLG.SCL""), ""DEV_DIAG_POSTLOAD"", ""'t_ObjectPath'"")")

[LIN_DIAG]
OBJECT		= LINE_DIAGNOSTIC_COUNTERS
VSO			= SYS_TOOL/SYSCONF.VSO
TABTITLE	= "Diagnostics 'PARAM2'"
;Preload is evaluated and executed before the .load call
PRELOAD		= VECTOR("@TRSH = DO(READ_TEXT(""SYS_TOOL/SSS_CTRLDLG.SCL""), ""LIN_DIAG_PRELOAD"", 'PARAM2')")
; Postload is executed after the tab has been loaded. If the loading succeeded without problems.
POSTLOAD	= VECTOR("@TRSH = DO(READ_TEXT(""SYS_TOOL/SSS_CTRLDLG.SCL""), ""LIN_DIAG_POSTLOAD"", ""'t_ObjectPath'"")")
;OnSelect is called when notebook tab is selected. It is called only for the tab being selected.
ONSELECT	= VECTOR("@TRSH = DO(READ_TEXT(""SYS_TOOL/SSS_CTRLDLG.SCL""), ""LIN_DIAG_ONSELECT"", 'PARAM2')")

[DEBUG]
OBJECT		= GEN_TABLE
TABTITLE	= "Debug"
ATTRIBUTES	= VECTOR("ROOT.i_Timeout", "ROOT.i_Inactive", "ROOT.t_ObjectType", "ROOT.i_ObjectNumber", "MON:BID", "MON:BOD", "%LINKNUM")
VISIBILITY	= (0, 0, 0, 0, 0, 0, 0)
UPDATERATE	= 1
SOURCE		= ("SYS", "SYS", "SYS", "SYS", "SYS","SYS", "SYS")
ONSELECT	= VECTOR("@DBG = CONSOLE_OUTPUT(""Debug tab on select"")")

[NET_CTRL]
OBJECT 		= NET_CTRL
TABTITLE 	= "Control"
PCNET_CONTROL = 2
LINE_CONTROL = 2

[DEV_INFO]
OBJECT		= GEN_TABLE
ATTRIBUTES 	= (DO(READ_TEXT("SYS_TOOL/SSS_CTRLDLG.SCL"), "TRANSLATE_IU", "STA'STANUM':SIU"), DO(READ_TEXT("SYS_TOOL/SSS_CTRLDLG.SCL"), "GET_STATION_STATUS", "STA'STANUM':SOS"), "STA'STANUM':BST", "'STANUM'", "STA'STANUM':BND", "STA'STANUM':BCS", "STA'STANUM':BCX")
ATTRTITLES	= ("Station in use", "Status", "Station Type", "Station Number", "Node Number", "", "")
TABTITLE	= "Main"
VISIBILITY	= (0, 0, 0, 0, 0, 0, 0)
SOURCE		= ("STATIC", "STATIC", "SYS", "SYS", "SYS", "SYS", "SYS")
EVENT_UPDATE = VECTOR("'LN':10")

[DEV_CTRL]
OBJECT			= DEV_CTRL
TABTITLE 		= "Control"
; Minimum authlevels for performing the operations. Station_CONTROL set station in/out of use
; GI_CONTROL send GI to the device
; SYNC_CONTROL send Time Synchronization command to the device
STATION_CONTROL = 2
GI_CONTROL		= 1
SYNC_CONTROL	= 2
; Overrides for the default GI function
;GICALLBACK		= 
; Override for the default Time Sync fucntion
;TIMESYNCCALLBACK =

[SHAD_DIAG]
OBJECT		= GEN_TABLE
TABTITLE	= "Shadowing"
ATTRIBUTES	= ("APL'APPNUM':BSP", "APL'APPNUM':BSW", "APL'APPNUM':BSS", "APL'APPNUM':BSD1", "APL'APPNUM':BSD2", "APL'APPNUM':BSD3", "APL'APPNUM':BSD4", "APL'APPNUM':BSD5", "APL'APPNUM':BSD6", "APL'APPNUM':BSD7", "APL'APPNUM':BSD8", "APL'APPNUM':BSD9", "APL'APPNUM':BSD10")
ATTRTITLES	= ("", "", "", "Transmitted Messages", "Transmitted Commands", "Transmitted Transactions", "Transmitted Bytes", "Received Messages", "Received Commands", "Received Transactions", "Received Bytes", "RAM Dump Time", "File Dump Time")
VISIBILITY	= (0,0, 0, 0, 0,0,0,0,0,0,0,0,0)
SOURCE		= ("SYS","SYS","SYS", "SYS", "SYS", "SYS", "SYS", "SYS", "SYS", "SYS", "SYS", "SYS", "SYS")
UPDATERATE	= 5

[SWITCH_PORTS_20]
OBJECT		= GEN_TABLE
TABTITLE	= "Main"
ATTRIBUTES	= ("'LN':PSX1", "'LN':PSX2", "'LN':PSX3", "'LN':PSX4", "'LN':PSX5", "'LN':PSX6", "'LN':PSX7", "'LN':PSX8", "'LN':PSX9", "'LN':PSX10", "'LN':PSX11", "'LN':PSX12", "'LN':PSX13", "'LN':PSX14", "'LN':PSX15", "'LN':PSX16", "'LN':PSX17", "'LN':PSX18", "'LN':PSX19", "'LN':PSX20")
SOURCE		= ("SYS", "SYS","SYS","SYS","SYS","SYS","SYS","SYS","SYS","SYS","SYS","SYS","SYS","SYS","SYS","SYS","SYS","SYS","SYS","SYS")
ATTRTITLES	= ('LN':POX1, 'LN':POX2, 'LN':POX3, 'LN':POX4, 'LN':POX5, 'LN':POX6, 'LN':POX7, 'LN':POX8, 'LN':POX9, 'LN':POX10, 'LN':POX11, 'LN':POX12, 'LN':POX13, 'LN':POX14, 'LN':POX15, 'LN':POX16, 'LN':POX17, 'LN':POX18, 'LN':POX19, 'LN':POX20)
VISIBILITY	= (0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
;UPDATERATE	= 5

[SWITCH_PORTS_8]
OBJECT		= GEN_TABLE
TABTITLE	= "Main"
ATTRIBUTES	= ("'LN':PSX1", "'LN':PSX2", "'LN':PSX3", "'LN':PSX4", "'LN':PSX5", "'LN':PSX6", "'LN':PSX7", "'LN':PSX8")
SOURCE		= ("SYS", "SYS","SYS","SYS","SYS","SYS","SYS","SYS")
ATTRTITLES	= ('LN':POX1, 'LN':POX2, 'LN':POX3, 'LN':POX4, 'LN':POX5, 'LN':POX6, 'LN':POX7, 'LN':POX8)
VISIBILITY	= (0,0,0,0,0,0,0,0)
;UPDATERATE	= 5

[SWITCH_PORTS_4]
OBJECT		= GEN_TABLE
TABTITLE	= "Main"
ATTRIBUTES	= ("'LN':PSX1", "'LN':PSX2", "'LN':PSX3", "'LN':PSX4")
SOURCE		= ("SYS", "SYS","SYS","SYS")
ATTRTITLES	= ('LN':POX1, 'LN':POX2, 'LN':POX3, 'LN':POX4)
VISIBILITY	= (0,0,0,0)
;UPDATERATE	= 5

[GPS]
OBJECT		= GEN_TABLE
TABTITLE	= "Main"
ATTRIBUTES	= ("'LN':PSX1", "'LN':PSX2", "'LN':PSX3", "'LN':PSX4", "'LN':PSX5", "'LN':PSX6")
SOURCE		= ("SYS", "SYS", "SYS", "SYS", "SYS", "SYS")
ATTRTITLES  = ('LN':POX1, 'LN':POX2, 'LN':POX3, 'LN':POX4, 'LN':POX5, 'LN':POX6)
VISIBILITY	= (0,0,0,0,0,0)

[COMPUTER]
OBJECT		= GEN_TABLE
TABTITLE	= "Main"
ATTRIBUTES	= ("'LN':PSX1", "'LN':PSX2", "'LN':PSX3", "'LN':PSX4", "'LN':PSX5", "'LN':PSX6", "'LN':PSX7")
SOURCE		= ("SYS", "SYS", "SYS", "SYS", "SYS", "SYS", "SYS")
ATTRTITLES  = ('LN':POX1, 'LN':POX2, 'LN':POX3, 'LN':POX4, 'LN':POX5, 'LN':POX6, 'LN':POX7)
VISIBILITY	= (0,0,0,0,0,0,0)


[PRINTER]
OBJECT		= GEN_TABLE
TABTITLE	= "Main"
ATTRIBUTES	= ("'LN':PSX1", "'LN':PSX2", "'LN':PSX3", "'LN':PSX4", "'LN':PSX5", "'LN':PSX6", "'LN':PSX7", "'LN':PSX8")
SOURCE		= ("SYS", "SYS", "SYS", "SYS", "SYS", "SYS", "SYS", "SYS")
ATTRTITLES  = ('LN':POX1, 'LN':POX2, 'LN':POX3, 'LN':POX4, 'LN':POX5, 'LN':POX6, 'LN':POX7, 'LN':POX8)
VISIBILITY	= (0,0,0,0,0,0,0,0)


[ALARMS]
OBJECT		= ALARMS
TABTITLE	= "Alarms"
; Logical name for where to fetch and show alarms. If the key is missing the LN defined in the symbol is used.
LOGICALNAME	= "'LN'"


[APL_TAKEOVER]
OBJECT = FORCE_TAKEOVER
TABTITLE = "Forced Takeover"

