@B_PASTE_ON = ROOT.ST_IS_PASTING
#DO .ST_READ_DATA_FILE_SECTION("CALLBACK_MOTORIZED")
;#IF NOT %INITIALIZATION #THEN #BLOCK
;  #IF %STATION_TYPE=="RTU" OR %STATION_TYPE=="RTU_E" #THEN #BLOCK
;     #IF NOT %B_PASTE_ON #THEN ROOT.ST_SET_ATTRIBUTE_DEFINITION("EVENT_RECORDING",LIST(VALUE=TRUE))
;  #BLOCK_END
;  #ELSE ROOT.ST_SET_ATTRIBUTE_DEFINITION("EVENT_RECORDING",LIST(VALUE=FALSE))
;#BLOCK_END

  #CASE %STATION_TYPE
        #WHEN "SPA" #BLOCK
		#IF NOT %INITIALIZATION #THEN #BLOCK
                   #IF NOT %B_PASTE_ON #THEN #BLOCK
		      ROOT.ST_SET_ATTRIBUTE_DEFINITION("INDICATION_TYPE",LIST(VALUE="DB"))
		      ROOT.ST_SET_ATTRIBUTE_DEFINITION("CONTROL_TYPE",LIST(VALUE="SEC-4BO"))
                      ROOT.ST_SET_ATTRIBUTE_DEFINITION("BAY_LR_POLARITY",LIST(VALUE="R1"))
                   #BLOCK_END
		#BLOCK_END
	#BLOCK_END
	#WHEN "ANSI" #BLOCK
		#IF NOT %INITIALIZATION #THEN #BLOCK
                   #IF NOT %B_PASTE_ON #THEN #BLOCK
		      ROOT.ST_SET_ATTRIBUTE_DEFINITION("INDICATION_TYPE",LIST(VALUE="AI"))
		      ROOT.ST_SET_ATTRIBUTE_DEFINITION("CONTROL_TYPE",LIST(VALUE="SEC-4BO"))
                      ROOT.ST_SET_ATTRIBUTE_DEFINITION("BAY_LR_POLARITY",LIST(VALUE="R1"))
                   #BLOCK_END
		#BLOCK_END
	#BLOCK_END
	#WHEN "RTU" #BLOCK
		#IF NOT %INITIALIZATION #THEN #BLOCK
                   #IF NOT %B_PASTE_ON #THEN #BLOCK
		      ROOT.ST_SET_ATTRIBUTE_DEFINITION("INDICATION_TYPE",LIST(VALUE="DB"))
		      ROOT.ST_SET_ATTRIBUTE_DEFINITION("CONTROL_TYPE",LIST(VALUE="SEC-BO"))
                      ROOT.ST_SET_ATTRIBUTE_DEFINITION("BAY_LR_POLARITY",LIST(VALUE="R1"))
                   #BLOCK_END
		#BLOCK_END
	#BLOCK_END
	#WHEN "RTU_E" #BLOCK
		#IF NOT %INITIALIZATION #THEN #BLOCK
                   #IF NOT %B_PASTE_ON #THEN #BLOCK
		      ROOT.ST_SET_ATTRIBUTE_DEFINITION("INDICATION_TYPE",LIST(VALUE="DB"))
		      ROOT.ST_SET_ATTRIBUTE_DEFINITION("CONTROL_TYPE",LIST(VALUE="SEC-BO"))
                      ROOT.ST_SET_ATTRIBUTE_DEFINITION("BAY_LR_POLARITY",LIST(VALUE="R1"))
                   #BLOCK_END
		#BLOCK_END
	#BLOCK_END
	#WHEN "IEC101" #BLOCK
		#IF NOT %INITIALIZATION #THEN #BLOCK
                   #IF NOT %B_PASTE_ON #THEN #BLOCK
		      ROOT.ST_SET_ATTRIBUTE_DEFINITION("INDICATION_TYPE",LIST(VALUE="DB"))
		      ROOT.ST_SET_ATTRIBUTE_DEFINITION("CONTROL_TYPE",LIST(VALUE="SEC-BO"))
                      ROOT.ST_SET_ATTRIBUTE_DEFINITION("BAY_LR_POLARITY",LIST(VALUE="R1"))
                   #BLOCK_END
		#BLOCK_END
	#BLOCK_END
	#WHEN "MODBUS_RTU" #BLOCK
		#IF NOT %INITIALIZATION #THEN #BLOCK
                   #IF NOT %B_PASTE_ON #THEN #BLOCK
		      ROOT.ST_SET_ATTRIBUTE_DEFINITION("INDICATION_TYPE",LIST(VALUE="AI"))
		      ROOT.ST_SET_ATTRIBUTE_DEFINITION("CONTROL_TYPE",LIST(VALUE="SEC-4BO"))
                      ROOT.ST_SET_ATTRIBUTE_DEFINITION("BAY_LR_POLARITY",LIST(VALUE="R1"))
                   #BLOCK_END
		#BLOCK_END
	#BLOCK_END
#CASE_END

;#IF %STATION_TYPE=="RTU" OR %STATION_TYPE=="RTU_E"#THEN ROOT.ST_ENABLE_ATTRIBUTE("EVENT_RECORDING")
;#ELSE ROOT.ST_DISABLE_ATTRIBUTE("EVENT_RECORDING")


#IF %STATION_TYPE=="IEC101" #THEN #BLOCK
	ROOT.ST_ENABLE_ATTRIBUTE("CMD_PARAMETER")
	#IF %CONTROL_TYPE == "AO" #THEN ROOT.ST_SET_ATTRIBUTE_DEFINITION("CMD_PARAMETER",%CMD_PARAMETER_LIST3)
	#ELSE ROOT.ST_SET_ATTRIBUTE_DEFINITION("CMD_PARAMETER",%CMD_PARAMETER_LIST2)
	#IF NOT %INITIALIZATION #THEN #BLOCK
	  #IF NOT %B_PASTE_ON #THEN #BLOCK
		  #IF %CONTROL_TYPE <> "AO" #THEN ROOT.ST_SET_ATTRIBUTE_DEFINITION("CMD_PARAMETER",LIST(VALUE=46))
		  #ELSE ROOT.ST_SET_ATTRIBUTE_DEFINITION("CMD_PARAMETER",LIST(VALUE=48))
	  #BLOCK_END
	#BLOCK_END
#BLOCK_END
#ELSE #BLOCK
  ROOT.ST_SET_ATTRIBUTE_DEFINITION("CMD_PARAMETER",%CMD_PARAMETER_LIST)
  ROOT.ST_SET_ATTRIBUTE_DEFINITION("CMD_PARAMETER",LIST(VALUE=4))
  ROOT.ST_DISABLE_ATTRIBUTE("CMD_PARAMETER")
#BLOCK_END 