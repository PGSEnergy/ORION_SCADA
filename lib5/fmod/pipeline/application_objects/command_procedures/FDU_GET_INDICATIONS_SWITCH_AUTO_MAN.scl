;Function: FDU_GET_INDICATIONS_SWITCH_AUTO_MAN:C
;Source file: sc/lib5/base/process/application_objects/command_procedures/fdu_get_indications_switch_auto_man.scl
;Version: 1.0
;Parameters: l_object_info (contents of CD-attribute),  search_result, session number of control dialog, name of workstation
;Return data:
;Description: Calculates state of main tab and messages related to the object
;--------------------------------------------------------------------------------------------------
;Revision History
;Date       Vers.    Author Description
;--------------------------------------------------------------------------------------------------
#argument l_object_info ; , l_data
#local l_result = list(), v_attrs, t_attr, i

;**************************************************************************************************
;redirect command if application specific command procedure is found
#local t_Redirect_Proc = "APLMOD5_FDU_GET_INDICATIONS_SWITCH_AUTO_MAN"
#local i_ArgCnt, t_Redirect_Command, i_arg_loop
#if application_object_exists(0, "C", "'t_Redirect_Proc'") #then #block
   #if data_type(%REDIRECTED)=="NONE" #then #block
		#if 't_Redirect_Proc':CIU == 1 #then #block
			@REDIRECTED = true
			i_ArgCnt = argument_count
			#if sys:bdm == 1 #then t_Redirect_Command = "do('t_Redirect_Proc':C"
         #else_if 't_Redirect_Proc':ccs == 1 #then t_Redirect_Command = "do('t_Redirect_Proc':CCP"
         #else t_Redirect_Command = "do('t_Redirect_Proc':C"
			#loop_with i_arg_loop = 1 .. i_ArgCnt
				t_Redirect_Command = t_Redirect_Command + ",argument('i_arg_loop')"
				#if i_arg_loop == i_ArgCnt #then t_Redirect_Command =  t_Redirect_Command + ")"
			#loop_end
			#return 't_Redirect_Command' ;;;;;
		#block_end
	#block_end
	#else #delete REDIRECTED:V
#block_end
;**************************************************************************************************
;MAIN START

;define value convention for process data
l_result = list(-
	auto_man_indication 	= list(OV_0 = "INTERMEDIATE", OV_1 = "AUTO", OV_2 = "MANUAL", OV_3 = "FAULTY"),-
	auto_indication = list(OV_0 = "", OV_1 = "AUTO"),-
	manual_indication = list(OV_0 = "", OV_1 = "MANUAL"))

;use value convention from object type, if definition exists
#if attribute_exists(l_object_info.type_info, "value_convention") #then #block
	v_Attrs = list_attr(l_object_info.type_info.value_convention)
	#loop_with i = 1 .. length(v_Attrs)
		t_Attr = v_Attrs(i)
		#if attribute_exists(l_result, "'t_Attr'") #then -
			l_result.'t_Attr' = l_object_info.type_info.value_convention.'t_Attr'
	#loop_end
#block_end

#return l_result
