;Function: BPU_DEFINE_BAY_STATE:C
;Source file: sc/lib5/base/process/application_objects/command_procedures/bpu_define_bay_state.scl
;Version: 1.0
;Parameters: 
;Return data: 
;Description:  
;--------------------------------------------------------------------------------------------------
;Revision History
;Date       Vers.    Author Description
;--------------------------------------------------------------------------------------------------
#argument l_object_info, l_Objects

#local t_LN, v_inputs = vector, v_Outputs = vector

#local l_result = list(-
   indication_state = 0,-
   indication_missing = false,-
   control_missing = false)

t_LN = l_object_info.p_object_ln

;indication missing
#if not attribute_exists(l_objects, "bay_lr_obj_ix") #then l_result.indication_missing = true

#if l_object_info.station_type == "ANSI" #then #block
   #if l_object_info.ind_double_binary #then #block
      #if not attribute_exists(l_objects, "bay_lr_ev_obj_ix") #then l_result.indication_missing = true
   #block_end
#block_end
#else_if l_object_info.station_type == "PROC" #then #block
   #if l_object_info.ind_double_binary #then #block
      #if not attribute_exists(l_objects, "bay_lr_ev_obj_ix") or not attribute_exists(l_objects, "bay_lr_ev2_obj_ix") #then -
         l_result.indication_missing = true
   #block_end
#block_end

#if not l_result.indication_missing #then #block
   ;checks the current state for the bay local/remote-switch indication(s)
   #if attribute_exists(l_Objects, "bay_lr_ev_obj_ix") and attribute_exists(l_Objects, "bay_lr_ev2_obj_ix") #then -
      v_inputs = (l_objects.bay_lr_ev_obj_ix, l_objects.bay_lr_ev2_obj_ix)
   #else #block
      #if attribute_exists(l_Objects, "bay_lr_ev_obj_ix") #then v_inputs = vector(l_Objects.bay_lr_ev_obj_ix)
      #else v_inputs = vector(l_Objects.bay_lr_obj_ix)
   #block_end
#block_end

;control missing
#if l_object_info.lr_remotely_controllable #then #block
   #if l_object_info.ind_double_binary #then #block
      #if not attribute_exists(l_objects, "bay_lr_dis_cmd_ix") or -
         not attribute_exists(l_objects, "bay_lr_loc_cmd_ix") or -
         not attribute_exists(l_objects, "bay_lr_rem_cmd_ix") or -
         not attribute_exists(l_objects, "bay_lr_res_cmd_ix") #then l_result.control_missing = true
   #block_end
   
   #if l_object_info.station_type == "IEC61850" #then #block
      #if not attribute_exists(l_objects, "bay_lr_dis_cmd_ix") #then l_result.control_missing = true
   #block_end
   #else #block
      #if not attribute_exists(l_objects, "bay_lr_loc_cmd_ix") or -
      not attribute_exists(l_objects, "bay_lr_rem_cmd_ix") #then l_result.control_missing = true
   #block_end
   
   #if  not l_result.control_missing #then #block
      #if l_object_info.ind_double_binary #then -
         v_Outputs = (l_objects.bay_lr_dis_cmd_ix, l_objects.bay_lr_loc_cmd_ix, l_objects.bay_lr_rem_cmd_ix, l_objects.bay_lr_res_cmd_ix)
      #else #block
         #if l_object_info.station_type <> "IEC61850" #then -
            v_Outputs = (l_objects.bay_lr_loc_cmd_ix, l_objects.bay_lr_rem_cmd_ix)
         #else -
            v_Outputs = vector(l_objects.bay_lr_dis_cmd_ix)
      #block_end
   #block_end
   
#block_end

l_result = do(bpu_get_po_attribute_states:c, v_Inputs, v_Outputs, t_LN, l_result)

#if l_result.i_connection_os < 10 #then l_result.indication_state = 't_ln':pov'l_objects.bay_lr_obj_ix'

#return l_result
