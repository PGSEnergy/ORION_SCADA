;Function: BPU_GET_INDICATIONS_TRAFO:C
;Source file: sc/lib5/base/process/application_objects/command_procedures/bpu_get_indications_trafo.scl
;Version: 1.0
;Parameters: l_object_info (contents of CD-attribute),  search_result, session number of control dialog, name of workstation
;Return data:
;Description: returns the value convention for process data
;--------------------------------------------------------------------------------------------------
;Revision History
;Date       Vers.    Author Description
;--------------------------------------------------------------------------------------------------
#argument l_object_info
#local l_result = list(), v_attrs, t_attr, i, l_objects =list(), l_ied_bay_convention = list()

#if argument_count > 1 #then l_objects = argument(2)

;define value convention for process data
l_result = list(-
   tap_position_9 = list(TYPE = "INTEGER"),-
   voltage_9 = list(TYPE = "REAL"),-
   counter_9 = list(TYPE = "INTEGER"),-
   reference_voltage_9 = list(TYPE = "REAL"),-
   auto_manual_operation_mode_3 = list(OV_0 = "MANUAL", OV_1 = "AUTO"),-
   auto_manual_operation_mode_12 = list(OV_0 = "INTERMEDIATE", OV_1 = "MANUAL", OV_2 = "AUTO", OV_3 = "FAULTY"),-
   co_operation_mode_3 = list(OV_0 = "SINGLE", OV_1 = "PARALLEL"),-
   co_operation_mode_12 = list(OV_0 = "INTERMEDIATE", OV_1 = "SINGLE", OV_2 = "PARALLEL", OV_3 = "FAULTY"),-
   co_operation_role_3 = list(OV_0 = "SLAVE", OV_1 = "MASTER"),-
   master_3 = list(OV_0 = "", OV_1 = "MASTER"),-
   follower_3 = list(OV_0 = "", OV_1 = "FOLLOWER"),-
   ext_blocked_3 = list(OV_0 = "RELEASED", OV_1 = "BLOCKED"),-
   ext_blocked_9 = list(OV_0 = "RELEASED", OV_1 = "RELEASED", OV_2 = "BLOCKED"),-
   logical_node_loc = list(OV_0 = "REMOTE", OV_1 = "LOCAL"),-
   bay_lr_bi = list(OV_0 = "REMOTE", OV_1 = "LOCAL"),-
   bay_lr_db = list(OV_0 = "DISABLED", OV_1 = "LOCAL", OV_2 = "REMOTE", OV_3 = "RESERVED"),-
   bay_lr_ai = list(OV_0 = "DISABLED", OV_1 = "LOCAL", OV_2 = "REMOTE", OV_3 = "ERROR", OV_4 = "ERROR", OV_5 = "ALL"),-
   bay_op_db = list(OV_0 = "NONE", OV_1 = "STATION", OV_2 = "REMOTE", OV_3 = "BOTH"))

;trafo objects have bay_lr_polarity configuration for binary input
#if attribute_exists(l_object_info, "bay_lr_polarity") #then #block
   #if l_object_info.bay_lr_polarity == "R1" #then l_result.bay_lr_bi = list(OV_0 = "LOCAL", OV_1 = "REMOTE")
   #else_if l_object_info.bay_lr_polarity == "L1" #then l_result.bay_lr_bi = list(OV_1 = "LOCAL", OV_0 = "REMOTE")
#block_end

;trafo objects have auto/manual polarity configuration
#if attribute_exists(l_object_info, "auto_manual_ind_type") #then #block
   #if l_object_info.auto_manual_ind_type == 2 #then l_result.auto_manual_operation_mode_3= list(OV_0 = "AUTO", OV_1 = "MANUAL")
   #else_if l_object_info.auto_manual_ind_type == 4 #then l_result.auto_manual_operation_mode_12 = list(OV_0 = "INTERMEDIATE", OV_2 = "MANUAL", OV_1 = "AUTO", OV_3 = "FAULTY")
#block_end

l_ied_bay_convention = do(bpu_bay_lr_conventions:c, l_objects)
#if length(l_ied_bay_convention) > 0 #then l_result = merge_attributes(l_result, l_ied_bay_convention)

;use value convention from object type, if definition exists
#if attribute_exists(l_object_info.type_info, "value_convention") #then #block
   v_Attrs = list_attr(l_object_info.type_info.value_convention)
   #loop_with i = 1 .. length(v_Attrs)
      t_Attr = v_Attrs(i)
      #if attribute_exists(l_result, "'t_Attr'") #then -
         l_result.'t_Attr' = l_object_info.type_info.value_convention.'t_Attr'
   #loop_end
#block_end

#return l_result