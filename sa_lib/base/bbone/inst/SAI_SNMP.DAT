;OBJECT       : SAI_SNMP.DAT
;Copyright Hitachi Power Grids. All rights reserved.
;
;DESCRIPTION  : The configuration file for the SNMP devices
;	                             
;----------------------------------------------------------------------------------------------------------------------------

##FUNC_INIT_BEGIN

@'.ID'_PICTURE_FUNCTION_CONF = LIST(-
   CREATED_BY                 = "SA_LIB",-
   CONFIG_DATA_FILE           = "?CONF_FILE?",-
   STATION_NAME               = "",-
   BAY_NAME                   = "",-
   DEVICE_NAME                = "",-
   SPECIAL_IDENTIFIER_1       = "",-
   SPECIAL_IDENTIFIER_2       = "",-
   SPECIAL_IDENTIFIER_3       = "",-
   P_OBJECT_LN                = "",-
   P_OBJECT_INDEXES           = "",-
   SNMP_DEVICE_TEMPLATE       = "",-
   STATION_TYPE               = "SPA",-
   AUTHORIZATION_GROUP        = "SUPERVISION",-
   SA_LIB_INDEXES             = "0,0,0")

##FUNC_INIT_END

##FUNC_DEF_BEGIN

;define correct representation list
@REPR_LIST=""
#CASE .STANDARD_FUNCTION_NAME
   #WHEN "B_INST/BCI_LINDS" @REPR_LIST = ("B_REPR/B_INDS1",-
                                          "B_REPR/B_INDS2",-
                                          "B_REPR/B_INDS3",-
                                          "B_REPR/B_INDS4")
   #WHEN "B_INST/BCI_LINDM" @REPR_LIST = ("B_REPR/B_INDM1",-
                                          "B_REPR/B_INDM2",-
                                          "B_REPR/B_INDM3",-
                                          "B_REPR/B_INDM4")
   #WHEN "B_INST/BCI_LINDL" @REPR_LIST = ("B_REPR/B_INDL1",-
                                          "B_REPR/B_INDL2",-
                                          "B_REPR/B_INDL3",-
                                          "B_REPR/B_INDL4")
#CASE_END


;check the usage of object identification (OI) -attribute
@S = STATUS
@POINTER_STA  = 0
@POINTER_BAY  = 0
@POINTER_DEV  = 0
#ERROR IGNORE
@APL_BSV15      = APL:BSV15
@PROCESSOBJECTS = APL_BSV15:VPROCESS_OBJECTS
@OI             = PROCESSOBJECTS:VOI
#LOOP_WITH I = 1 .. 30
  #IF DATA_TYPE(OI:VLENGTH'I')=="INTEGER" #THEN #BLOCK  
    @OI_LENGTH'I' = OI:VLENGTH'I'
    ;if field in use
    #IF %OI_LENGTH'I' > 0 #THEN #BLOCK  
      @NR_OF_FIELDS = %I
      @OI_TITLE'I'  = OI:VTITLE'I'
      @OI_FIELD'I'  = OI:VFIELD'I'
      #IF      LENGTH(SELECT(%OI_FIELD'I',"==""STA"""))>0 #THEN @POINTER_STA = %I
      #ELSE_IF LENGTH(SELECT(%OI_FIELD'I',"==""BAY"""))>0 #THEN @POINTER_BAY = %I
      #ELSE_IF LENGTH(SELECT(%OI_FIELD'I',"==""DEV"""))>0 #THEN @POINTER_DEV = %I
    #BLOCK_END
    #ELSE #BLOCK
      @OI_TITLE'I'  = ""
      @OI_FIELD'I'  = ""
    #BLOCK_END
  #BLOCK_END
  #ELSE #LOOP_EXIT
#LOOP_END
#ERROR CONTINUE

;set defaults if APL:BSV15 not correctly defined
@S = STATUS
#IF %S <> 0 #THEN #BLOCK
  @OI_TITLE1    = "Substation"
  @OI_TITLE2    = "Bay"
  @OI_TITLE3    = "Device"
  @OI_TITLE4    = ""
  @OI_TITLE5    = ""
  @OI_LENGTH1   = 10
  @OI_LENGTH2   = 15
  @OI_LENGTH3   = 5
  @OI_LENGTH4   = 0
  @OI_LENGTH5   = 0
  @POINTER_STA  = 1
  @POINTER_BAY  = 2
  @POINTER_DEV  = 3
  @NR_OF_FIELDS = 3
#BLOCK_END

;set configurable attributes according to OI-configuration
@NR_OF_SPECIAL_FIELD = 0
@OBJECT_IDENTIFIERS  = VECTOR()

#LOOP_WITH I = 1 .. 30
  #IF %I <= %NR_OF_FIELDS #THEN #BLOCK  

    ;define the name of the configurable attribute
    #IF      %I == %POINTER_STA #THEN @OBJECT_IDENTIFIER_'I'_NAME = "STATION_NAME"
    #ELSE_IF %I == %POINTER_BAY #THEN @OBJECT_IDENTIFIER_'I'_NAME = "BAY_NAME"
    #ELSE_IF %I == %POINTER_DEV #THEN @OBJECT_IDENTIFIER_'I'_NAME = "DEVICE_NAME"
    #ELSE #BLOCK
      @NR_OF_SPECIAL_FIELD = %NR_OF_SPECIAL_FIELD + 1
      @OBJECT_IDENTIFIER_'I'_NAME = "SPECIAL_IDENTIFIER_'NR_OF_SPECIAL_FIELD'"
    #BLOCK_END

    ;set one space between different fields
    #IF %I < %NR_OF_FIELDS AND %OI_LENGTH'I' > 1 #THEN @OBJECT_IDENTIFIER_'I'_MAX_LENGTH = %OI_LENGTH'I' - 1
    #ELSE @OBJECT_IDENTIFIER_'I'_MAX_LENGTH = %OI_LENGTH'I'

    ;create a list of previously used identifiers
    @SECTION  = %OBJECT_IDENTIFIER_'I'_NAME
    @KEYS     = VECTOR()
    #LOOP_WITH J = 1 .. 10
      @NEW_KEY= "'SECTION''J'"
      @KEY'J' = READ_PARAMETER("PICT/OBJ_IDEN.INI",%SECTION,%NEW_KEY)
      @KEY    = %KEY'J'
      #IF KEY:VSTATUS == 0 #THEN #BLOCK
        @KEYS = APPEND(%KEYS,KEY:VVALUE)
       #BLOCK_END
    #LOOP_END
    @OBJECT_IDENTIFIER_'I'_VALUES = %KEYS

 
    ;set configuration for SCT
    @OBJECT_IDENTIFIER_'I' = LIST(-
         NAME       = %OBJECT_IDENTIFIER_'I'_NAME,-
         TYPE       = "EDITABLE_SELECTOR",-
         INPUT_TYPE = "TEXT",-
         VALUES     = %OBJECT_IDENTIFIER_'I'_VALUES,-
         REPRESENT  = %OBJECT_IDENTIFIER_'I'_VALUES,-
         MAX_LENGTH = %OBJECT_IDENTIFIER_'I'_MAX_LENGTH)
    @OBJECT_IDENTIFIERS = APPEND(%OBJECT_IDENTIFIERS, %OBJECT_IDENTIFIER_'I')

  #BLOCK_END
  #ELSE #LOOP_EXIT
#LOOP_END

;create a list of all existing authorization groups
#ERROR IGNORE
@AUTHORIZATION_GROUPS = LIST_ATTR(MON:BSV(9))
#IF DATA_TYPE(%AUTHORIZATION_GROUPS) <> "VECTOR" #THEN @AUTHORIZATION_GROUPS = VECTOR()
#ERROR CONTINUE

@apl_name = APL:BNA

@l_Result =read_parameter("/apl/'apl_name'/APLMOD4/INST/SAI_SNMP.TPL",  "DEVICE_TEMPLATES", "DEVICE_TYPES")

#if %l_Result.STATUS <> 0 #then -
   @l_Result =read_parameter("\sc\sa_lib\base\bbone\inst\SAI_SNMP.TPL",  "DEVICE_TEMPLATES", "DEVICE_TYPES")

#if %l_Result.STATUS == 0 #then #block
   @SNMP_DEVICE_VALUES = separate(%l_Result.VALUE, ",")
   @SNMP_DEVICE_REPR = %SNMP_DEVICE_VALUES
#block_end
#else #block
   @SNMP_DEVICE_VALUES = separate(%l_Result.VALUE, ",")
   @SNMP_DEVICE_REPR = %SNMP_DEVICE_VALUES
#block_end

@FUNC_DEF=LIST(-
      CONFIGURABLE_ATTRIB =   ("STATION_NAME",-
                               "BAY_NAME",-
                               "DEVICE_NAME",-
                               "SPECIAL_IDENTIFIER_1",-
                               "SPECIAL_IDENTIFIER_2",-
                               "SPECIAL_IDENTIFIER_3",-
                               "P_OBJECT_LN",-
                               "P_OBJECT_INDEXES",-
                               "STATION_TYPE",-
                               "SNMP_DEVICE_TEMPLATE",-
                               "REPRESENTATION"),-
      SCT_ATTRIBUTES      = (LIST(NAME       =  "P_OBJECT_LN",-
                                  TYPE       =  "TEXT",-
                                  MAX_LENGTH =  63),-
                             LIST(NAME       =  "SNMP_DEVICE_TEMPLATE",-
                                  TYPE       =  "SELECTOR",-
                                  VALUES     = %SNMP_DEVICE_VALUES,-
                                  REPRESENT  = %SNMP_DEVICE_REPR),-
                             LIST(NAME       =  "AUTHORIZATION_GROUP",-
                                  TYPE       =  "EDITABLE_SELECTOR",-
                                  INPUT_TYPE =  "TEXT",-
                                  VALUES     =  %AUTHORIZATION_GROUPS,-
                                  REPRESENT  =  %AUTHORIZATION_GROUPS,-
                                  MAX_LENGTH =  63)),-
      SCT_HELP_FILE       = "SAGR_LANG/SAI_SNMP.HLP",-
      REPR_ATTRIBUTES     =  LIST(NAME       =  "REPRESENTATION",-
                                  VALUES     =  %REPR_LIST),-
      REPR_USER_PROGS     = "")  

;add configurable attributes for object identifiers
#SET FUNC_DEF:VSCT_ATTRIBUTES = APPEND(%OBJECT_IDENTIFIERS, FUNC_DEF:VSCT_ATTRIBUTES)

;read object identification from database when SCT opens
@S = STATUS
#ERROR IGNORE
@PRODUCT_ID = .PRODUCT_ID
#ERROR CONTINUE
@S = STATUS
#IF %S == 0 #THEN #BLOCK
  #IF UPPER_CASE(.PRODUCT_ID) == "PF_CONF" #THEN #BLOCK
    #ERROR IGNORE
    @S = STATUS
    @DB_LN = 'ID'_PICTURE_FUNCTION_CONF:VP_OBJECT_LN
    @DB_IX = 'ID'_PICTURE_FUNCTION_CONF:VP_OBJECT_INDEXES(1)
    @DB_OI = 'DB_LN':POI'DB_IX'
    @OI_START_POS = 1
    #ERROR CONTINUE
    @S = STATUS
    #IF %S == 0 #THEN #BLOCK
      #LOOP_WITH I = 1..30
        #IF  %I <= %POINTER_STA AND %I < %NR_OF_FIELDS #THEN #BLOCK  
          @TEXT_FROM_DB = EDIT(SUBSTR(%DB_OI,%OI_START_POS,%OI_LENGTH'I'-1),"TRIM")
          @CONF_VALUE = .ST_GET_ATTRIBUTE(%OBJECT_IDENTIFIER_'I'_NAME)
          #IF %TEXT_FROM_DB <> %CONF_VALUE #THEN .ST_SET_ATTRIBUTE(%OBJECT_IDENTIFIER_'I'_NAME,%TEXT_FROM_DB)
          @OI_START_POS = %OI_START_POS + %OI_LENGTH'I'
        #BLOCK_END
        #ELSE_IF %I == %POINTER_STA AND %I == %NR_OF_FIELDS #THEN #BLOCK  
          @TEXT_FROM_DB = EDIT(SUBSTR(%DB_OI,%OI_START_POS,%OI_LENGTH'I'),"TRIM")
          @CONF_VALUE = .ST_GET_ATTRIBUTE(%OBJECT_IDENTIFIER_'I'_NAME)
          #IF %TEXT_FROM_DB <> %CONF_VALUE #THEN .ST_SET_ATTRIBUTE(%OBJECT_IDENTIFIER_'I'_NAME,%TEXT_FROM_DB)
          @OI_START_POS = %OI_START_POS + %OI_LENGTH'I'
        #BLOCK_END
        #ELSE #LOOP_EXIT
      #LOOP_END
    #BLOCK_END
  #BLOCK_END
#BLOCK_END

##FUNC_DEF_END



;-------- Define Configuration Tool Menu -----------------
##MENU_TXT_BEGIN

   .ENABLE_POT
   .ENABLE_REPRESENTATION_TOOL

##MENU_TXT_END

##MENU_PROG_BEGIN

##MENU_PROG_END


;-------- Define Visual SCIL Tools -----------------
##TOOLS_BEGIN

##TOOLS_END


;-------- Define Process Objects -----------------
##P_OBJECTS_BEGIN

;read object texts
;#DO READ_TEXT("SAGR_LANG/SAI_SNMP.TXT")

#DO READ_TEXT("SAGR_INST/SAI_SNMP.POT")
     
##P_OBJECTS_END


;-------- Program Executed when OK -----------------
##OK_BEGIN

##OK_END


;-------- Program Executed when CANCEL -----------------
##CANCEL_BEGIN
 
##CANCEL_END


;-------- Program Executed when DELETE -----------------
##DELETE_BEGIN

##DELETE_END
