;read object texts

#DO READ_TEXT("SAGR_LANG/SAI_PROT.TXT")

;collect information for object identifier (OI-attribute)
@OBJ_IDENT
#LOOP_WITH I = 1 .. %NR_OF_FIELDS
  @FIELD_IDENT = %OBJECT_IDENTIFIER_'I'_NAME
  @OBJ_IDENT=%OBJ_IDENT+SUBSTR('ID'_PICTURE_FUNCTION_CONF:V'FIELD_IDENT',1,%OI_LENGTH'I')
#LOOP_END

;collect information for RX-attribute
@ADDITIONAL_IDENT= SUBSTR("",1,10)
@UNIT_IDENT = SUBSTR("",1,10)

;create needed scales, command procedures and event channels

;define 1:1 scale for AI object if it does not exist
@X_SEARCH=FETCH(0,"X","1_1")
#IF X_SEARCH:VIU == -1 #THEN #BLOCK
  #CREATE 1_1:X = LIST(SA = 0)
#BLOCK_END

;initialize variables
@DX
@HE
@PF
@LD
@P_OBJ01
@P_OBJ02
@P_OBJECTS = LIST()

@v_NrOffInstances = length('ID'_PICTURE_FUNCTION_CONF:VDATA_OBJECT)

;filter out Mod, Beh, Health,NamePlt. Rel, Enaopn, EnaCls,  .t, .q ...
@v_FilteredDOs = vector
#if file_manager("EXISTS",fm_scil_file("sagr_bbone/Scl_DO_Filter.txt")) #then -
   @v_FilteredDOs = read_text("sagr_bbone/Scl_DO_Filter.txt")

@v_Filtered_indexes = vector

#loop_with i = 1 .. %v_NrOffInstances
   @v_Data = separate('ID'_PICTURE_FUNCTION_CONF:VDATA_OBJECT(%i), ";")
   @t_CDC = %v_Data(1)
   #if length(%v_Data) > 1 #then #block
      @v_Data1 = separate(%v_Data(2), ".")
      #if length(%v_Data1) > 1 #then #block
         #if length(select(locate(%v_FilteredDOs, %v_Data1(1)), ">0")) > 0 #then #block
            @Dos = pick(%v_FilteredDOs,select(locate(%v_FilteredDOs, %v_Data1(1)), ">0"))
            #loop_with j = 1 .. length(%Dos)
               #if %DOs(%j) == %v_Data1(1) #then @v_Filtered_indexes = append(%v_Filtered_indexes, %i)
            #loop_end
         #block_end
         #else_if  %v_Data1(2) == "q" or %v_Data1(2) == "d" or %v_Data1(2) == "t" #then @v_Filtered_indexes = append(%v_Filtered_indexes, %i)
      #block_end
   #block_end
#loop_end

#set 'ID'_PICTURE_FUNCTION_CONF:VDATA_OBJECT = delete_element('ID'_PICTURE_FUNCTION_CONF:VDATA_OBJECT, %v_Filtered_indexes)
#set 'ID'_PICTURE_FUNCTION_CONF:VDATA_TEXT = delete_element('ID'_PICTURE_FUNCTION_CONF:VDATA_TEXT, %v_Filtered_indexes)

@v_NrOffInstances = length('ID'_PICTURE_FUNCTION_CONF:VDATA_OBJECT)

@i_PO_Index = 10
#loop_with i = 1 .. %v_NrOffInstances
   @v_Data = separate('ID'_PICTURE_FUNCTION_CONF:VDATA_OBJECT(%i), ";")
   #if length(%v_Data) > 1 #then #block
      @t_CDC = %v_Data(1)
      @t_Data_Object_Attribute = %v_Data(2)      
      #if %t_CDC == "ACT" or %t_CDC == "ACD" #then #block
         @v_Data1 = separate(%v_Data(2), ".")
         #if length(%v_Data1) > 1 #then #block
            #if substr(%v_Data1(2), 1, 3) == "dir" #then @t_CDC = "MV"
         #block_end
      #block_end
      @b_Create = true

      @t_OPC_Prefix = 'ID'_PICTURE_FUNCTION_CONF:VOPC_ITEM_PREFIX
      @v_LN_PROT_Instances(1) = 'ID'_PICTURE_FUNCTION_CONF:VOPC_LN_INSTANCES(1)
      @in(%i) = %t_OPC_Prefix + "." + %v_LN_PROT_Instances(1) + ".'t_Data_Object_Attribute'"
      #if substr(%in(%i),length(%in(%i))-1,0) == ".f" #then @in(%i) = substr(%in(%i),1,length(%in(%i))-2)

      @v_DA_Check = separate(%in(%i), ".")
      @t_DA_Check = %v_DA_Check(length(%v_DA_Check))
      
      #if file_manager("EXISTS",fm_scil_file("sagr_bbone/SCL_Included_DA.txt")) #then #block
         @v_included_DAs = vector
         @v_included_DAs = read_text("sagr_bbone/SCL_Included_DA.txt")
         @v_Compare = select(locate(%v_included_DAs, %t_DA_Check), ">0")
         #if length(%v_Compare) > 0 #then #block
            @b_Create = false
            #loop_with ii = 1 ..  length(%v_Compare)
               #if equal(%v_included_DAs(%v_Compare(%ii)), %t_DA_Check) #then @b_Create = true
            #loop_end 
          #block_end
          #else @b_Create = false
      #block_end         

      #case %t_CDC
         #when "ACT", "ACD" #block
            #case 'id'_Picture_Function_Conf:VStation_Type
               #when "SPA" #block
                  @dx(%i) = "N7S"
               #block_end
               #when "LON" #block
                  @dx(%i) = "X7S"
               #block_end
               #when "IEC101", "IEC103", "ICCP" #block
                  @dx(%i) = "C3"
               #block_end
               #when "ANSI" #block
                  @dx(%i) = "3"
               #block_end
               #when "RTU" #block
                  @dx(%i) = "I7S"
               #block_end
               #when "RTU_E" #block
                  @dx(%i) = "R7S"
               #block_end
               #when "DNP_30" #block
                  @dx(%i) = "D3"
               #block_end
               #when "MODBUS_RTU" #block
                  @dx(%i) = "I7S"
               #block_end
               #when "IEC61850" #block
                  @dx(%i) = "E7S"
               #block_end
            #case_end
            #if substr(%v_Data1(1), 1, 3) == "Str" #then #block
               @eh(%i) = "SAGR_PROT_STR"
               @ac(%i) = 0
               @rx(%I) = %ADDITIONAL_IDENT+%UNIT_IDENT+"FPFMFUISTR"
            #block_end
            #else #block
               @eh(%i) = "SAGR_PROT_TRP"
               @ac(%i) = 1
               @rx(%I) = %ADDITIONAL_IDENT+%UNIT_IDENT+"FPFTRPITRP"
            #block_end
            
            @pt(%i) = 3
            @hf(%i) = 1
         #block_end
         #when "SPS", "SPC" #block
            #case 'id'_Picture_Function_Conf:VStation_Type
               #when "SPA" #block
                  @dx(%i) = "N7S"
               #block_end
               #when "LON" #block
                  @dx(%i) = "X7S"
               #block_end
               #when "IEC101", "IEC103", "ICCP" #block
                  @dx(%i) = "C3"
               #block_end
               #when "ANSI" #block
                  @dx(%i) = "3"
               #block_end
               #when "RTU" #block
                  @dx(%i) = "I7S"
               #block_end
               #when "RTU_E" #block
                  @dx(%i) = "R7S"
               #block_end
               #when "DNP_30" #block
                  @dx(%i) = "D3"
               #block_end
               #when "MODBUS_RTU" #block
                  @dx(%i) = "I7S"
               #block_end
               #when "IEC61850" #block
                  @dx(%i) = "E7S"
               #block_end
            #case_end
            @eh(%i) = "SAGR_FORM5FPBI1_0"
            @ac(%i) = 0
            @rx(%I) = %ADDITIONAL_IDENT+%UNIT_IDENT+"FPFMFUIINS"
            @pt(%i) = 3
            @hf(%i) = 0
         #block_end
         #when "DPS", "DPC" #block
            #case 'id'_Picture_Function_Conf:VStation_Type
               #when "SPA" #block
                  @dx(%i) = "N7D"
               #block_end
               #when "LON" #block
                  @dx(%i) = "X7D"
               #block_end
               #when "IEC101", "IEC103", "ICCP" #block
                  @dx(%i) = "C12"
               #block_end
               #when "ANSI" #block
                  @dx(%i) = "12"
               #block_end
               #when "RTU" #block
                  @dx(%i) = "I7D"
               #block_end
               #when "RTU_E" #block
                  @dx(%i) = "R7D"
               #block_end
               #when "DNP_30" #block
                  @dx(%i) = "D12"
               #block_end
               #when "MODBUS_RTU" #block
                  @dx(%i) = "I7D"
               #block_end
               #when "IEC61850" #block
                  @dx(%i) = "E7D"
               #block_end
            #case_end
            @eh(%i) = "SAGR_FORM5FPDB1_0"
            @ac(%i) = 0
            @rx(%I) = %ADDITIONAL_IDENT+%UNIT_IDENT+"FPFMFUIINS"
            @pt(%i) = 12
            @hf(%i) = 0
         #block_end
         #when "MV", "CMV", "INC", "INS", "ENS", "ENC" #block
            #case 'id'_Picture_Function_Conf:VStation_Type
               #when "SPA" #block
                  @dx(%i) = "N6"
               #block_end
               #when "LON" #block
                  @dx(%i) = "X6"
               #block_end
               #when "IEC101", "IEC103", "ICCP" #block
                  @dx(%i) = "C9"
               #block_end
               #when "ANSI" #block
                  @dx(%i) = "9"
               #block_end
               #when "RTU" #block
                  @dx(%i) = "I6"
               #block_end
               #when "RTU_E" #block
                  @dx(%i) = "R6"
               #block_end
               #when "DNP_30" #block
                  @dx(%i) = "D9"
               #block_end
               #when "MODBUS_RTU" #block
                  @dx(%i) = "I6"
               #block_end
               #when "IEC61850" #block
                  @dx(%i) = "E6"
               #block_end
            #case_end
            @eh(%i) = "SAGR_FORM5FPAI3_1"
            @ac(%i) = 0
            @rx(%I) = %ADDITIONAL_IDENT+%UNIT_IDENT+"FPFMFUIINS"
            @pt(%i) = 9
            @hf(%i) = 0
         #block_end
         #otherwise @b_Create = false
      #case_end

      #if %b_create #then #block
         @pf(%i) = "FORM5SAGR1"
         @ld(%i) = BIT_MASK(1)
         @he(%i) = 1
         @ri(%i) = 0
         @s = status
         #error ignore
         @ox(%i) = 'ID'_PICTURE_FUNCTION_CONF:VDATA_TEXT(%i)
         #if (status <> 0) #then @ox(%i) = 'ID'_PICTURE_FUNCTION_CONF:VDATA_OBJECT(%i)
         #if length(%ox(%i)) == 0 #then @ox(%i) = 'ID'_PICTURE_FUNCTION_CONF:VDATA_OBJECT(%i)
      
         #create P_OBJ0'I':V = list
         #MODIFY P_OBJ0'I':v = LIST(-
          IX = %i_PO_Index,-                                    ;index = 10
          PT = %PT(%i),-                                 ;process object type = BI
          DX = %DX(%I),-                                 ;directive text
          OI = %OBJ_IDENT,-                              ;substation & bay name
          OX = %OX(%I),-                                 ;object text
          IU = 1,-                                       ;in use = yes
          SS = 2,-                                       ;switch state = auto
          EE = 1,-                                       ;event enable = yes
          HE = %HE(%i),-                                 ;history enable
          HA = 1,-                                       ;history activation = new value
          HF = %HF(%i),-                                       ;history at first update = no
          HL = BIT_MASK(15),-                            ;history log number = 15
          RC = 1,-                                       ;receipt = acknowledgement required
          AC = %AC(%I),-                                 ;alarm class = 1
          AD = 0,-                                       ;alarm delay = 0
          PD = 0,-                                       ;picture device = none
          PI = "",-                                      ;alarm picture
          PF = %PF(%I),-                                 ;physical format for printout
          RI = %RI(%i),-                                 ;dynamic texts for printout
          PA = 1,-                                       ;printout activation = new value
          PU = 0,-                                       ;picture/ printout at first update = no
          IN = %IN(%I),-
          LD = %LD(%I),-                                 ;listing device
          EH = %EH(%I),-
          RX = %RX(%i)) ;data acquisition unit and group information

          #case %t_CDC
             #when "ACD", "SPS", "SPC" #block
                #modify P_OBJ0'I':v = LIST(AG = 1) ;alarming value = 1
             #block_end
             #when "MV", "CMV", "INS", "INC", "ENS", "ENC" #block
                 #modify P_OBJ0'I':v = LIST(SN = "1_1") ;scale = 1
             #block_end
          #case_end
          #MODIFY P_OBJECTS:V = LIST(P_OBJ0'I'=%P_OBJ0'I')
          @i_PO_Index = %i_PO_Index + 1
      #block_end
   #block_end
#loop_end