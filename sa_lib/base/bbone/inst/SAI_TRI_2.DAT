;OBJECT       : SAI_TRI_2.DAT
;Copyright Hitachi Power Grids. All rights reserved.
;
;DESCRIPTION  : The configuration data file for the tap changer standard function
;                                
;--------------------------------------------------------------------------------

##FUNC_INIT_BEGIN

@'.ID'_PICTURE_FUNCTION_CONF= LIST(-
   CREATED_BY                    = "SA_LIB",-
      CONFIG_DATA_FILE           = "?CONF_FILE?",-
      LIB_REVISION               = " 3.0",-
      P_OBJECT_LN                ="",-
      STATION_NAME               ="",-
      BAY_NAME                   ="",-
      DEVICE_NAME                ="",-
      SPECIAL_IDENTIFIER_1       ="",-
      SPECIAL_IDENTIFIER_2       ="",-
      SPECIAL_IDENTIFIER_3       ="",-
      REPRESENTATION             ="F_REPR/F_TRANS1",-
      P_OBJECT_INDEXES           ="",-
      STATION_TYPE               ="IEC61850",-
      DEFINE_ITEM_NAME           = FALSE,-
      OBJECT_TYPE_DESCRIPTION    = "B5_USE/BPU_TRAFO.scl",-
      OPC_ITEM_PREFIX            = "IEC61850 Subnetwork.IED1.LD1",-
      OPC_LN_INSTANCES           = VECTOR("ATCC1"),-
      CMD_PARAMETER              =5,-
      OUTPUT_STATUS              =FALSE,-
      MAX_POSITION               =19,-
      MIN_POSITION               =1,-
      AUTO_MANUAL_IND_TYPE       =1,-  ;1,2,3,4
      TRANSFORMER_TYPE           ="TR2",-
      DATA_ACQUISITION_UNIT      ="",-
      LIB_OBJECT_TYPE            = "",-
      DA_CONFIG_FILE             = "",-
      TOPO_OBJECT_TYPE           = "TRANSFORMER",-
      TOPO_OBJECT_X_POS          =(16,16,0,32),-
      TOPO_OBJECT_Y_POS          =(0,40,20,20),-
      TOPO_OBJECT_COLOR1_NR      = 36,-
      TOPO_OBJECT_COLOR2_NR      = 36,-
      TOPO_OBJECT_COLOR3_NR      = 36,-
      TOPO_OBJECT_PARAMETER_FILE = "SAGR_INST/SAI_HVT2.TXT",-
      TOPO_OBJECT_TEMPLATE_FILE  = "SAGR_INST/SAI_HVT2.TPL",-
      TOPO_OBJECT_COLOR_SPLIT    = "NONE",-
      CONTROL_DIALOG_WINDOW      = "MNOPER",-
      CONTROL_DIALOG             = "F_USE/FPU_TRB",-
      AUTHORIZATION_GROUP        ="MV_CONTROL",-
      BAY_LR_POLARITY            = "L1",-
      EVENT_RECORDING            = FALSE,-
      DEFAULT_TYPE_PF            = "SAGR_TAP",-
      SA_LIB_INDEXES             = "0,30,14",-
      CHANGE_TAP                 = TRUE,-
      CHANGE_TAP_TO_POS          = FALSE,-
      DIRECT_TAP_POS_SETTING     = FALSE,-
      UNIT_NUMBER                = 0,-
      SHORT_ADDRESS              = VECTOR(""),-
      PARALLEL_SETTING           = FALSE,-
      OPERATION_MODE             = "SINGLE",-  ;"SINGLE", "M_S", "NRP", "MCC"
      OPERATOR_PLACE_HANDLING      = "NONE",-
      CREATE_TOPO_INTL_CAUSE       = FALSE,-
      TYPE_PF                    = "?REQUIRED_PF_NAME?")

;attributes for busbar coloring
#MODIFY '.ID'_PICTURE_FUNCTION_CONF:V = LIST( -
   TOPO_OBJECT_SWITCH1_IX             = 240,-
   TOPO_OBJECT_SWITCH2_IX             = 241,-
   TOPO_OBJECT_SWITCH3_IX             = 242,-
   TOPO_OBJECT_PASSIVE_NODE1_IX       = 246,-
   TOPO_OBJECT_PASSIVE_NODE2_IX       = 247,-
   TOPO_OBJECT_COLOR1_IX              = 250,-
   TOPO_OBJECT_COLOR2_IX              = 251,-
   TOPO_OBJECT_SWITCH6_IX             = 253,-
   TOPO_OBJECT_SWITCH7_IX             = 254)

##FUNC_INIT_END

##FUNC_DEF_BEGIN

;returns @DATA_ACQUISITION_UNITS
#DO READ_TEXT("SAGR_INST/SAI_DAU.TXT")

;check the usage of object identification (OI) -attribute
@S = STATUS
@POINTER_STA  = 0
@POINTER_BAY  = 0
@POINTER_DEV  = 0
#ERROR IGNORE
@APL_BSV15      = APL:BSV15
@PROCESSOBJECTS = APL_BSV15:VPROCESS_OBJECTS
@OI             = PROCESSOBJECTS:VOI
#LOOP_WITH I = 1 .. 30
  #IF DATA_TYPE(OI:VLENGTH'I')=="INTEGER" #THEN #BLOCK  
    @OI_LENGTH'I' = OI:VLENGTH'I'
    ;if field in use
    #IF %OI_LENGTH'I' > 0 #THEN #BLOCK  
      @NR_OF_FIELDS = %I
      @OI_TITLE'I'  = OI:VTITLE'I'
      @OI_FIELD'I'  = OI:VFIELD'I'
      #IF      LENGTH(SELECT(%OI_FIELD'I',"==""STA"""))>0 #THEN @POINTER_STA = %I
      #ELSE_IF LENGTH(SELECT(%OI_FIELD'I',"==""BAY"""))>0 #THEN @POINTER_BAY = %I
      #ELSE_IF LENGTH(SELECT(%OI_FIELD'I',"==""DEV"""))>0 #THEN @POINTER_DEV = %I
    #BLOCK_END
    #ELSE #BLOCK
      @OI_TITLE'I'  = ""
      @OI_FIELD'I'  = ""
    #BLOCK_END
  #BLOCK_END
  #ELSE #LOOP_EXIT
#LOOP_END
#ERROR CONTINUE

;set defaults if APL:BSV15 not correctly defined
@S = STATUS
#IF %S <> 0 #THEN #BLOCK
  @OI_TITLE1    = "Substation"
  @OI_TITLE2    = "Bay"
  @OI_TITLE3    = "Device"
  @OI_TITLE4    = ""
  @OI_TITLE5    = ""
  @OI_LENGTH1   = 10
  @OI_LENGTH2   = 15
  @OI_LENGTH3   = 5
  @OI_LENGTH4   = 0
  @OI_LENGTH5   = 0
  @POINTER_STA  = 1
  @POINTER_BAY  = 2
  @POINTER_DEV  = 3
  @NR_OF_FIELDS = 3
#BLOCK_END

;set configurable attributes according to OI-configuration
@NR_OF_SPECIAL_FIELD = 0
@OBJECT_IDENTIFIERS  = VECTOR()

#LOOP_WITH I = 1 .. 30
  #IF %I <= %NR_OF_FIELDS #THEN #BLOCK  

    ;define the name of the configurable attribute
    #IF      %I == %POINTER_STA #THEN @OBJECT_IDENTIFIER_'I'_NAME = "STATION_NAME"
    #ELSE_IF %I == %POINTER_BAY #THEN @OBJECT_IDENTIFIER_'I'_NAME = "BAY_NAME"
    #ELSE_IF %I == %POINTER_DEV #THEN @OBJECT_IDENTIFIER_'I'_NAME = "DEVICE_NAME"
    #ELSE #BLOCK
      @NR_OF_SPECIAL_FIELD = %NR_OF_SPECIAL_FIELD + 1
      @OBJECT_IDENTIFIER_'I'_NAME = "SPECIAL_IDENTIFIER_'NR_OF_SPECIAL_FIELD'"
    #BLOCK_END

    ;set one space between different fields
    #IF %I < %NR_OF_FIELDS AND %OI_LENGTH'I' > 1 #THEN @OBJECT_IDENTIFIER_'I'_MAX_LENGTH = %OI_LENGTH'I' - 1
    #ELSE @OBJECT_IDENTIFIER_'I'_MAX_LENGTH = %OI_LENGTH'I'

    ;create a list of previously used identifiers
    @SECTION  = %OBJECT_IDENTIFIER_'I'_NAME
    @KEYS     = VECTOR()
    #LOOP_WITH J = 1 .. 10
      @NEW_KEY= "'SECTION''J'"
      @KEY'J' = READ_PARAMETER("PICT/OBJ_IDEN.INI",%SECTION,%NEW_KEY)
      @KEY    = %KEY'J'
      #IF KEY:VSTATUS == 0 #THEN #BLOCK
        @KEYS = APPEND(%KEYS,KEY:VVALUE)
       #BLOCK_END
    #LOOP_END
    @OBJECT_IDENTIFIER_'I'_VALUES = %KEYS

    ;set configuration for SCT
    @OBJECT_IDENTIFIER_'I' = LIST(-
         NAME       = %OBJECT_IDENTIFIER_'I'_NAME,-
         TYPE       = "EDITABLE_SELECTOR",-
         INPUT_TYPE = "TEXT",-
         VALUES     = %OBJECT_IDENTIFIER_'I'_VALUES,-
         REPRESENT  = %OBJECT_IDENTIFIER_'I'_VALUES,-
         MAX_LENGTH = %OBJECT_IDENTIFIER_'I'_MAX_LENGTH)
    @OBJECT_IDENTIFIERS = APPEND(%OBJECT_IDENTIFIERS, %OBJECT_IDENTIFIER_'I')
  #BLOCK_END
  #ELSE #LOOP_EXIT
#LOOP_END

;supported protocols
@STATION_TYPE_VALUES     = ("SPA",-
                            "ANSI",-
                            "LON",-
                            "RTU",-
                            "RTU_E",-
                            "IEC101",-
                            "IEC103",-
                            "ICCP")
@STATION_TYPE_REPRESENT  = ("SPA",-
                            "ANSI",-
                            "LON",-
                            "RP570",-
                            "RP570 with FTABs",-
                            "IEC 870-5-101/104",-
                            "IEC 870-5-103",-
                            "ICCP")

#IF ROOT.ST_GET_LIB_REVISION > " 2.3" #THEN #BLOCK
   @STATION_TYPE_VALUES = APPEND(%STATION_TYPE_VALUES,("DNP_30","MODBUS_RTU"))
   @STATION_TYPE_REPRESENT = APPEND(%STATION_TYPE_REPRESENT,("DNP 3.0","MODBUS RTU"))
#BLOCK_END

@STATION_TYPE_VALUES    = APPEND(%STATION_TYPE_VALUES, VECTOR("PROC"))
@STATION_TYPE_REPRESENT = APPEND(%STATION_TYPE_REPRESENT, VECTOR("PROCOL"))

#IF ROOT.ST_GET_LIB_REVISION > " 2.9" #THEN #BLOCK
   @STATION_TYPE_VALUES = APPEND(%STATION_TYPE_VALUES,("IEC61850"))
   @STATION_TYPE_REPRESENT = APPEND(%STATION_TYPE_REPRESENT,("IEC 61850-8"))
#BLOCK_END

;lists for cmd parameter
@CMD_PARAMETER_LIST1 = LIST(-
     VALUES    = (4,-
                  5,-
                  6),-
     REPRESENT = ("Select-Operate",-
                  "Direct",-
                  "Direct-No ack."))

@CMD_PARAMETER_LIST2 = LIST(-
     VALUES    = (45,-
                  46,-
                  58,-
                  59),-
     REPRESENT = ("Single command (ASDU 45)",-
                  "Double command (ASDU 46)",-
                  "Single command with time tag (ASDU 58)",-
                  "Double command with time tag (ASDU 59)"))
                  
;set default lists for cmd parameter
@CMD_PARAMETER_VALUES    = CMD_PARAMETER_LIST1:VVALUES
@CMD_PARAMETER_REPRESENT = CMD_PARAMETER_LIST1:VREPRESENT

#ERROR IGNORE
@AUTHORIZATION_GROUPS = LIST_ATTR(MON:BSV(9))
#IF DATA_TYPE(%AUTHORIZATION_GROUPS) <> "VECTOR" #THEN @AUTHORIZATION_GROUPS = VECTOR()
#ERROR CONTINUE
#IF ROOT.ST_GET_LIB_REVISION > " 2.3" #THEN #BLOCK
         @FUNC_DEF=LIST(-
         CONFIGURABLE_ATTRIB = ("REPRESENTATION",-
                                "P_OBJECT_LN",-
                                "P_OBJECT_INDEXES",-
                                "BAY_NAME",-
                                "DEVICE_NAME",-
                                "SPECIAL_IDENTIFIER_1",-
                                "SPECIAL_IDENTIFIER_2",-
                                "SPECIAL_IDENTIFIER_3",-
                                "STATION_NAME",-
                                "STATION_TYPE",-
                                "OPC_ITEM_PREFIX",-
                                "OPC_LN_INSTANCES",-
                                "CMD_PARAMETER",-
                                "OUTPUT_STATUS",-
                                "MIN_POSITION",-
                                "MAX_POSITION",-
                                "AUTO_MANUAL_IND_TYPE",-
                                "TRANSFORMER_TYPE",-
                                "PRIMARY_POSITION",-
                                "TOPO_OBJECT_TYPE",-
                                "PRIMARY_POSITION",-
                                "TOPO_OBJECT_PRIMARY_POS",-
                                "TOPO_OBJECT_TYPE",-
                                "EVENT_RECORDING",-
                                "BAY_LR_POLARITY",-
                                "AUTHORIZATION_GROUP"),-
          SCT_ATTRIBUTES = (LIST(NAME = "MIN_POSITION",-
               TYPE = "INTEGER"),-   
                            LIST(NAME = "MAX_POSITION",-
               TYPE = "INTEGER"),-
                            LIST(NAME = "P_OBJECT_LN",-
                                 TYPE = "TEXT",-
                            MAX_LENGTH =  63),-
                            LIST(NAME       =  "STATION_TYPE",-
                                  TYPE       =  "SELECTOR",-
                                  VALUES     =  %STATION_TYPE_VALUES,-
                                  REPRESENT  =  %STATION_TYPE_REPRESENT,-
                                  CHANGE_CALLBACK   =  VECTOR("#DO .ST_READ_DATA_FILE_SECTION(""CALLBACK_STATION_TYPE"")")),-
                            LIST(NAME              =  "DEFINE_ITEM_NAME",-
                                  TYPE              =  "BOOLEAN",-
                                  CHANGE_CALLBACK   =  VECTOR("#DO .ST_READ_DATA_FILE_SECTION(""CALLBACK_DEFINE_ITEM_NAME"")")),-
                            LIST(NAME              =  "OPC_ITEM_PREFIX",-
                                  TYPE              =  "TEXT",-
                                  MAX_LENGTH        =  255),-
                            LIST(NAME              =  "OPC_LN_INSTANCES",-
                                  TYPE              =  "VECTOR",-
                                  ELEMENT_TYPE      =  "TEXT",-
                                  MAX_LENGTH        =  4,-
                                  MAX_ELEMENT_LENGTH=  15,-
                                  MIN_ELEMENT_LENGTH=  0),-
                            LIST(NAME       =  "CMD_PARAMETER",-
                                  TYPE       =  "SELECTOR",-
                                  VALUES          =  %CMD_PARAMETER_VALUES,-
                                  REPRESENT       =  %CMD_PARAMETER_REPRESENT),-
                            LIST(NAME           =  "OUTPUT_STATUS",-
                                 TYPE           =  "BOOLEAN"),-
                            LIST(NAME    =  "OPERATION_MODE",-
                                  TYPE   =  "SELECTOR",-
                                  VALUES = ("SINGLE",-
                                            "M_S",-
                                            "NRP",- 
                                            "MCC"),-
                                REPRESENT= ("Single",-
                                            "Parallel - Master/Slave",-
                                            "Parallel - Negative Reactance Principle (NRP)",-
                                            "Parallel - Minimizing Circulating Current (MCC)")),-
                            LIST(NAME = "AUTO_MANUAL_IND_TYPE",-
                                 TYPE = "SELECTOR",-
                                 VALUES = (1,2,3,4),-
                                 REPRESENT = ("0=MANUAL, 1=AUTO (BI)",-
                                              "0=AUTO, 1=MANUAL (BI)",-
                                              "01=MANUAL, 10=AUTO (DB)",- 
                                              "01=AUTO, 10=MANUAL (DB)")),-
                            LIST(NAME    = "TRANSFORMER_TYPE",-
                                  TYPE   = "SELECTOR",-
                                  VALUES = VECTOR("TR2","TR3","TR4"),-
                                REPRESENT= VECTOR("2-winding","3-winding","4-winding"),-
                                CHANGE_CALLBACK   =  VECTOR("#DO .ST_READ_DATA_FILE_SECTION(""CALLBACK_TRANSFORMER_TYPE"")")),-
                            LIST(NAME       = "AUTHORIZATION_GROUP",-
                                 TYPE       = "EDITABLE_SELECTOR",-
                                 INPUT_TYPE = "TEXT",-
                                 VALUES     = %AUTHORIZATION_GROUPS,-
                                 REPRESENT  = %AUTHORIZATION_GROUPS),-
                           LIST(NAME        =  "OPERATOR_PLACE_HANDLING",-
                                 TYPE       =  "SELECTOR",-
                                 VALUES     =  ("NONE",-
                                                "LOC",-
                                                "LOCSTA",-
                                                "LOC_AND_LOCSTA"),-
                       REPRESENT               =  ("None",-
                                                "Loc",-
                                                "LocSta",-
                                                "Loc and LocSta")),-
                            LIST(NAME = "BAY_LR_POLARITY",-
                                 TYPE = "SELECTOR",-
                                 VALUES = ("R1",-
                                           "L1"),-
                                 REPRESENT = ("Local=0,Remote=1",-
                                              "Remote=0,Local=1")),-
                            LIST(NAME = "DIRECT_TAP_POS_SETTING",-
                                 TYPE  = "BOOLEAN"),-
                            LIST(NAME = "EVENT_RECORDING",-
                                 TYPE  = "BOOLEAN")),-
                            SCT_HELP_FILE = "SAGR_LANG/SAI_TR2.HLP",-
                         SCT_USER_PROGS = ("U_OTHER_OBJECTS"),-
                            REPR_ATTRIBUTES     = (LIST(NAME  =  "REPRESENTATION",-
                            VALUES    = "")),-
                            REPR_USER_PROGS     = ("U_DRAW_FIGURE"))
#BLOCK_END

;add configurable attributes for object identifiers
#SET FUNC_DEF:VSCT_ATTRIBUTES = APPEND(%OBJECT_IDENTIFIERS, FUNC_DEF:VSCT_ATTRIBUTES)

@v_files = vector("")
@source_dir = fm_scil_directory("/SA_LIB/DEFAULTS/OBJECT_TYPES")
#if DIRECTORY_MANAGER("EXISTS", %source_dir) #then @v_files = append(%v_files, fm_represent(file_manager("LIST",%source_dir,"*.dat")))

@t_Apl = apl:bna
@source_dir = fm_scil_directory("/APL/'t_Apl'/APLMOD4/DEFAULTS/OBJECT_TYPES")
#if DIRECTORY_MANAGER("EXISTS", %source_dir) #then @v_files = append(%v_files, fm_represent(file_manager("LIST",%source_dir,"*.dat")))

@v_files = remove_duplicates(%v_files)

#CREATE L_ITEM_NAME:V = LIST(NAME  = "LIB_OBJECT_TYPE",-
                       TYPE      =  "SELECTOR",-
                       VALUES    =  %v_files,-
                       REPRESENT =  %v_files)

@I_START = LENGTH(%OBJECT_IDENTIFIERS)
#SET FUNC_DEF:VSCT_ATTRIBUTES = INSERT_ELEMENT(FUNC_DEF:VSCT_ATTRIBUTES, %I_START + 1, %L_ITEM_NAME)

;read object identification from database when SCT opens
@S = STATUS
#ERROR IGNORE
@PRODUCT_ID = .PRODUCT_ID
#ERROR CONTINUE
@S = STATUS
#IF %S == 0 #THEN #BLOCK
  #IF UPPER_CASE(.PRODUCT_ID) == "PF_CONF" #THEN #BLOCK
    #ERROR IGNORE
    @S = STATUS
    @DB_LN = 'ID'_PICTURE_FUNCTION_CONF:VP_OBJECT_LN
    @DB_IX = 'ID'_PICTURE_FUNCTION_CONF:VP_OBJECT_INDEXES(1)
    @DB_OI = 'DB_LN':POI'DB_IX'
    @OI_START_POS = 1
    #ERROR CONTINUE
    @S = STATUS
    #IF %S == 0 #THEN #BLOCK
      #LOOP_WITH I = 1..30
        #IF %I < %NR_OF_FIELDS #THEN #BLOCK  
          @TEXT_FROM_DB = EDIT(SUBSTR(%DB_OI,%OI_START_POS,%OI_LENGTH'I'-1),"TRIM")
          @CONF_VALUE = .ST_GET_ATTRIBUTE(%OBJECT_IDENTIFIER_'I'_NAME)
          #IF %TEXT_FROM_DB <> %CONF_VALUE #THEN .ST_SET_ATTRIBUTE(%OBJECT_IDENTIFIER_'I'_NAME,%TEXT_FROM_DB)
          @OI_START_POS = %OI_START_POS + %OI_LENGTH'I'
        #BLOCK_END
        #ELSE_IF %I == %NR_OF_FIELDS #THEN #BLOCK  
          @TEXT_FROM_DB = EDIT(SUBSTR(%DB_OI,%OI_START_POS,%OI_LENGTH'I'),"TRIM")
          @CONF_VALUE = .ST_GET_ATTRIBUTE(%OBJECT_IDENTIFIER_'I'_NAME)
          #IF %TEXT_FROM_DB <> %CONF_VALUE #THEN .ST_SET_ATTRIBUTE(%OBJECT_IDENTIFIER_'I'_NAME,%TEXT_FROM_DB)
          @OI_START_POS = %OI_START_POS + %OI_LENGTH'I'
        #BLOCK_END
        #ELSE #LOOP_EXIT
      #LOOP_END
    #BLOCK_END
  #BLOCK_END
#BLOCK_END
##FUNC_DEF_END

;-------- Callback programs -----------------

;callback station type
##CALLBACK_STATION_TYPE_BEGIN

@STATION_TYPE = ROOT.ST_GET_ATTRIBUTE("STATION_TYPE")
#IF %STATION_TYPE=="RTU" OR %STATION_TYPE=="RTU_E" #THEN ROOT.ST_SET_ATTRIBUTE_DEFINITION("EVENT_RECORDING",LIST(VALUE=TRUE))
#ELSE ROOT.ST_SET_ATTRIBUTE_DEFINITION("EVENT_RECORDING",LIST(VALUE=FALSE))

#IF %STATION_TYPE=="RTU" OR %STATION_TYPE=="RTU_E" OR %STATION_TYPE=="DNP_30" #THEN ROOT.ST_ENABLE_ATTRIBUTE("EVENT_RECORDING")
#ELSE ROOT.ST_DISABLE_ATTRIBUTE("EVENT_RECORDING")

#IF ROOT.ST_GET_LIB_REVISION > " 2.3" #THEN #BLOCK
   #IF %STATION_TYPE=="DNP_30" #THEN #BLOCK
     ROOT.ST_ENABLE_ATTRIBUTE("CMD_PARAMETER")
      ROOT.ST_SET_ATTRIBUTE_DEFINITION("CMD_PARAMETER",%CMD_PARAMETER_LIST1)
      #IF ROOT.ST_GET_ATTRIBUTE("CMD_PARAMETER") == 4 #THEN -                     ;TL 28.02.2001
          ROOT.ST_SET_ATTRIBUTE_DEFINITION("CMD_PARAMETER",LIST(VALUE=4))         ;TL
      #ELSE_IF ROOT.ST_GET_ATTRIBUTE("CMD_PARAMETER") == 5 #THEN -                ;TL                                                  ;AB
          ROOT.ST_SET_ATTRIBUTE_DEFINITION("CMD_PARAMETER",LIST(VALUE=5))         ;TL
      #ELSE -                             ;TL
          ROOT.ST_SET_ATTRIBUTE_DEFINITION("CMD_PARAMETER",LIST(VALUE=6))         ;TL
   #BLOCK_END
   #ELSE_IF %STATION_TYPE=="IEC101" OR %STATION_TYPE=="ICCP" #THEN #BLOCK
      ROOT.ST_ENABLE_ATTRIBUTE("CMD_PARAMETER")
      ROOT.ST_SET_ATTRIBUTE_DEFINITION("CMD_PARAMETER",%CMD_PARAMETER_LIST2)
      #IF ROOT.ST_GET_ATTRIBUTE("CMD_PARAMETER") == 45 #THEN -                    ;AB 30.10.2k
          ROOT.ST_SET_ATTRIBUTE_DEFINITION("CMD_PARAMETER",LIST(VALUE=45))        ;AB
      #ELSE -                                                                     ;AB
          ROOT.ST_SET_ATTRIBUTE_DEFINITION("CMD_PARAMETER",LIST(VALUE=46))
   #BLOCK_END
   #ELSE #BLOCK
      ROOT.ST_SET_ATTRIBUTE_DEFINITION("CMD_PARAMETER",LIST(VALUE=4))
      ROOT.ST_DISABLE_ATTRIBUTE("CMD_PARAMETER")
   #BLOCK_END 
   #IF %STATION_TYPE <> "DNP_30" #THEN #BLOCK
      ROOT.ST_SET_ATTRIBUTE_DEFINITION("OUTPUT_STATUS",LIST(VALUE=FALSE))
      ROOT.ST_DISABLE_ATTRIBUTE("OUTPUT_STATUS")
   #BLOCK_END
   #IF %STATION_TYPE == "IEC61850" #THEN #BLOCK
      #IF NOT %INITIALIZATION #THEN #BLOCK
         ROOT.ST_SET_ATTRIBUTE_DEFINITION("BAY_LR_POLARITY",LIST(VALUE="L1"))
         ROOT.ST_SET_ATTRIBUTE_DEFINITION("AUTO_MANUAL_IND_TYPE",LIST(VALUE=1))
         ROOT.ST_ENABLE_ATTRIBUTE("DEFINE_ITEM_NAME")
      #BLOCK_END
   #BLOCK_END
   #ELSE #BLOCK
      #IF NOT %INITIALIZATION #THEN #BLOCK
         ROOT.ST_SET_ATTRIBUTE_DEFINITION("BAY_LR_POLARITY",LIST(VALUE="R1"))
         ROOT.ST_SET_ATTRIBUTE_DEFINITION("AUTO_MANUAL_IND_TYPE",LIST(VALUE=3))
      #BLOCK_END
   #BLOCK_END
#BLOCK_END

#IF %STATION_TYPE <> "IEC61850" #THEN #BLOCK

   ROOT.ST_DISABLE_ATTRIBUTE("DIRECT_TAP_POS_SETTING")
   ROOT.ST_SET_ATTRIBUTE_DEFINITION("DIRECT_TAP_POS_SETTING",LIST(VALUE=FALSE))
   ROOT.ST_DISABLE_ATTRIBUTE("DEFINE_ITEM_NAME")
   ROOT.ST_DISABLE_ATTRIBUTE("OPC_ITEM_PREFIX")
   ROOT.ST_DISABLE_ATTRIBUTE("OPC_LN_INSTANCES")
   ROOT.ST_SET_ATTRIBUTE_DEFINITION("OPC_ITEM_PREFIX",LIST(VALUE=""))
   ROOT.ST_SET_ATTRIBUTE_DEFINITION("OPC_LN_INSTANCES",LIST(VALUE=VECTOR()))  
   ROOT.ST_DISABLE_ATTRIBUTE("OPERATOR_PLACE_HANDLING")   

#BLOCK_END
#ELSE #BLOCK

   ROOT.ST_ENABLE_ATTRIBUTE("OPERATOR_PLACE_HANDLING")
   ROOT.ST_ENABLE_ATTRIBUTE("DIRECT_TAP_POS_SETTING")
   #IF ROOT.ST_GET_ATTRIBUTE("DEFINE_ITEM_NAME") #THEN #BLOCK
      ROOT.ST_ENABLE_ATTRIBUTE("OPC_ITEM_PREFIX")
      ROOT.ST_ENABLE_ATTRIBUTE("OPC_LN_INSTANCES")
   #BLOCK_END
   #ELSE #BLOCK
      ROOT.ST_DISABLE_ATTRIBUTE("OPC_ITEM_PREFIX")
      ROOT.ST_DISABLE_ATTRIBUTE("OPC_LN_INSTANCES")
   #BLOCK_END

#BLOCK_END


##CALLBACK_STATION_TYPE_END

##CALLBACK_DEFINE_ITEM_NAME_BEGIN
   #IF ROOT.ST_GET_ATTRIBUTE("DEFINE_ITEM_NAME") #THEN #BLOCK
      ROOT.ST_ENABLE_ATTRIBUTE("OPC_ITEM_PREFIX")
      ROOT.ST_ENABLE_ATTRIBUTE("OPC_LN_INSTANCES")
      #IF ROOT.ST_GET_ATTRIBUTE("OPC_ITEM_PREFIX") == "" #THEN  ROOT.ST_SET_ATTRIBUTE_DEFINITION("OPC_ITEM_PREFIX",LIST(VALUE="IEC61850 Subnetwork.IED1.LD1"))
      @v_tmp = ROOT.ST_GET_ATTRIBUTE("OPC_LN_INSTANCES")
      @v_LNs = vector("ATCC")
      #IF LENGTH(%v_tmp) == 0 #THEN ROOT.ST_SET_ATTRIBUTE_DEFINITION("OPC_LN_INSTANCES",LIST(VALUE=%v_LNs))
      #ELSE_IF %v_tmp(1) == "" #THEN ROOT.ST_SET_ATTRIBUTE_DEFINITION("OPC_LN_INSTANCES",LIST(VALUE=%v_LNs))
   #BLOCK_END
   #ELSE #BLOCK
      ROOT.ST_DISABLE_ATTRIBUTE("OPC_ITEM_PREFIX")
      ROOT.ST_DISABLE_ATTRIBUTE("OPC_LN_INSTANCES")
   #BLOCK_END
##CALLBACK_DEFINE_ITEM_NAME_END

;-------- SCT Initialization -----------------
##SCT_INIT_BEGIN
  @INITIALIZATION = TRUE
  #DO .ST_READ_DATA_FILE_SECTION("CALLBACK_STATION_TYPE")
  #DO .ST_READ_DATA_FILE_SECTION("CALLBACK_TRANSFORMER_TYPE")
  @INITIALIZATION = FALSE
##SCT_INIT_END

;-------- Define Configuration Tool Menu -----------------
##MENU_TXT_BEGIN
   .ENABLE_POT
   .ENABLE_REPRESENTATION_TOOL
##MENU_TXT_END


##MENU_PROG_BEGIN

##MENU_PROG_END


;-------- Define Process Objects -----------------
##P_OBJECTS_BEGIN
   #error stop
   #IF 'ID'_PICTURE_FUNCTION_CONF:VDIRECT_TAP_POS_SETTING #THEN #BLOCK
      #SET 'ID'_PICTURE_FUNCTION_CONF:VCHANGE_TAP_TO_POS = TRUE
   #BLOCK_END
   #DO READ_TEXT("SAGR_INST/SAI_TRI_2.POT",1,10000)

##P_OBJECTS_END

;-------- Program Executed when OK -----------------
##OK_BEGIN

;save the object identifier (OI-attribute) for the future use
#LOOP_WITH I = 1 .. %NR_OF_FIELDS
  @SECTION    = %OBJECT_IDENTIFIER_'I'_NAME
  @CONF_VALUE = .ST_GET_ATTRIBUTE(%SECTION)

  ;if field not empty
  #IF %CONF_VALUE<>"" #THEN #BLOCK
    ;check if identifier already exists
    @NEW_IDENTIFIER=TRUE
    #LOOP_WITH J = 1 .. 10
      @KEY          = "'SECTION''J'"
      @KEY_VALUE'J' = READ_PARAMETER("PICT/OBJ_IDEN.INI",%SECTION,%KEY)
      @KEY_VALUE    = %KEY_VALUE'J'
      #IF KEY_VALUE:VSTATUS == 0 #THEN #BLOCK
        #IF KEY_VALUE:VVALUE == %CONF_VALUE #THEN @NEW_IDENTIFIER=FALSE
      #BLOCK_END
    #LOOP_END

    ;replace the last identifier with a new one
    #IF %NEW_IDENTIFIER #THEN #BLOCK
      #LOOP_WITH J = 1 .. 9
        @CNTR1 = 10 - %J
        @CNTR2 = %CNTR1 + 1
        @KEY_OLD = "'SECTION''CNTR1'"
        @KEY_NEW = "'SECTION''CNTR2'"
        @KEY_VALUE'CNTR1' = READ_PARAMETER("PICT/OBJ_IDEN.INI",%SECTION,%KEY_OLD)
        @KEY_PREV = %KEY_VALUE'CNTR1'
        #IF KEY_PREV:VSTATUS == 0 #THEN #BLOCK
          @KEY_OLD_VALUE = KEY_PREV:VVALUE
          @NEW = WRITE_PARAMETER("PICT/OBJ_IDEN.INI",%SECTION,%KEY_NEW,%KEY_OLD_VALUE)
          @OLD = DELETE_PARAMETER("PICT/OBJ_IDEN.INI",%SECTION,%KEY_OLD)
        #BLOCK_END
      #LOOP_END
      @FIRST_KEY = "'SECTION'"+"1"
      @KEY'I' = WRITE_PARAMETER("PICT/OBJ_IDEN.INI",%SECTION,%FIRST_KEY,%CONF_VALUE)
    #BLOCK_END
  #BLOCK_END
#LOOP_END

#IF 'ID'_PICTURE_FUNCTION_CONF:VLIB_OBJECT_TYPE <> "" #THEN #BLOCK
   @t_OT = 'ID'_PICTURE_FUNCTION_CONF:VLIB_OBJECT_TYPE
   #if length(path("SAGR_OT")) == 0 #then #block
      @source_dir = fm_scil_directory("/SA_LIB/DEFAULTS/OBJECT_TYPES")
      #if DIRECTORY_MANAGER("EXISTS", %source_dir) #then #block
         #PATH SAGR_OBJT  +NO_CREATE, /SA_LIB/DEFAULTS/OBJECT_TYPES
      #block_end
   
      @t_Apl = apl:bna
      @source_dir = fm_scil_directory("/APL/'t_Apl'/APLMOD4/DEFAULTS/OBJECT_TYPES")
      #if DIRECTORY_MANAGER("EXISTS", %source_dir) #then #block
         #PATH SAGR_OBJT  +NO_CREATE, /APL/'T_APL'/APLMOD4/DEFAULTS/OBJECT_TYPES
      #block_end
   #block_end
   @s = status
   #error ignore
   @l_OT_Attributes = evaluate(read_text("SAGR_OBJT/'t_OT'"))
   #if (status == 0) #then #block
      #if data_type(l_OT_Attributes:vSA_LIB_INDEXES) <> "NONE" #then #block
        #set 'ID'_PICTURE_FUNCTION_CONF:VSA_LIB_INDEXES = l_OT_Attributes:vSA_LIB_INDEXES
      #block_end
      #if data_type(l_OT_Attributes:vSYN_IND_IX) <> "NONE" #then #block
        #set 'ID'_PICTURE_FUNCTION_CONF:VSYN_IND_IX = l_OT_Attributes:vSYN_IND_IX
      #block_end
   #block_end
#BLOCK_END

##OK_END

;-------- Program Executed when CANCEL -----------------
##CANCEL_BEGIN
 
 
 
##CANCEL_END

;-------- Program Executed when DELETE -----------------
##DELETE_BEGIN



##DELETE_END


