;read object texts
#DO READ_TEXT("SAGR_LANG/SAI_ME.TXT")
@OBJ_IDENT
#LOOP_WITH I = 1 .. %NR_OF_FIELDS
  @FIELD_IDENT = %OBJECT_IDENTIFIER_'I'_NAME
  @OBJ_IDENT=%OBJ_IDENT+SUBSTR('ID'_PICTURE_FUNCTION_CONF:V'FIELD_IDENT',1,%OI_LENGTH'I')
#LOOP_END

;create needed scales, command procedures and event channels

;command procedure for updating objects from the process
@C_SEARCH = FETCH(0,"C","BGU_UPDATE")
#IF C_SEARCH:VIU == -1 #THEN #BLOCK
  #CREATE BGU_UPDATE:C = LIST(-
       IU = 1,-
       MO = 1,-
       CM = FPI_ME:VUPDATE_COMMENT,-
       IN = ("",-
             "#DO READ_TEXT(""SAGR_BBONE/BGU_UPDATE.TXT"")"))
#BLOCK_END

;define 1:1 scale for AI object if it does not exist
@X_SEARCH=FETCH(0,"X","1_1")
#IF X_SEARCH:VIU == -1 #THEN #BLOCK
  #CREATE 1_1:X = LIST(SA = 0)
#BLOCK_END

;create needed scales
#CASE 'ID'_PICTURE_FUNCTION_CONF:VSTATION_TYPE
  #WHEN "ANSI" #BLOCK
    ;define 1/1000 scale for ANSI-AI object if it does not exist
    @X_SEARCH = FETCH(0,"X","BGU_1_1000")
    #IF X_SEARCH:VIU == -1 #THEN #BLOCK
      #CREATE BGU_1_1000:X = LIST(SA = 1, SC = (0,1000,0,1))
    #BLOCK_END
  #BLOCK_END
#CASE_END

;initialize variables
@IX
@DX
@HE
@ST
@SN
@SZ
@PF
@LD
@TYPE
@P_OBJ01
@P_OBJ02
@P_OBJ03
@P_OBJ04
@P_OBJ05
@P_OBJ06
@P_OBJ07
@P_OBJ08
@P_OBJECTS   = LIST()

;measurement objects
#LOOP_WITH I=1..4
  @TMP_CHECK = VECTOR()
  #LOOP_WITH J=1..%I
    @TMP_CHECK =APPEND(%TMP_CHECK,'ID'_PICTURE_FUNCTION_CONF:VTYPE_MEAS_'J')
  #LOOP_END
  #IF LENGTH('ID'_PICTURE_FUNCTION_CONF:VTYPE_MEAS_'I') > 0 AND LENGTH(SELECT(%TMP_CHECK,"=='ID'_PICTURE_FUNCTION_CONF:VTYPE_MEAS_'I'"))==1 #THEN #BLOCK

    @IX   = DEC_SCAN(SUBSTR('ID'_PICTURE_FUNCTION_CONF:VTYPE_MEAS_'I',4,0))
    @TYPE = SUBSTR('ID'_PICTURE_FUNCTION_CONF:VTYPE_MEAS_'I',1,3)
    @DP   = 'ID'_PICTURE_FUNCTION_CONF:VMEAS_'I'_DECIMALS
    @UNIT_IDENT_'I'       = SUBSTR('ID'_PICTURE_FUNCTION_CONF:VDATA_ACQUISITION_UNIT_'I',1,10)
    @ADDITIONAL_IDENT_'I' = SUBSTR('ID'_PICTURE_FUNCTION_CONF:VFUNCTION_BLOCK_'I',1,10)

    ;proper unit for measurement
    #CASE %IX
      #WHEN 10 @ST = "A"      ;current L1
      #WHEN 11 @ST = "A"      ;current L2
      #WHEN 12 @ST = "A"      ;current L3
      #WHEN 13 @ST = "A"      ;neutral current
      #WHEN 14 @ST = "A"      ;dir. neutral current
      #WHEN 15 @ST = "A"      ;max. demand current
      #WHEN 16 @ST = "kV"     ;voltage U12
      #WHEN 17 @ST = "kV"     ;voltage U23
      #WHEN 18 @ST = "kV"     ;voltage U31
      #WHEN 19 @ST = "V"      ;residual voltage
      #WHEN 20 @ST = "kW"     ;active power
      #WHEN 21 @ST = "kvar"   ;reactive power
      #WHEN 22 @ST = "kVA"    ;apparent power
      #WHEN 23 @ST = ""       ;power factor
      #WHEN 24 @ST = "Hz"     ;frequency
      #WHEN 25 @ST = "%"      ;harmonic distortion
      #WHEN 26 @ST = "C"      ;temperature
      #WHEN 27,28,29,30,31,32,33,34,35,36,37 @ST = ""  ;user defined
      #WHEN 38 @ST = "kWh"    ;active energy
      #WHEN 39 @ST = "MWh"    ;active energy
      #WHEN 40 @ST = "GWh"    ;active energy
      #WHEN 41 @ST = "kWh"    ;active energy - reversed
      #WHEN 42 @ST = "MWh"    ;active energy - reversed
      #WHEN 43 @ST = "GWh"    ;active energy - reversed
      #WHEN 44 @ST = "kvarh"  ;reactive energy
      #WHEN 45 @ST = "Mvarh"  ;reactive energy
      #WHEN 46 @ST = "Gvarh"  ;reactive energy
      #WHEN 47 @ST = "kvarh"  ;reactive energy - reversed
      #WHEN 48 @ST = "Mvarh"  ;reactive energy - reversed
      #WHEN 49 @ST = "Gvarh"  ;reactive energy - reversed
      #WHEN 50 @ST = "kV"     ;Voltage U1
      #WHEN 51 @ST = "kV"     ;Voltage U2
      #WHEN 52 @ST = "kV"     ;Voltage U3
      #WHEN 53 @ST = "kV"     ;Voltage U0
      #WHEN 54 @ST = "A"      ;residual current I0
      #WHEN 57 @ST = "kV"     ;residual voltage V0
      #WHEN 73 @ST = "kW"     ;phase active power L1
      #WHEN 74 @ST = "kW"     ;phase active power L2
      #WHEN 75 @ST = "kW"     ;phase active power L3
      #WHEN 79 @ST = "kvar"   ;Phase reactive power
      #WHEN 80 @ST = "kvar"   ;Phase reactive power
      #WHEN 81 @ST = "kvar"   ;Phase reactive power
      #WHEN 91 @ST = ""       ;Phase power factor L1
      #WHEN 92 @ST = ""       ;Phase power factor L1
      #WHEN 93 @ST = ""       ;Phase power factor L3
      #WHEN 97 @ST = "Ohm"    ;Impedance Z1
      #WHEN 98 @ST = "Ohm"    ;Impedance Z2
      #WHEN 99 @ST = "Ohm"    ;Impedance Z3
      #WHEN 100 @ST = "Ohm"   ;Neutral impedance Z0
      #WHEN 101 @ST = "Ohm"   ;Net impedance Znet
      #WHEN 102 @ST = "Ohm"   ;Residual impedance Zres
      #WHEN 131 @ST = "A"     ;Current
      #WHEN 132 @ST = "kV"    ;Voltage
      #WHEN 133 @ST = "kW"    ;Active power
      #WHEN 134 @ST = "kVAr"  ;Reactive power
      #WHEN 135 @ST = "kVA"   ;Apparent power
      #WHEN 136 @ST = ""      ;Power factor
      #WHEN 137 @ST = "Ohm"   ;Impedance
      #WHEN 138 @ST = "Hz"    ;Frequency
      #WHEN 139 @ST = "A"     ;Positive, Negative and Zero Sequence Current
      #WHEN 140 @ST = "A"     ;Positive, Negative and Zero Sequence Current
      #WHEN 141 @ST = "A"     ;Positive, Negative and Zero Sequence Current
    #CASE_END

@v_61850_ID = ("MMXU.A.phsA.cVal.mag",-
                   "MMXU.A.phsB.cVal.mag",-
                   "MMXU.A.phsC.cVal.mag",-
                   "MMXU.A.neut.cVal.mag",-
                   "",-
                   "",-
                   "MMXU.PPV.phsAB.cVal.mag",-
                   "MMXU.PPV.phsBC.cVal.mag",-
                   "MMXU.PPV.phsCA.cVal.mag",-
                   "",-
                   "MMXU.TotW.mag",-
                   "MMXU.TotVAr.mag",-
                   "MMXU.TotVA.mag",-
                   "MMXU.TotPF.mag",-
                   "MMXU.Hz.mag",-
                   "",-
                   "",-
                   "","","","","","","","","","","",-
                   "MMTR.SupWh.actVal",-
                   "MMTR.SupWh.actVal",-
                   "MMTR.SupWh.actVal",-
                   "MMTR.DmdWh.actVal",-
                   "MMTR.DmdWh.actVal",-
                   "MMTR.DmdWh.actVal",-
                   "MMTR.SupVArh.actVal",-
                   "MMTR.SupVArh.actVal",-
                   "MMTR.SupVArh.actVal",-
                   "MMTR.DmdVArh.actVal",-
                   "MMTR.DmdVArh.actVal",-
                   "MMTR.DmdVArh.actVal",-
                   "MMXU.PhV.phsA.cVal.mag",-
                   "MMXU.PhV.phsB.cVal.mag",-
                   "MMXU.PhV.phsC.cVal.mag",-
                   "MMXU.PhV.neut.cVal.mag",-
                   "MMXU.A.res.cVal.mag",-
                   "","","MMXU.PhV.res.cVal.mag",- 
                   "MDIF.OpARem.phsA.cVal.mag","MDIF.OpARem.phsB.cVal.mag","MDIF.OpARem.phsC.cVal.mag","MDIF.OpARem.neut.cVal.mag","MDIF.OpARem.res.cVal.mag","MDIF.OpARem.net.cVal.mag","","","","",-
                   "","","","","","MMXU.W.phsA.cVal.mag","MMXU.W.phsB.cVal.mag","MMXU.W.phsC.cVal.mag","MMXU.VA.phsA.cVal.mag", "MMXU.VA.phsB.cVal.mag",- ; 59 .. 68
                   "MMXU.VA.phsC.cVal.mag","MMXU.VAr.phsA.cVal.mag","MMXU.VAr.phsB.cVal.mag","MMXU.VAr.phsC.cVal.mag","","","","","","",- ;69 .. 78
                   "","","","MMXU.PF.phsA.cVal.mag","MMXU.PF.phsB.cVal.mag","MMXU.PF.phsC.cVal.mag","","","","MMXU.Z.phsA.cVal.mag",- ;79 .. 88
                   "MMXU.Z.phsB.cVal.mag","MMXU.Z.phsC.cVal.mag","MMXU.Z.neut.cVal.mag","MMXU.Z.net.cVal.mag","MMXU.Z.res.cVal.mag","","","","","",- ;89 .. 98
                   "","","","","","","","","","",-
                   "","","","","","","","","","",-
                   "","","",-
                   "MMXN.Amp.mag","MMXN.Vol.mag","MMXN.Watt.mag","MMXN.VolAmpr.mag","MMXN.VolAmp.mag","MMXN.PwrFact.mag","MMXN.Imp.mag","MMXN.Hz.mag",-
                   "MSQI.SeqA.c1.cVal.mag","MSQI.SeqA.c2.cVal.mag","MSQI.SeqA.c3.cVal.mag","MSQI.SeqV.c1.cVal.mag","MSQI.SeqV.c2.cVal.mag","MSQI.SeqV.c3.cVal.mag","","","",-
                   "","","","","","","","","","")

    ;analog inputs
    #IF %IX < 33 OR %IX > 49 #THEN #BLOCK
      #CASE 'ID'_PICTURE_FUNCTION_CONF:VSTATION_TYPE
        #WHEN "SPA" #BLOCK
          @DX ="N6"
          @HE = 1                                      ;history enable = yes
          @SN ="1_1"                                   ;scale = 1:1
          @SZ = 1                                      ;zone supervision = SCADA
          @PF = "FORM5SAGR1"                           ;physical format for printout
          @LD = BIT_MASK(1)                            ;listing device = 1
        #BLOCK_END
 
        #WHEN "LON","LONMARK" #BLOCK
          @DX ="X6"
          @HE = 1                                      ;history enable = yes
          @SN ="1_1"                                   ;scale = 1:1
          @SZ = 1                                      ;zone supervision = SCADA
          @PF = "FORM5SAGR1"                           ;physical format for printout
          @LD = BIT_MASK(1)                            ;listing device = 1
        #BLOCK_END

        #WHEN "IEC101","IEC103", "ICCP" #BLOCK
          @DX ="C9"
          @HE = 1                                      ;history enable = yes
          @SN ="1_1"                                   ;scale = 1:1
          @SZ = 1                                      ;zone supervision = SCADA
          @PF = "FORM5SAGR1"                           ;physical format for printout
          @LD = BIT_MASK(1)                            ;listing device = 1
        #BLOCK_END

        #WHEN "ANSI" #BLOCK
          @DX ="9"
          @HE = 1                                      ;history enable = yes
          @SN ="BGU_1_1000"                            ;scale = 1:1
          @SZ = 1                                      ;zone supervision = SCADA
          @PF = "FORM5SAGR1"                           ;physical format for printout
          @LD = BIT_MASK(1)                            ;listing device = 1
        #BLOCK_END

        #WHEN "PROC" #BLOCK
          @DX ="O2"
          @HE = 1                                      ;history enable = yes
          @SN ="1_1"                                   ;scale = 1:1
          @SZ = 1                                      ;zone supervision = SCADA
          @PF = "FORM5SAGR1"                           ;physical format for printout
          @LD = BIT_MASK(1)                            ;listing device = 1
        #BLOCK_END

        #WHEN "RTU" #BLOCK
          #IF 'ID'_PICTURE_FUNCTION_CONF:VEVENT_RECORDING #THEN #BLOCK
            @DX ="I6"
            @DX2="I11"
            @HE = 0                                    ;history enable = no
            @SN ="1_1"                                 ;scale = 1:1
            @SZ = 0                                    ;zone supervision = RTU
            @PF = "DUMMY"                              ;physical format for printout
            @LD = 0                                    ;listing device = none
          #BLOCK_END

          #ELSE #BLOCK
            @DX ="I6"
            @HE = 1                                    ;history enable = yes
            @SN ="1_1"                                 ;scale = 1:1
            @SZ = 0                                    ;zone supervision = RTU
            @PF = "FORM5SAGR1"                         ;physical format for printout
            @LD = BIT_MASK(1)                          ;listing device = 1
          #BLOCK_END
        #BLOCK_END

        #WHEN "RTU_E" #BLOCK
          #IF 'ID'_PICTURE_FUNCTION_CONF:VEVENT_RECORDING #THEN #BLOCK
            @DX ="R6"
            @DX2="R11"
            @HE = 0                                    ;history enable = no
            @SN ="1_1"                                 ;scale = 1:1
            @SZ = 0                                    ;zone supervision = RTU
            @PF = "DUMMY"                              ;physical format for printout
            @LD = 0                                    ;listing device = none
          #BLOCK_END

          #ELSE #BLOCK
            @DX ="R6"
            @HE = 1                                    ;history enable = yes
            @SN ="1_1"                                 ;scale = 1:1
            @SZ = 0                                    ;zone supervision = RTU
            @PF = "FORM5SAGR1"                         ;physical format for printout
            @LD = BIT_MASK(1)                          ;listing device = 1
          #BLOCK_END
        #BLOCK_END

        #WHEN "DNP_30" #BLOCK
          #IF 'ID'_PICTURE_FUNCTION_CONF:VEVENT_RECORDING #THEN #BLOCK
            @DX  ="D9"
            @DX2 ="D9"
            @HE  = 0                                   ;history enable = yes
            @SN  ="1_1"                                ;scale = 1:1
            @SZ  = 1                                   ;zone supervision = SCADA
            @PF  = "DUMMY"                             ;physical format for printout
            @LD  = 0                                   ;listing device = 1
          #BLOCK_END
          
          #ELSE #BLOCK
            @DX ="D9"
            @HE = 1                                    ;history enable = yes
            @SN ="1_1"                                 ;scale = 1:1
            @SZ = 1                                    ;zone supervision = SCADA
            @PF = "FORM5SAGR1"                         ;physical format for printout
            @LD = BIT_MASK(1)                          ;listing device = 1
          #BLOCK_END
        #BLOCK_END

        #WHEN "MODBUS_RTU" #BLOCK
            @DX ="I6"
            @HE = 1                                    ;history enable = yes
            @SN ="1_1"                                 ;scale = 1:1
            @SZ = 0                                    ;zone supervision = RTU
            @PF = "FORM5SAGR1"                         ;physical format for printout
            @LD = BIT_MASK(1)                          ;listing device = 1
        #BLOCK_END

        #WHEN "IEC61850" #BLOCK
          @DX ="E6"
          @HE = 1                                      ;history enable = yes
          @SN ="1_1"                                   ;scale = 1:1
          @SZ = 1                                      ;zone supervision = SCADA
          @PF = "FORM5SAGR1"                           ;physical format for printout
          @LD = BIT_MASK(1)                            ;listing device = 1
        #BLOCK_END
      #CASE_END

      @RX = %ADDITIONAL_IDENT_'I'+%UNIT_IDENT_'I'+"FPPMEAM'TYPE'"
      #IF 'ID'_PICTURE_FUNCTION_CONF:VSTATION_TYPE == "IEC61850" #THEN #BLOCK

         #IF DATA_TYPE('ID'_PICTURE_FUNCTION_CONF:VDEFINE_ITEM_NAME) <> "NONE" #THEN - 
            @b_Fill_IN = 'ID'_PICTURE_FUNCTION_CONF:VDEFINE_ITEM_NAME
         #ELSE @b_Fill_IN = false

         @RX = SUBSTR(%RX,1,35) + %v_61850_ID(%IX-9)

         #IF %b_Fill_IN #THEN #BLOCK
            @v_LN_OPC_Instances = vector
            @t_OPC_Prefix = ""
            @v_Instance(1) = ""
            @v_LN_OPC_Instances = 'ID'_PICTURE_FUNCTION_CONF:VOPC_LN_INSTANCE_'I'
            @t_OPC_Prefix = 'ID'_PICTURE_FUNCTION_CONF:VOPC_ITEM_PREFIX
            @v_Dots_Prefix = locate(%t_OPC_Prefix, ".", "ALL")
			#if  length(%v_Dots_Prefix) > 1 #then #block
				@v_Dots = locate(%v_LN_OPC_Instances(1),".","ALL")
				#if length(%v_Dots) > 0 #then #block
				   @v_Instance(1) = substr(%v_LN_OPC_Instances(1),1, %v_Dots(1) - 1)
				#block_end
				#else @v_Instance(1) = %v_LN_OPC_Instances(1)
			#block_end
			#else @v_Instance(1) = %v_LN_OPC_Instances(1)

            #CASE %IX
               #WHEN 14, 15, 19, 25, 26 @IN(1) = ""
               #WHEN 27,28,29,30,31,32,33,34,35,36,37 #BLOCK ;user defined
				  #if length(%v_Dots) > 1 #then @IN(1) =  %t_OPC_Prefix + "." + %v_LN_OPC_Instances(1)
                  #else @IN(1) = ""
               #BLOCK_END
               #OTHERWISE #BLOCK
                  #if length(%v_Dots_Prefix) == 1 #then  @IN(1) = %t_OPC_Prefix + "." + %v_Instance(1)
				  #else @IN(1) = %t_OPC_Prefix + "." + %v_Instance(1) + SUBSTR(%v_61850_ID(%IX-9), 5, 0)
               #BLOCK_END
            #CASE_END
         #BLOCK_END
         #ELSE @IN(1) = ""
      #BLOCK_END
      #ELSE @IN(1) = ""

      #MODIFY P_OBJECTS:V = LIST(P_OBJ0'I' = LIST(-
          IX = %IX,-                                   ;index 
          PT = 9,-                                     ;process object type = analog input
          DX = %DX,-                                   ;directive text
          AI = 0,-                                     ;object value = 0
          OI = %OBJ_IDENT,-                            ;substation & bay name
          OX = FPI_ME:VOBJECT_'IX',-                   ;object text
          IU = 1,-                                     ;in use = yes
          SS = 1,-                                     ;switch state = manual
          EE = 1,-                                     ;event enable = yes
          HE = %HE,-                                   ;history enable 
          HA = 3,-                                     ;history activation = warning & alarm
          HF = 1,-                                     ;history at first update = yes
          HL = BIT_MASK(15),-                          ;history log number = 15
          HI = 0,-                                     ;upper alarm limit = 0
          HW = 0,-                                     ;upper warning limit = 0
          LW = 0,-                                     ;lower warning limit = 0
          LI = 0,-                                     ;lower alarm limit = 0
          ST = %ST,-                                   ;unit of value
          SN = %SN,-                                   ;scale name
          SZ = %SZ,-                                   ;zone supervision
          RC = 1,-                                     ;receipt = acknowledgement required
          AB = 0,-                                     ;alarm blocking = no
          AC = 1,-                                     ;alarm class = 1
          AD = 0,-                                     ;alarm delay = 0
          PD = 0,-                                     ;picture device = none
          PI = "",-                                    ;alarm picture
          PF = %PF,-                                   ;physical format for printout
          RI = 1,-                                     ;dynamic texts for printout
          PA = 3,-                                     ;printout activation = warning & alarm
          PU = 1,-                                     ;picture/ printout at first update = yes
          LD = %LD,-                                   ;listing device
          IN = %IN(1),-                                ;
          RX = %RX,-                                   ;data acquisition unit and group information
          DP = %DP))                                   ;decimal places

      @RX = %ADDITIONAL_IDENT_'I'+%UNIT_IDENT_'I'+"FPPMEAE'TYPE'"
      #IF 'ID'_PICTURE_FUNCTION_CONF:VSTATION_TYPE == "IEC61850" #THEN #BLOCK
         @RX = SUBSTR(%RX,1,35) + %v_61850_ID(%IX-9)
      #BLOCK_END

      ;event recording objects for RTU
      #IF ('ID'_PICTURE_FUNCTION_CONF:VSTATION_TYPE == "RTU" OR 'ID'_PICTURE_FUNCTION_CONF:VSTATION_TYPE == "RTU_E" OR 'ID'_PICTURE_FUNCTION_CONF:VSTATION_TYPE == "DNP_30") -
      AND 'ID'_PICTURE_FUNCTION_CONF:VEVENT_RECORDING #THEN #BLOCK
        #IF SUBSTR('ID'_PICTURE_FUNCTION_CONF:VSTATION_TYPE,1,3) == "RTU" #THEN @I_SZ = 0
        #ELSE @I_SZ = 1
        @J=%I+4 
        #MODIFY P_OBJECTS:V = LIST(P_OBJ0'J' = LIST(-
          IX = %IX+100,-                               ;index 
          PT = 9,-                                     ;process object type = AI
          DX = %DX2,-                                  ;directive text
          AI = 0,-                                     ;object value = 0
          OI = %OBJ_IDENT,-                            ;substation & bay name
          OX = FPI_ME:VOBJECT_'IX',-                   ;object text
          IU = 1,-                                     ;in use = yes
          SS = 2,-                                     ;switch state = auto
          EE = 1,-                                     ;event enable = yes
          HE = 1,-                                     ;history enable 
          HA = 3,-                                     ;history activation = warning & alarm
          HF = 1,-                                     ;history at first update = yes
          HL = BIT_MASK(15),-                          ;history log number = 15
          HI = 0,-                                     ;upper alarm limit = 0
          HW = 0,-                                     ;upper warning limit = 0
          LW = 0,-                                     ;lower warning limit = 0
          LI = 0,-                                     ;lower alarm limit = 0
          ST = %ST,-                                   ;unit of value
          SN = "1_1",-                                 ;scale name
          SZ = %I_SZ,-                                     ;zone supervision = RTU
          RC = 0,-                                     ;receipt = acknowledgement not required
          AB = 0,-                                     ;alarm blocking = no
          AC = 0,-                                     ;alarm class = disabled
          AD = 0,-                                     ;alarm delay = 0
          PD = 0,-                                     ;picture device = none
          PI = "",-                                    ;alarm picture
          PF = "FORM5SAGR1",-                          ;physical format for printout
          RI = 1,-                                     ;dynamic texts for printout
          PA = 3,-                                     ;printout activation = warning & alarm
          PU = 1,-                                     ;picture/ printout at first update = yes
          LD = BIT_MASK(1),-                           ;listing device 
          RX = %RX,-                                   ;data acquisition unit and group information
          DP = %DP))                                   ;decimal places
      #BLOCK_END
    #BLOCK_END

    ;pulse counter
    #ELSE #BLOCK
      #CASE 'ID'_PICTURE_FUNCTION_CONF:VSTATION_TYPE
        #WHEN "SPA" #BLOCK
          @DX ="N8"
          @SC = 1                                      ;pulse counter scaling 
        #BLOCK_END
 
        #WHEN "LON","LONMARK" #BLOCK
          @DX ="X8"
          @SC = 1                                      ;pulse counter scaling 
        #BLOCK_END

        #WHEN "IEC101","IEC103", "ICCP" #BLOCK
          @DX ="C13"
          @SC = 1                                      ;pulse counter scaling 
        #BLOCK_END

        #WHEN "ANSI" #BLOCK
          @DX ="13"
          @SC = 0.001                                  ;pulse counter scaling 
        #BLOCK_END

        #WHEN "PROC" #BLOCK
          @DX ="O4"
          @SC = 1                                      ;pulse counter scaling 
        #BLOCK_END

        #WHEN "RTU" #BLOCK
          @DX ="I8"
          @SC = 1                                      ;pulse counter scaling 
        #BLOCK_END

        #WHEN "RTU_E" #BLOCK
          @DX ="R8"
          @SC = 1                                      ;pulse counter scaling 
        #BLOCK_END

        #WHEN "DNP_30" #BLOCK
          @DX ="D13"
          @SC = 1                                      ;pulse counter scaling 
        #BLOCK_END

        #WHEN "MODBUS_RTU" #BLOCK
          @DX ="I8"
          @SC = 1                                      ;pulse counter scaling 
        #BLOCK_END

        #WHEN "IEC61850" #BLOCK
          @DX ="E8"
          @SC = 1                                      ;pulse counter scaling 
        #BLOCK_END
      #CASE_END

      @RX = %ADDITIONAL_IDENT_'I'+%UNIT_IDENT_'I'+"FPPMEAM'TYPE'"
 
      #IF 'ID'_PICTURE_FUNCTION_CONF:VSTATION_TYPE == "IEC61850" #THEN #BLOCK

         #IF DATA_TYPE('ID'_PICTURE_FUNCTION_CONF:VDEFINE_ITEM_NAME) <> "NONE" #THEN - 
            @b_Fill_IN = 'ID'_PICTURE_FUNCTION_CONF:VDEFINE_ITEM_NAME
         #ELSE @b_Fill_IN = false

         @RX = SUBSTR(%RX,1,35) + %v_61850_ID(%IX-9)

         #IF %b_Fill_IN #THEN #BLOCK
            @v_LN_OPC_Instances = vector
            @t_OPC_Prefix = ""
            @v_Instance(1) = ""
            @v_LN_OPC_Instances = 'ID'_PICTURE_FUNCTION_CONF:VOPC_LN_INSTANCE_'I'
            @t_OPC_Prefix = 'ID'_PICTURE_FUNCTION_CONF:VOPC_ITEM_PREFIX
            @v_Dots_Prefix = locate(%t_OPC_Prefix, ".", "ALL")
			#if  length(%v_Dots_Prefix) > 1 #then #block
				@v_Dots = locate(%v_LN_OPC_Instances(1),".","ALL")
				#if length(%v_Dots) > 0 #then #block
				   @v_Instance(1) = substr(%v_LN_OPC_Instances(1),1, %v_Dots(1) - 1)
				#block_end
				#else @v_Instance(1) = %v_LN_OPC_Instances(1)
			#block_end
			#else @v_Instance(1) = %v_LN_OPC_Instances(1)

            #CASE %IX
               #WHEN 14, 15, 19, 25, 26 @IN(1) = ""
               #WHEN 27,28,29,30,31,32,33,34,35,36,37 #BLOCK ;user defined
                  #if length(%v_Dots) > 0 #then @IN(1) =  %t_OPC_Prefix + "." + %v_LN_OPC_Instances(1)
                  #else @IN(1) = ""
               #BLOCK_END
               #OTHERWISE #BLOCK
				  #if length(%v_Dots_Prefix) == 1 #then  @IN(1) = %t_OPC_Prefix + "." + %v_Instance(1)
				  #else @IN(1) = %t_OPC_Prefix + "." + %v_Instance(1) + SUBSTR(%v_61850_ID(%IX-9), 5, 0)
               #BLOCK_END
            #CASE_END
            ;@IN(1) = %t_OPC_Prefix + "." + %v_Instance(1) + SUBSTR(%v_61850_ID(%IX-9), 5, 0)
         #BLOCK_END
         #ELSE @IN(1) = ""
      #BLOCK_END
      #ELSE @IN(1) = ""


      #MODIFY P_OBJECTS:V = LIST(P_OBJ0'I' = LIST(-
          IX = %IX,-                                   ;index 
          PT = 13,-                                    ;process object type = PC
          DX = %DX,-                                   ;directive text
          PC = 0,-                                     ;object value = 0
          OI = %OBJ_IDENT,-                            ;substation & bay name
          OX = FPI_ME:VOBJECT_'IX',-                   ;object text
          IU = 1,-                                     ;in use = yes
          SS = 1,-                                     ;switch state = manual
          EE = 1,-                                     ;event enable = yes
          HE = 0,-                                     ;history enable = no
          HA = 1,-                                     ;history activation = new value
          HF = 0,-                                     ;history at first update = no
          HL = BIT_MASK(15),-                          ;history log number = 15
          SC = %SC,-                                   ;pulse counter scaling
          ST = %ST,-                                   ;unit of value
          PF = "",-                                    ;physical format for printout
          RI = 0,-                                     ;dynamic texts for printout
          PA = 1,-                                     ;printout activation = warning & alarm
          PU = 0,-                                     ;picture/ printout at first update = yes
          LD = 0,-                                     ;listing device
          IN = %IN(1),-
          RX = %RX)) ;data acquisition unit and group information
    #BLOCK_END
  #BLOCK_END
#LOOP_END
