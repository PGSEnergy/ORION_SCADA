;OBJECT       : SAI_ME1.DAT
;Copyright Hitachi Power Grids. All rights reserved.
;
;DESCRIPTION  : Configuration data file for the measurement standard function
;                                
;---------------------------------------------------------------------------

##FUNC_INIT_BEGIN

@'.ID'_PICTURE_FUNCTION_CONF = LIST(-
   CREATED_BY                = "SA_LIB",-
   CONFIG_DATA_FILE          = "?CONF_FILE?",-
   LIB_REVISION              = " 3.0",-
   TYPE_PF                   = "?REQUIRED_PF_NAME?",-
   DEFAULT_TYPE_PF           = "SAGR_MEA",-
   CONTROL_DIALOG            = "F_USE/FPU_MEA",-
   CONTROL_DIALOG_WINDOW     = "MNOPER",-
   STATION_NAME              = "",-
   BAY_NAME                  = "",-
   DEVICE_NAME               = "",-
   SPECIAL_IDENTIFIER_1      = "",-
   SPECIAL_IDENTIFIER_2      = "",-
   SPECIAL_IDENTIFIER_3      = "",-
   UNIT_NUMBER               = 0,-
   SHORT_ADDRESS             = VECTOR(""),-
   P_OBJECT_LN               = "",-
   P_OBJECT_INDEXES          = VECTOR(""),-
   STATION_TYPE              = "IEC61850",-
   DEFINE_ITEM_NAME          = FALSE,-
   OBJECT_TYPE_DESCRIPTION   = "B5_USE/BPU_MEAS.scl",-
   OPC_ITEM_PREFIX           = "IEC61850 Subnetwork.IED1.LD1",-
   FOLDER_1_TITLE            = "",-
   TYPE_MEAS_1               = "",-
   OPC_LN_INSTANCE_1         = VECTOR("MMXU1"),-
   MEAS_1_DECIMALS           = 0,-
   DATA_ACQUISITION_UNIT_1   = "",-
   FUNCTION_BLOCK_1          = "",-
   FOLDER_2_TITLE            = "",-
   MEAS_1_RANGE              = FALSE,-
   TYPE_MEAS_2               = "",-
   OPC_LN_INSTANCE_2         = VECTOR("MMXU1"),-
   MEAS_2_DECIMALS           = 0,-
   DATA_ACQUISITION_UNIT_2   = "",-
   FUNCTION_BLOCK_2          = "",-
   MEAS_2_RANGE              = FALSE,-
   FOLDER_3_TITLE            = "",-
   TYPE_MEAS_3               = "",-
   OPC_LN_INSTANCE_3         = VECTOR("MMXU1"),-
   MEAS_3_DECIMALS           = 0,-
   DATA_ACQUISITION_UNIT_3   = "",-
   FUNCTION_BLOCK_3          = "",-
   MEAS_3_RANGE              = FALSE,-
   FOLDER_4_TITLE            = "",-
   TYPE_MEAS_4               = "",-
   OPC_LN_INSTANCE_4         = VECTOR("MMXU1"),-
   MEAS_4_DECIMALS           = 0,-
   DATA_ACQUISITION_UNIT_4   = "",-
   FUNCTION_BLOCK_4          = "",-
   MEAS_4_RANGE              = FALSE,-
   DA_CONFIG_FILE            = "",-
   AUTHORIZATION_GROUP       = "MV_CONTROL",-
   SA_LIB_INDEXES            = "0,0,0",-
   EVENT_RECORDING           = FALSE,-
   REPRESENTATION            = "F_REPR/F_MEAS1",-
   TOPO_OBJECT_TYPE          = "CT",-
   TOPO_OBJECT_X_POS         = ( 8, 8, 0,16),-
   TOPO_OBJECT_Y_POS         = ( 0,20,10,10))

##FUNC_INIT_END


##FUNC_DEF_BEGIN

;check the usage of object identification (OI) -attribute
@S = STATUS
@POINTER_STA  = 0
@POINTER_BAY  = 0
@POINTER_DEV  = 0
#ERROR IGNORE
@APL_BSV15      = APL:BSV15
@PROCESSOBJECTS = APL_BSV15:VPROCESS_OBJECTS
@OI             = PROCESSOBJECTS:VOI
#LOOP_WITH I = 1 .. 30
  #IF DATA_TYPE(OI:VLENGTH'I')=="INTEGER" #THEN #BLOCK  
    @OI_LENGTH'I' = OI:VLENGTH'I'
    ;if field in use
    #IF %OI_LENGTH'I' > 0 #THEN #BLOCK  
      @NR_OF_FIELDS = %I
      @OI_TITLE'I'  = OI:VTITLE'I'
      @OI_FIELD'I'  = OI:VFIELD'I'
      #IF      LENGTH(SELECT(%OI_FIELD'I',"==""STA"""))>0 #THEN @POINTER_STA = %I
      #ELSE_IF LENGTH(SELECT(%OI_FIELD'I',"==""BAY"""))>0 #THEN @POINTER_BAY = %I
      #ELSE_IF LENGTH(SELECT(%OI_FIELD'I',"==""DEV"""))>0 #THEN @POINTER_DEV = %I
    #BLOCK_END
    #ELSE #BLOCK
      @OI_TITLE'I'  = ""
      @OI_FIELD'I'  = ""
    #BLOCK_END
  #BLOCK_END
  #ELSE #LOOP_EXIT
#LOOP_END
#ERROR STOP

;set defaults if APL:BSV15 not correctly defined
@S = STATUS
#IF %S <> 0 #THEN #BLOCK
  @OI_TITLE1    = "Substation"
  @OI_TITLE2    = "Bay"
  @OI_TITLE3    = "Device"
  @OI_TITLE4    = ""
  @OI_TITLE5    = ""
  @OI_LENGTH1   = 10
  @OI_LENGTH2   = 15
  @OI_LENGTH3   = 5
  @OI_LENGTH4   = 0
  @OI_LENGTH5   = 0
  @POINTER_STA  = 1
  @POINTER_BAY  = 2
  @POINTER_DEV  = 3
  @NR_OF_FIELDS = 3
#BLOCK_END

;set configurable attributes according to OI-configuration
@NR_OF_SPECIAL_FIELD = 0
@OBJECT_IDENTIFIERS  = VECTOR()

#LOOP_WITH I = 1 .. 30
  #IF %I <= %NR_OF_FIELDS #THEN #BLOCK  

    ;define the name of the configurable attribute
    #IF      %I == %POINTER_STA #THEN @OBJECT_IDENTIFIER_'I'_NAME = "STATION_NAME"
    #ELSE_IF %I == %POINTER_BAY #THEN @OBJECT_IDENTIFIER_'I'_NAME = "BAY_NAME"
    #ELSE_IF %I == %POINTER_DEV #THEN @OBJECT_IDENTIFIER_'I'_NAME = "DEVICE_NAME"
    #ELSE #BLOCK
      @NR_OF_SPECIAL_FIELD = %NR_OF_SPECIAL_FIELD + 1
      @OBJECT_IDENTIFIER_'I'_NAME = "SPECIAL_IDENTIFIER_'NR_OF_SPECIAL_FIELD'"
    #BLOCK_END

    ;set one space between different fields
    #IF %I < %NR_OF_FIELDS AND %OI_LENGTH'I' > 1 #THEN @OBJECT_IDENTIFIER_'I'_MAX_LENGTH = %OI_LENGTH'I' - 1
    #ELSE @OBJECT_IDENTIFIER_'I'_MAX_LENGTH = %OI_LENGTH'I'

    ;create a list of previously used identifiers
    @SECTION  = %OBJECT_IDENTIFIER_'I'_NAME
    @KEYS     = VECTOR()
    #LOOP_WITH J = 1 .. 10
      @NEW_KEY= "'SECTION''J'"
      @KEY'J' = READ_PARAMETER("PICT/OBJ_IDEN.INI",%SECTION,%NEW_KEY)
      @KEY    = %KEY'J'
      #IF KEY:VSTATUS == 0 #THEN #BLOCK
        @KEYS = APPEND(%KEYS,KEY:VVALUE)
       #BLOCK_END
    #LOOP_END
    @OBJECT_IDENTIFIER_'I'_VALUES = %KEYS

    ;set configuration for SCT
    @OBJECT_IDENTIFIER_'I' = LIST(-
         NAME       = %OBJECT_IDENTIFIER_'I'_NAME,-
         TYPE       = "EDITABLE_SELECTOR",-
         INPUT_TYPE = "TEXT",-
         VALUES     = %OBJECT_IDENTIFIER_'I'_VALUES,-
         REPRESENT  = %OBJECT_IDENTIFIER_'I'_VALUES,-
         MAX_LENGTH = %OBJECT_IDENTIFIER_'I'_MAX_LENGTH)
    @OBJECT_IDENTIFIERS = APPEND(%OBJECT_IDENTIFIERS, %OBJECT_IDENTIFIER_'I')
  #BLOCK_END
  #ELSE #LOOP_EXIT
#LOOP_END

;supported protocols
@STATION_TYPE_VALUES = (-
                  "SPA",-
                  "ANSI",-
                  "LON",-
                  "RTU",-
                  "RTU_E",-
                  "IEC101",-
                  "IEC103",-
                  "ICCP")

@STATION_TYPE_REPRESENT = (-
                  "SPA",-
                  "ANSI",-
                  "LON",-
                  "RP570",-
                  "RP570 with FTABs",-
                  "IEC 870-5-101/104",-
                  "IEC 870-5-103",-
                  "ICCP")

#IF ROOT.ST_GET_LIB_REVISION > " 2.2" #THEN #BLOCK
   @STATION_TYPE_VALUES = APPEND(%STATION_TYPE_VALUES,("DNP_30","MODBUS_RTU"))
   @STATION_TYPE_REPRESENT = APPEND(%STATION_TYPE_REPRESENT,("DNP 3.0","MODBUS RTU"))
#BLOCK_END

@STATION_TYPE_VALUES    = APPEND(%STATION_TYPE_VALUES, VECTOR("PROC"))
@STATION_TYPE_REPRESENT = APPEND(%STATION_TYPE_REPRESENT, VECTOR("PROCOL"))

#IF ROOT.ST_GET_LIB_REVISION > " 2.9" #THEN #BLOCK
   @STATION_TYPE_VALUES = APPEND(%STATION_TYPE_VALUES,("IEC61850"))
   @STATION_TYPE_REPRESENT = APPEND(%STATION_TYPE_REPRESENT,("IEC 61850-8"))
#BLOCK_END

;read the list of data acquisition units
#DO READ_TEXT("SAGR_INST/SAI_DAU.TXT")
;read the list of function blocks
#DO READ_TEXT("SAGR_INST/SAI_FB.TXT")

;create a list of all existing authorization groups
#ERROR IGNORE
@AUTHORIZATION_GROUPS = LIST_ATTR(MON:BSV(9))
#IF DATA_TYPE(%AUTHORIZATION_GROUPS) <> "VECTOR" #THEN @AUTHORIZATION_GROUPS = VECTOR()
#ERROR CONTINUE

;define proper set of representations
@REPR_LIST=""
@REPR_SIZE=""
#CASE .STANDARD_FUNCTION_NAME
   #WHEN "SAGR_INST/FPI_ME1I_M" @REPR_SIZE= "M"
   #WHEN "SAGR_INST/FPI_ME1I_L" @REPR_SIZE= "L"
#CASE_END
@REPR_LIST =     ("F_REPR/F_MEAS'REPR_SIZE'1",-
                  "F_REPR/F_MEAS'REPR_SIZE'2",-
                  "F_REPR/F_MEAS'REPR_SIZE'3",-
                  "F_REPR/F_MEAS'REPR_SIZE'4",-
                  "F_REPR/F_MEAS'REPR_SIZE'5",-
                  "F_REPR/F_MEAS'REPR_SIZE'6",-
                  "F_REPR/F_MEAS'REPR_SIZE'7",-
                  "F_REPR/F_MEAS'REPR_SIZE'8",-
                  "F_REPR/F_MEAS'REPR_SIZE'9",-
                  "F_REPR/F_MEAS'REPR_SIZE'10",-
                  "F_REPR/F_MEAS'REPR_SIZE'11",-
                  "F_REPR/F_MEAS'REPR_SIZE'12",-
                  "F_REPR/F_MEAS'REPR_SIZE'13",-
                  "F_REPR/F_MEAS'REPR_SIZE'14",-
                  "F_REPR/F_MEAS'REPR_SIZE'15")

@TYPE_MEAS_VALUES = (-
                  "",-
                  "CUR00010",-
                  "CUR00011",-
                  "CUR00012",-
                  "NCU00013",-
                  "DNC00014",-
                  "MDC00015",-
                  "VOL00016",-
                  "VOL00017",-
                  "VOL00018",-
                  "RVL00019",-
                  "APW00020",-
                  "RPW00021",-
                  "APP00022",-
                  "COS00023",-
                  "FRQ00024",-
                  "HDS00025",-
                  "TMP00026",-
                  "XXX00027",-
                  "XXX00028",-
                  "XXX00029",-
                  "XXX00030",-
                  "XXX00031",-
                  "XXX00032",-
                  "XXX00033",-
                  "XXX00034",-
                  "XXX00035",-
                  "XXX00036",-
                  "XXX00037",-
                  "AEN00038",-
                  "AEN00039",-
                  "AEN00040",-
                  "AEN00041",-
                  "AEN00042",-
                  "AEN00043",-
                  "REN00044",-
                  "REN00045",-
                  "REN00046",-
                  "REN00047",-
                  "REN00048",-
                  "REN00049",-
                  "VOL00050",-
                  "VOL00051",-
                  "VOL00052",-
                  "VOL00053",-
                  "RCR00054",-
				  "PAP00073",-
				  "PAP00074",-
				  "PAP00075",-
				  "PAP00076",-
				  "PAP00077",-
				  "PAP00078",-
				  "PRP00079",-
				  "PRP00080",-
				  "PRP00081",-
				  "COS00091",-
				  "COS00092",-
				  "COS00093",-
                  "PIM00097",-
                  "PIM00098",-
                  "PIM00099",-
                  "PIM00100",-
                  "PIM00101",-
                  "PIM00102",-
                  "CUR00131",-
                  "VOL00132",-
                  "APW00133",-
                  "RPW00134",-
                  "APP00135",-
                  "COS00136",-
                  "IMP00137",-
                  "FRQ00138",-
                  "CSQ00139",-
                  "CSQ00140",-
                  "CSQ00141",-
                  "VSQ00142",-
                  "VSQ00143",-
                  "VSQ00144")

@TYPE_MEAS_REPRESENT = (-
                  "None",-
                  "(10) Current L1",-
                  "(11) Current L2",-
                  "(12) Current L3",-
                  "(13) Neutral current I0",-
                  "(14) Directional neutral current Ij",-
                  "(15) Maximum demand I15min",-
                  "(16) Voltage U12",-
                  "(17) Voltage U23",-
                  "(18) Voltage U31",-
                  "(19) Residual voltage U0",-
                  "(20) Active power P",-
                  "(21) Reactive power Q",-
                  "(22) Apparent power S",-
                  "(23) Power factor Cosj",-
                  "(24) Frequency f",-
                  "(25) Harmonic distortion",-
                  "(26) Temperature",-
                  "(27) User defined measurement",-
                  "(28) User defined measurement",-
                  "(29) User defined measurement",-
                  "(30) User defined measurement",-
                  "(31) User defined measurement",-
                  "(32) User defined measurement",-
                  "(33) User defined pulse counter",-
                  "(34) User defined pulse counter",-
                  "(35) User defined pulse counter",-
                  "(36) User defined pulse counter",-
                  "(37) User defined pulse counter",-
                  "(38) Active energy E (kWh)",-
                  "(39) Active energy E (MWh)",-
                  "(40) Active energy E (GWh)",-
                  "(41) Active energy E (kWh) - reversed",-
                  "(42) Active energy E (MWh) - reversed",-
                  "(43) Active energy E (GWh) - reversed",-
                  "(44) Reactive energy E (kvarh)",-
                  "(45) Reactive energy E (Mvarh)",-
                  "(46) Reactive energy E (Gvarh)",-
                  "(47) Reactive energy E (kvarh) - reversed",-
                  "(48) Reactive energy E (Mvarh) - reversed",-
                  "(49) Reactive energy E (Gvarh) - reversed",-                  
                  "(50) Voltage U1",-
                  "(51) Voltage U2",-
                  "(52) Voltage U3",-
                  "(53) Voltage U0",-
                  "(54) Residual Current I0",-
                  "(73) Active power L1",-
                  "(74) Active power L2",-
                  "(75) Active power L3",-
                  "(76) Apparent power L1",-
                  "(77) Apparent power L2",-
                  "(78) Apparent power L3",-
                  "(79) Reactive power L1",-
                  "(80) Reactive power L2",-
                  "(81) Reactive power L3",-
                  "(91) Power factor L1",-
                  "(92) Power factor L2",-
                  "(93) Power factor L3",-
                  "(97) Impedance Z1",-
                  "(98) Impedance Z2",-
                  "(99) Impedance Z3",-
                  "(100) Neutral impedance Z0",-
                  "(101) Net impedance Znet",-
                  "(102) Residual impedance Zres",-
                  "(131) Current",-
                  "(132) Voltage",-
                  "(133) Active Power",-
                  "(134) Reactive Power",-
                  "(135) Apparent Power",-
                  "(136) Power factor",-
                  "(137) Impedance",-
                  "(138) Frequency",-
                  "(139) Positive, Negative and Zero Sequence Current",-
                  "(140) Positive, Negative and Zero Sequence Current",-
                  "(141) Positive, Negative and Zero Sequence Current",-
                  "(142) Positive, Negative and Zero Sequence Voltage",-
                  "(143) Positive, Negative and Zero Sequence Voltage",-
                  "(144) Positive, Negative and Zero Sequence Voltage")

@FUNC_DEF=LIST(-
      CONFIGURABLE_ATTRIB = (-
                  "STATION_NAME",-
                  "BAY_NAME",-
                  "DEVICE_NAME",-
                  "SPECIAL_IDENTIFIER_1",-
                  "SPECIAL_IDENTIFIER_2",-
                  "SPECIAL_IDENTIFIER_3",-
                  "P_OBJECT_LN",-
                  "P_OBJECT_INDEXES",-
                  "STATION_TYPE",-
                  "OPC_ITEM_PREFIX",-
                  "TYPE_MEAS_1",-
                  "OPC_LN_INSTANCE_1",-
                  "FOLDER_1_TITLE",-
                  "MEAS_1_DECIMALS",-
                  "TYPE_MEAS_2",-
                  "OPC_LN_INSTANCE_2",-
                  "FOLDER_2_TITLE",-
                  "MEAS_2_DECIMALS",-
                  "TYPE_MEAS_3",-
                  "OPC_LN_INSTANCE_3",-
                  "FOLDER_3_TITLE",-
                  "MEAS_3_DECIMALS",-
                  "TYPE_MEAS_4",-
                  "OPC_LN_INSTANCE_4",-
                  "FOLDER_4_TITLE",-
                  "MEAS_4_DECIMALS",-
                  "AUTHORIZATION_GROUP",-
                  "EVENT_RECORDING",-
                  "REPRESENTATION",-
                  "TOPO_OBJECT_TYPE"),-
      SCT_ATTRIBUTES = (-
                  LIST(NAME              =  "P_OBJECT_LN",-
                       TYPE              =  "TEXT",-
                       MAX_LENGTH        =  63),-
                  LIST(NAME              =  "STATION_TYPE",-
                       TYPE              =  "SELECTOR",-
                       VALUES            =  %STATION_TYPE_VALUES,-
                       REPRESENT         =  %STATION_TYPE_REPRESENT,-
                       CHANGE_CALLBACK   =  VECTOR("#DO .ST_READ_DATA_FILE_SECTION(""CALLBACK_STATION_TYPE"")")),-
                  LIST(NAME              =  "DEFINE_ITEM_NAME",-
                       TYPE              =  "BOOLEAN",-
                       CHANGE_CALLBACK   =  VECTOR("#DO .ST_READ_DATA_FILE_SECTION(""CALLBACK_DEFINE_ITEM_NAME"")")),-
                  LIST(NAME              =  "OPC_ITEM_PREFIX",-
                       TYPE              =  "TEXT",-
                       MAX_LENGTH        =  255),-
                  LIST(NAME              =  "TYPE_MEAS_1",-
                       TYPE              =  "SELECTOR",-
                       VALUES            =  %TYPE_MEAS_VALUES,-
                       REPRESENT         =  %TYPE_MEAS_REPRESENT,-
                       CHANGE_CALLBACK   =  VECTOR("@ATTR_NR=1","#DO .ST_READ_DATA_FILE_SECTION(""CALLBACK_TYPE_MEAS"")")),-
                  LIST(NAME              =  "OPC_LN_INSTANCE_1",-
                       TYPE              =  "VECTOR",-
                       ELEMENT_TYPE      =  "TEXT",-
                       MAX_LENGTH        =  4,-
                       MAX_ELEMENT_LENGTH=  63,-
                       MIN_ELEMENT_LENGTH=  0),-
                  LIST(NAME              =  "FOLDER_1_TITLE",-
                       TYPE              =  "TEXT",-
                       MAX_LENGTH        =  10),-
                  LIST(NAME              =  "MEAS_1_DECIMALS",-
                       TYPE              =  "INTEGER",-
                       MAX_VALUE         =  4,-
                       MIN_VALUE         =  0),-
                  LIST(NAME              =  "TYPE_MEAS_2",-
                       TYPE              =  "SELECTOR",-
                       VALUES            =  %TYPE_MEAS_VALUES,-
                       REPRESENT         =  %TYPE_MEAS_REPRESENT,-
                       CHANGE_CALLBACK   =  VECTOR("@ATTR_NR=2","#DO .ST_READ_DATA_FILE_SECTION(""CALLBACK_TYPE_MEAS"")")),-
                  LIST(NAME              =  "OPC_LN_INSTANCE_2",-
                       TYPE              =  "VECTOR",-
                       ELEMENT_TYPE      =  "TEXT",-
                       MAX_LENGTH        =  4,-
                       MAX_ELEMENT_LENGTH=  63,-
                       MIN_ELEMENT_LENGTH=  0),-
                  LIST(NAME              =  "FOLDER_2_TITLE",-
                       TYPE              =  "TEXT",-
                       MAX_LENGTH        =  10),-
                  LIST(NAME              =  "MEAS_2_DECIMALS",-
                       TYPE              =  "INTEGER",-
                       MAX_VALUE         =  4,-
                       MIN_VALUE         =  0),-
                  LIST(NAME              =  "TYPE_MEAS_3",-
                       TYPE              =  "SELECTOR",-
                       VALUES            =  %TYPE_MEAS_VALUES,-
                       REPRESENT         =  %TYPE_MEAS_REPRESENT,-
                       CHANGE_CALLBACK   =  VECTOR("@ATTR_NR=3","#DO .ST_READ_DATA_FILE_SECTION(""CALLBACK_TYPE_MEAS"")")),-
                  LIST(NAME              =  "OPC_LN_INSTANCE_3",-
                       TYPE              =  "VECTOR",-
                       ELEMENT_TYPE      =  "TEXT",-
                       MAX_LENGTH        =  4,-
                       MAX_ELEMENT_LENGTH=  63,-
                       MIN_ELEMENT_LENGTH=  0),-
                  LIST(NAME              =  "FOLDER_3_TITLE",-
                       TYPE              =  "TEXT",-
                       MAX_LENGTH        =  10),-
                  LIST(NAME              =  "MEAS_3_DECIMALS",-
                       TYPE              =  "INTEGER",-
                       MAX_VALUE         =  4,-
                       MIN_VALUE         =  0),-
                  LIST(NAME              =  "TYPE_MEAS_4",-
                       TYPE              =  "SELECTOR",-
                       VALUES            =  %TYPE_MEAS_VALUES,-
                       REPRESENT         =  %TYPE_MEAS_REPRESENT,-
                       CHANGE_CALLBACK   =  VECTOR("@ATTR_NR=4","#DO .ST_READ_DATA_FILE_SECTION(""CALLBACK_TYPE_MEAS"")")),-
                  LIST(NAME              =  "OPC_LN_INSTANCE_4",-
                       TYPE              =  "VECTOR",-
                       ELEMENT_TYPE      =  "TEXT",-
                       MAX_LENGTH        =  4,-
                       MAX_ELEMENT_LENGTH=  63,-
                       MIN_ELEMENT_LENGTH=  0),-
                  LIST(NAME              =  "FOLDER_4_TITLE",-
                       TYPE              =  "TEXT",-
                       MAX_LENGTH        =  10),-
                  LIST(NAME              =  "MEAS_4_DECIMALS",-
                       TYPE              =  "INTEGER",-
                       MAX_VALUE         =  4,-
                       MIN_VALUE         =  0),-
                  LIST(NAME              =  "AUTHORIZATION_GROUP",-
                       TYPE              =  "EDITABLE_SELECTOR",-
                       INPUT_TYPE        =  "TEXT",-
                       VALUES            =  %AUTHORIZATION_GROUPS,-
                       REPRESENT         =  %AUTHORIZATION_GROUPS,-
                       MAX_LENGTH        =  63),-
                  LIST(NAME              =  "EVENT_RECORDING",-
                       TYPE              =  "BOOLEAN")),-
      SCT_USER_PROGS = (-
                  "U_OTHER_OBJECTS"),-
      SCT_HELP_FILE = "SAGR_LANG/SAI_ME1.HLP",-
      REPR_ATTRIBUTES = -
                  LIST(NAME              =  "REPRESENTATION",-
                       VALUES            =  %REPR_LIST),-
      REPR_USER_PROGS = "")  
                           
;add configurable attributes for object identifiers
#SET FUNC_DEF:VSCT_ATTRIBUTES = APPEND(%OBJECT_IDENTIFIERS, FUNC_DEF:VSCT_ATTRIBUTES)

;read object identification from database when SCT opens
@S = STATUS
#ERROR IGNORE
@PRODUCT_ID = .PRODUCT_ID
#ERROR CONTINUE
@S = STATUS
#IF %S == 0 #THEN #BLOCK
  #IF UPPER_CASE(.PRODUCT_ID) == "PF_CONF" #THEN #BLOCK
    #ERROR IGNORE
    @S = STATUS
    @DB_LN = 'ID'_PICTURE_FUNCTION_CONF:VP_OBJECT_LN
    @DB_IX = 'ID'_PICTURE_FUNCTION_CONF:VP_OBJECT_INDEXES(1)
    @DB_OI = 'DB_LN':POI'DB_IX'
    @OI_START_POS = 1
    #ERROR CONTINUE
    @S = STATUS
    #IF %S == 0 #THEN #BLOCK
      #LOOP_WITH I = 1..30
        #IF %I < %NR_OF_FIELDS #THEN #BLOCK  
          @TEXT_FROM_DB = EDIT(SUBSTR(%DB_OI,%OI_START_POS,%OI_LENGTH'I'-1),"TRIM")
          @CONF_VALUE = .ST_GET_ATTRIBUTE(%OBJECT_IDENTIFIER_'I'_NAME)
          #IF %TEXT_FROM_DB <> %CONF_VALUE #THEN .ST_SET_ATTRIBUTE(%OBJECT_IDENTIFIER_'I'_NAME,%TEXT_FROM_DB)
          @OI_START_POS = %OI_START_POS + %OI_LENGTH'I'
        #BLOCK_END
        #ELSE_IF %I == %NR_OF_FIELDS #THEN #BLOCK  
          @TEXT_FROM_DB = EDIT(SUBSTR(%DB_OI,%OI_START_POS,%OI_LENGTH'I'),"TRIM")
          @CONF_VALUE = .ST_GET_ATTRIBUTE(%OBJECT_IDENTIFIER_'I'_NAME)
          #IF %TEXT_FROM_DB <> %CONF_VALUE #THEN .ST_SET_ATTRIBUTE(%OBJECT_IDENTIFIER_'I'_NAME,%TEXT_FROM_DB)
          @OI_START_POS = %OI_START_POS + %OI_LENGTH'I'
        #BLOCK_END
        #ELSE #LOOP_EXIT
      #LOOP_END
    #BLOCK_END
  #BLOCK_END
#BLOCK_END

##FUNC_DEF_END

;-------- Callback programs -----------------

;callback station type
##CALLBACK_STATION_TYPE_BEGIN

@B_PASTE_ON = ROOT.ST_IS_PASTING
@STATION_TYPE = ROOT.ST_GET_ATTRIBUTE("STATION_TYPE")

#IF NOT %INITIALIZATION #THEN #BLOCK
  #IF NOT %B_PASTE_ON #THEN #BLOCK
     #IF %STATION_TYPE=="RTU" OR %STATION_TYPE=="RTU_E" #THEN ROOT.ST_SET_ATTRIBUTE_DEFINITION("EVENT_RECORDING",LIST(VALUE=TRUE))
     #ELSE ROOT.ST_SET_ATTRIBUTE_DEFINITION("EVENT_RECORDING",LIST(VALUE=FALSE))
  #BLOCK_END
#BLOCK_END

#IF %STATION_TYPE=="RTU" OR %STATION_TYPE=="RTU_E" OR %STATION_TYPE=="DNP_30" #THEN ROOT.ST_ENABLE_ATTRIBUTE("EVENT_RECORDING")
#ELSE ROOT.ST_DISABLE_ATTRIBUTE("EVENT_RECORDING")

#IF %STATION_TYPE <> "IEC61850" #THEN #BLOCK

   #IF NOT %INITIALIZATION #THEN #BLOCK
      ROOT.ST_DISABLE_ATTRIBUTE("OPC_ITEM_PREFIX")
      ROOT.ST_SET_ATTRIBUTE_DEFINITION("OPC_ITEM_PREFIX",LIST(VALUE=""))
      ROOT.ST_DISABLE_ATTRIBUTE("DEFINE_ITEM_NAME")
   #BLOCK_END
   
#BLOCK_END
#ELSE #BLOCK

   #IF NOT %INITIALIZATION #THEN ROOT.ST_ENABLE_ATTRIBUTE("DEFINE_ITEM_NAME")

#BLOCK_END

#IF %STATION_TYPE <> "IEC61850" #THEN #BLOCK
   ROOT.ST_DISABLE_ATTRIBUTE("DEFINE_ITEM_NAME")
   ROOT.ST_DISABLE_ATTRIBUTE("OPC_ITEM_PREFIX")
   #LOOP_WITH I = 1..4
      ROOT.ST_DISABLE_ATTRIBUTE("OPC_LN_INSTANCE_'I'")
      ROOT.ST_SET_ATTRIBUTE_DEFINITION("OPC_LN_INSTANCE_'I'",LIST(VALUE=VECTOR()))   
   #LOOP_END 
   ROOT.ST_SET_ATTRIBUTE_DEFINITION("OPC_ITEM_PREFIX",LIST(VALUE=""))
   
#BLOCK_END
#ELSE #BLOCK

   #IF ROOT.ST_GET_ATTRIBUTE("DEFINE_ITEM_NAME") #THEN #BLOCK
      ROOT.ST_ENABLE_ATTRIBUTE("OPC_ITEM_PREFIX")
      #LOOP_WITH I = 1..4
         ROOT.ST_ENABLE_ATTRIBUTE("OPC_LN_INSTANCE_'I'")
      #LOOP_END 
   #BLOCK_END
   #ELSE #BLOCK
      ROOT.ST_DISABLE_ATTRIBUTE("OPC_ITEM_PREFIX")
      #LOOP_WITH I = 1..4
         ROOT.ST_DISABLE_ATTRIBUTE("OPC_LN_INSTANCE_'I'")
      #LOOP_END 
   #BLOCK_END
#BLOCK_END


##CALLBACK_STATION_TYPE_END

##CALLBACK_DEFINE_ITEM_NAME_BEGIN
   #IF ROOT.ST_GET_ATTRIBUTE("DEFINE_ITEM_NAME") #THEN #BLOCK
      ROOT.ST_ENABLE_ATTRIBUTE("OPC_ITEM_PREFIX")
      #IF ROOT.ST_GET_ATTRIBUTE("OPC_ITEM_PREFIX") == "" #THEN  ROOT.ST_SET_ATTRIBUTE_DEFINITION("OPC_ITEM_PREFIX",LIST(VALUE="IEC61850 Subnetwork.IED1.LD1"))
      #LOOP_WITH I = 1..4
         ROOT.ST_ENABLE_ATTRIBUTE("OPC_LN_INSTANCE_'I'")
         @v_tmp = ROOT.ST_GET_ATTRIBUTE("OPC_LN_INSTANCE_'I'")
         @v_LNs = VECTOR("MMXU1")   
         #IF LENGTH(%v_tmp) == 0 #THEN ROOT.ST_SET_ATTRIBUTE_DEFINITION("OPC_LN_INSTANCE_'I'",LIST(VALUE=%v_LNs))
         #ELSE_IF %v_tmp(1) == "" #THEN ROOT.ST_SET_ATTRIBUTE_DEFINITION("OPC_LN_INSTANCE_'I'",LIST(VALUE=%v_LNs))
      #LOOP_END 
   #BLOCK_END
   #ELSE #BLOCK
      ROOT.ST_DISABLE_ATTRIBUTE("OPC_ITEM_PREFIX")
      #LOOP_WITH I = 1..4
         ROOT.ST_DISABLE_ATTRIBUTE("OPC_LN_INSTANCE_'I'")
      #LOOP_END 
   #BLOCK_END
##CALLBACK_DEFINE_ITEM_NAME_END

;callback measurement type
##CALLBACK_TYPE_MEAS_BEGIN

#IF NOT %INITIALIZATION #THEN #BLOCK
  #IF NOT %B_PASTE_ON #THEN #BLOCK
     ;ROOT.ST_SET_ATTRIBUTE_DEFINITION("FOLDER_'ATTR_NR'_TITLE",LIST(VALUE=""))
     ;ROOT.ST_SET_ATTRIBUTE_DEFINITION("MEAS_'ATTR_NR'_DECIMALS",LIST(VALUE=0))
  #BLOCK_END
#BLOCK_END
#IF ROOT.ST_GET_ATTRIBUTE("TYPE_MEAS_'ATTR_NR'")<>"" #THEN #BLOCK
  ROOT.ST_ENABLE_ATTRIBUTE("FOLDER_'ATTR_NR'_TITLE")
  ROOT.ST_ENABLE_ATTRIBUTE("MEAS_'ATTR_NR'_DECIMALS")
;  ROOT.ST_ENABLE_ATTRIBUTE("OPC_LN_INSTANCE_'ATTR_NR'")
;  ROOT.ST_SET_ATTRIBUTE_DEFINITION("OPC_LN_INSTANCE_'ATTR_NR'",LIST(VALUE=VECTOR("MMXU1")))
#BLOCK_END
#ELSE #BLOCK
  ROOT.ST_DISABLE_ATTRIBUTE("FOLDER_'ATTR_NR'_TITLE")
  ROOT.ST_DISABLE_ATTRIBUTE("MEAS_'ATTR_NR'_DECIMALS")
;  ROOT.ST_DISABLE_ATTRIBUTE("OPC_LN_INSTANCE_'ATTR_NR'")
;  ROOT.ST_SET_ATTRIBUTE_DEFINITION("OPC_LN_INSTANCE_'ATTR_NR'",LIST(VALUE=VECTOR()))
#BLOCK_END


##CALLBACK_TYPE_MEAS_END


;-------- SCT Initialization -----------------
##SCT_INIT_BEGIN

;execute callbacks once to initialize SCT
@INITIALIZATION = TRUE
#DO .ST_READ_DATA_FILE_SECTION("CALLBACK_STATION_TYPE")
#LOOP_WITH I=1..4
  @ATTR_NR=%I
  #DO .ST_READ_DATA_FILE_SECTION("CALLBACK_TYPE_MEAS")
#LOOP_END
@INITIALIZATION = FALSE

##SCT_INIT_END

;-------- Define Configuration Tool Menu -----------------
##MENU_TXT_BEGIN

   .ENABLE_POT
   .ENABLE_REPRESENTATION_TOOL

##MENU_TXT_END

##MENU_PROG_BEGIN

##MENU_PROG_END


;-------- Define Process Objects -----------------
##P_OBJECTS_BEGIN

   #DO READ_TEXT("SAGR_INST/SAI_ME1.POT",1,10000)

##P_OBJECTS_END

;-------- Program Executed when OK -----------------
##OK_BEGIN

;save the object identifier (OI-attribute) for the future use
#LOOP_WITH I = 1 .. %NR_OF_FIELDS
  @SECTION    = %OBJECT_IDENTIFIER_'I'_NAME
  @CONF_VALUE = .ST_GET_ATTRIBUTE(%SECTION)

  ;if field not empty
  #IF %CONF_VALUE<>"" #THEN #BLOCK
    ;check if identifier already exists
    @NEW_IDENTIFIER=TRUE
    #LOOP_WITH J = 1 .. 10
      @KEY          = "'SECTION''J'"
      @KEY_VALUE'J' = READ_PARAMETER("PICT/OBJ_IDEN.INI",%SECTION,%KEY)
      @KEY_VALUE    = %KEY_VALUE'J'
      #IF KEY_VALUE:VSTATUS == 0 #THEN #BLOCK
        #IF KEY_VALUE:VVALUE == %CONF_VALUE #THEN @NEW_IDENTIFIER=FALSE
      #BLOCK_END
    #LOOP_END

    ;replace the last identifier with a new one
    #IF %NEW_IDENTIFIER #THEN #BLOCK
      #LOOP_WITH J = 1 .. 9
        @CNTR1 = 10 - %J
        @CNTR2 = %CNTR1 + 1
        @KEY_OLD = "'SECTION''CNTR1'"
        @KEY_NEW = "'SECTION''CNTR2'"
        @KEY_VALUE'CNTR1' = READ_PARAMETER("PICT/OBJ_IDEN.INI",%SECTION,%KEY_OLD)
        @KEY_PREV = %KEY_VALUE'CNTR1'
        #IF KEY_PREV:VSTATUS == 0 #THEN #BLOCK
          @KEY_OLD_VALUE = KEY_PREV:VVALUE
          @NEW = WRITE_PARAMETER("PICT/OBJ_IDEN.INI",%SECTION,%KEY_NEW,%KEY_OLD_VALUE)
          @OLD = DELETE_PARAMETER("PICT/OBJ_IDEN.INI",%SECTION,%KEY_OLD)
        #BLOCK_END
      #LOOP_END
      @FIRST_KEY = "'SECTION'"+"1"
      @KEY'I' = WRITE_PARAMETER("PICT/OBJ_IDEN.INI",%SECTION,%FIRST_KEY,%CONF_VALUE)
    #BLOCK_END
  #BLOCK_END
#LOOP_END

##OK_END

;-------- Program Executed when CANCEL -----------------
##CANCEL_BEGIN
 
 
 
##CANCEL_END

;-------- Program Executed when DELETE -----------------
##DELETE_BEGIN



##DELETE_END

