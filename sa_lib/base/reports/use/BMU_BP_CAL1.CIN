; Function:    BMU_BP_CAL1:C
; Version:     3.0 (Build 23.02.2012)
; Parameters:  %Object_Names vector contains all objects for this base period
; Return data: none
; Description: Calculate period values (Part 1)
;-------------------------------------------------------------------------------
;Revision History
;Date       Vers.    Author Description
;-------------------------------------------------------------------------------
#local i, i_Status = status ,trash, cot,-
       v_ObjNamesCalc = vector(), v_ObjNamesClean = vector(), v_ObjNamesBPOnly = vector(),-
       l_Now,l_Previous, b_SummertimeSwitch = false, b_WintertimeSwitch = false
#error ignore

#if BMU_GLOBAL:CCS==1 #then #DO BMU_GLOBAL:CCP
#else #DO BMU_GLOBAL:C

;*** 01.06.2009 HoDa ID 13897  ST switch detection
l_Now      = local_time
l_Previous = local_time_add(l_Now, -60 - %BP_Delay)                             ;*** check if previous sampling executed in WT
#if l_Now.DS and not l_Previous.DS #then b_SummertimeSwitch = true              ;*** now we have ST, previous was in WT
#if not l_Now.DS and l_Previous.DS #then b_WintertimeSwitch = true              ;***now we have WT, previous was in ST

#loop_with i = 1..length(%v_ObjectNames)
   @t_ObjectName   = %v_ObjectNames(i)
   @l_ReportObject = %l_ReportObjects.OBJ_'t_ObjectName'  

   #if substr(%l_ReportObject.ID,1,1)=="M" #then #block
      #if substr(%l_ReportObject.ID,1,2)=="MP" #then #exec 't_ObjectName':D     ;*** only base period values no sampling, one shot only

      ;start and end time
      @T1 = clock - (%l_ReportObject.BP + %BP_Delay)
      #if b_SummertimeSwitch #then @T1 = %T1 - 3600
      #if b_WintertimeSwitch #then @T1 = %T1 + 3600
      @T2

      #if BMU_BP_IND:CCS==1 #then #do BMU_BP_IND:CCP
      #else #do BMU_BP_IND:C

      #if %l_ReportObject.SP_HL > 0 and substr(%l_ReportObject.ID,1,2)<>"MP" #then #block   ;*** sampling history exist
         #if BMU_BP_CAL3:CCS==1 #then #do BMU_BP_CAL3:CCP                       ;***calc. from sampled values and store to base period
         #else #do BMU_BP_CAL3:C
      #block_end
      #else v_ObjNamesBPOnly = insert_element(v_ObjNamesBPOnly, 1, %t_ObjectName) ;*** Objects without sampling history MP and SP_HL = 0

      #if %l_ReportObject.BP_HL > 0 #then v_ObjNamesClean = insert_element(v_ObjNamesClean,1,%t_ObjectName)

   #block_end
   #else_if substr(%l_ReportObject.ID,1,2)=="CB" or substr(%l_ReportObject.ID,1,2)=="CP" #then #block
      v_ObjNamesCalc = insert_element(v_ObjNamesCalc, 1,%t_ObjectName)          ;*** collect obj.names where calculation needs to take place 
      #if %l_ReportObject.BP_HL > 0 #then -
         v_ObjNamesClean = insert_element(v_ObjNamesClean, 1, %t_ObjectName)    ;*** collect obj.names where cleaning needs to take place
   #block_end
#loop_end

;*** update base period obj. from sampling period obj. no calc.
#if length(v_ObjNamesBPOnly) > 0 #then #exec BMU_BP_UPDATE:C (@v_ObjectNames=v_ObjNamesBPonly, @b_StartUpdate = false)

;*** update calculated objects and execute the callback method
#if length(v_ObjNamesCalc) > 0 #then -
      #exec BMU_BP_CAL2:C (@v_ObjectNames=v_ObjNamesCalc)
#else #exec BMU_BP_CLBK:C                                                       ;### 30.03.2009 HoDa ID14434

;*** reset old values (once a day)
#if HOUR == 5 AND CLOCK - BMU_BP_CLEAN:CRT > 86000  AND length(v_ObjNamesClean) > 0 #then -
   #exec_after 30 BMU_BP_CLEAN:C (@v_ObjectNames=v_ObjNamesClean)

#if b_WintertimeSwitch #then #exec_after 10 BMU_WINTER:C

i_Status = status
#if i_Status <> 0 #then cot = console_output("BMU_BP_CAL1:C - SCIL Error='i_Status'","E","MREP") 
