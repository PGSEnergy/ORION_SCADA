; Function:    BMU_BP_SUM2:C
; Version:     3.0 (Build 1.03.2012)
; Parameters:  DATAIN - input object names
;              OPER - calculation
;              t_ObjectName - calculated object name
; Return data: none
; Description: Calculate data of calculated data objects
; Note! This procedure needs also input variables from
;       procedure BMU_BP_SUM1:C (Only one period at the time)
;-------------------------------------------------------------------------------
;Revision History
;Date       Vers.    Author Description
;-------------------------------------------------------------------------------
#local i, v_ = vector(), i_Status = status, v_IX = vector(), x_, cot,-
       i_Result = 0, l_Data = list(), t_DO_LN
#error ignore

#case data_type(%DATAIN)
   #when "TEXT" #block
      #if %DATAIN > "" #then #block
         @DATA_ID = %DATAIN
         #if BMU_BP_READ:CCS==1 #then #DO BMU_BP_READ:CCP
         #else #DO BMU_BP_READ:C
         i_Status = status
         @OBJ = DATA:VOV
         i_Result = DATA:VOV
         i_Status = status
      #block_end
   #block_end
   #when "VECTOR" #block
      #loop_with i = 1..length(%DATAIN)
         @DATA_ID= %DATAIN(i)
         #if BMU_BP_READ:CCS==1 #then #DO BMU_BP_READ:CCP
         #else #DO BMU_BP_READ:C
         i_Status = status
         @OBJ'i' = DATA:VOV
         #if i == 1 #then i_Result = DATA:VOV
         #else            i_Result = i_Result + DATA:VOV
         i_Status = status
      #loop_end
   #block_end
#case_end
i_Status = status
#if i_Status <> 0 #then-
   cot = console_output("BMU_BP_SUM2:C - Report Object 't_ObjectName':D - Error 'i_Status' on data fetch for Input Object(s)","E","MREP")

;*** do pre-defined operation, if any...
#case data_type(%OPER)
   #when "TEXT" #block
      #if %OPER > "" #then #block
         i_Status = status
         i_Result = 'OPER'
         i_Status = status
      #block_end
   #block_end
   #when "VECTOR" #block
      i_Status = status
      i_Result = do(%OPER)
      i_Status = status
   #block_end
#case_end
i_Status = status
#if i_Status <> 0 #then-
   cot = console_output("BMU_BP_SUM2:C - Report Object 't_ObjectName' - Error 'i_Status' on operation execution","E","MREP")

;*** define period values...
#case data_type(i_Result)
   #when "TEXT","NONE" #block
      #if i_Status == 0 #then i_Result = set_status(vector(0),10)
      #else                   i_Result = set_status(vector(0),i_Status)
   #block_end
   #when "VECTOR" #block
      #if i_Status == 0 #then i_Result = i_Result
      #else i_Result = set_status(vector(0),i_Status)
   #block_end
   #otherwise #block
      #if i_Status == 0 #then i_Result = vector(i_Result)
      #else i_Result = set_status(vector(0),i_Status)
   #block_end
#case_end

;*** define proper status for calculated values 
v_IX = select(get_status(i_Result),">1 and <9")                                 ;*** V2.7 HoDa select condition changed from <10 to <9 fot manual tagging
i_Result = spread(i_Result,v_IX,set_status(pick(i_Result,v_IX),1))

;*** store calculated data to db
#if %YE1 == %YE2 #then #block                                                   ;*** Data inside the same year
   l_Data = list(OV = i_Result, OS = get_status(i_Result), RT = vector())
   l_Data.RT(1..%NP) = clock
   t_DO_LN = %t_ObjectName+"'YE1'"
   x_ = data_store(0, t_DO_LN, l_Data, %IP1)
#block_end
#else #block                                                                    ;*** Data not inside the same year
   l_Data = list(OV = i_Result(1..%N1), OS = get_status(i_Result(1..%N1)), RT = vector())
   l_Data.RT(1..%N1) = clock
   t_DO_LN = %t_ObjectName+"'YE1'"
   x_ = data_store(0, t_DO_LN, l_Data, %IP1)

   l_Data = list(OV=i_Result((%N1+1)..),OS=GET_STATUS(i_Result((%N1+1)..)), RT = vector())
   l_Data.RT(1..%N2) = clock
   t_DO_LN = %t_ObjectName+"'YE2'"
   x_ = data_store(0, t_DO_LN, l_Data, 1)
#block_end

;*** Show notification, if errors...
i_Status = status
#if i_Status <> 0 #then-
   cot = console_output("BMU_BP_SUM2:C - Report Object 't_ObjectName' - SCIL Error='i_Status'","E","MREP")

