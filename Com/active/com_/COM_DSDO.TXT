; This command procedure is used for sending DO process object values from a NCC to a COM 
; application (downstream direction)
;
; SYS600 10.2.0
; Compilation status: Compiled
; DO NOT edit this program without consulting with Hitachi Power Grids.
;
;  INPUT: @LN, @IX, @AI, @CA, @OS attributes of the input object
;         @NCC_PROTOCOL, protocol of the NCC sending the command(COM_AUTHCH:C)
;         @NCC_STA_NUMBER, STA object number of the NCC(COM_AUTHCH:C)
;         @COMMAND_TYPE, type of the command (direct/secured-2/secured-4), integer (COM_DSXREF:C)
;         @OUTPUT_OBJECT_LNS, logical name(s) of the output object(s), text/vector (COM_DSXREF:C)
;         @OUTPUT_OBJECT_IXS, indexe(s) of the output object(s), vector (COM_DSXREF:C)
;         @SIGNAL_HANDLING_ATTRS, datatype-specific special conditions, vector (COM_DSXREF:C)
;         @NCC_NUMBER, number of the NCC sending the command 
; OUTPUT  APL:BSV(28), time stamps of the pending indications
;         APL:BSV(29), ids (ln+ix+oa+sta_nr+og) of the pending indications
;------------------------------------------------------------------------------------------------

#ERROR CONTINUE

;initialize variables
@INDICATION_CONNECTED = FALSE
@STATUS_INCREMENT = 0
@IEC_TERM_ENABLED = COM_GENVAR:PBZ(2)
@ENABLE_LOGGING = COM_GENVAR:PBZ(3)
@UN = 'LN':PUN'IX'
@COMMAND_COMPLETE = 0

#IF %OS <> 2 #THEN #BLOCK 
   ;read cross-reference table pointer
   @XREF_INDEX = 'LN':PTI'IX'   
   ;if xref found, decode NCC addresses and group alarm information
   #IF %XREF_INDEX > 0  #THEN #BLOCK  ; 1
      #IF COM_DSXREF:CCS == 1 #THEN #DO COM_DSXREF:CCP
      #ELSE #DO COM_DSXREF:CIN
      ;check command authority
      #IF COM_AUTHCH:CCS == 1 #THEN #DO COM_AUTHCH:CCP
      #ELSE #DO COM_AUTHCH:CIN
      ;check command blocking , arguments %OUTPUT_OBJECT_LNS and %OUTPUT_OBJECT_IXS
      #IF COM_DSCMDBLK:CCS == 1 #THEN #DO COM_DSCMDBLK:CCP
      #ELSE #DO COM_DSCMDBLK:CIN
      #IF %CONTROLS_ALLOWED == 1 AND NOT %COMMAND_BLOCKED #THEN #BLOCK ; 2
         ;reset status                
         @S = STATUS
         ;perform the command according to the command type and protocol
         #CASE %NCC_PROTOCOL ; 3
            #WHEN 1 #BLOCK ;RP-570 slave protocol ; 4
               ;originator address
               @ORIGINATOR = %NCC_STA_NUMBER
               ;************** project-specific modifications ******************
               #IF BIT(%SIGNAL_HANDLING_ATTRS,0) == 1 #THEN #BLOCK
                  ;write the project-specific code in this block
               #BLOCK_END
               @VALUE = ROUND(MAX(%OV,0))
               #SET 'OUT_LN':POV'OUT_IX' = %VALUE
               ;if succesful command and an indication has been connected set the tag
               #IF STATUS == 0 AND LENGTH(%OUTPUT_OBJECT_LNS) == 2 #THEN @INDICATION_CONNECTED = TRUE
               #IF %ENABLE_LOGGING #THEN #BLOCK ; 5
                  @ADDR='OUT_LN':POA'OUT_IX'
                  @STA_NR='OUT_LN':PUN'OUT_IX'
                  @SH=%SIGNAL_HANDLING_ATTRS
                  @SX_STATE='OUT_LN':PSX'OUT_IX'
                  @S=STATUS
                  @INFO="'rt':'rm',DSDO,'UN','LN':P'IX','STA_NR',,'OV',RP570,'SH','ADDR','VALUE',,,,,,,,'S',,,'SX_STATE'"
                  #IF COM_LOG:CCS == 1 #THEN #DO COM_LOG:CCP
                  #ELSE #DO COM_LOG:CIN
               #BLOCK_END ; 5
            #BLOCK_END ; 4
            #WHEN 2 #BLOCK ;IEC protocol ; 4
               #IF %NCC_SUBPROTOCOL == 2 #THEN #BLOCK ;ICCP
                  ;originator address
                  @ORIGINATOR = %NCC_STA_NUMBER
                  @RES = 0
                  #IF %RA == 1 #THEN #BLOCK;select
                     #SET STA'NCC_STA_NUMBER':SCF('LN':POA'IX') = (%RES,%RA)
                  #BLOCK_END
               #BLOCK_END
               #ELSE_IF %NCC_SUBPROTOCOL == 3 #THEN #BLOCK ;IEC 61850 Server
                  #IF %CT == 8 #THEN @RA = 1
                  ;originator address
                  @ORIGINATOR = %OG  
               #BLOCK_END
               #ELSE #BLOCK ;IEC 101/104
                  ;originator address
                  @ORIGINATOR = %OG
                  ;send command confirmation, if manual confirmation
                  #IF STA'NCC_STA_NUMBER':SPC == 0 #THEN #BLOCK 
                     #SET STA'NCC_STA_NUMBER':SCF = (256*%ORIGINATOR+%CT+1,'LN':POA'IX')
                     #IF %ENABLE_LOGGING #THEN #BLOCK ; 1
                        @CF_TIME = HR_CLOCK
                        @CF_RT = TIMES(CF_TIME:VCL)
                        @CF_RM = ROUND(CF_TIME:VUS/1000)      
                        @CF_LOG_ADDR = 'LN':POA'IX'
                        @INFO="'CF_RT':'CF_RM',DSDO,'NCC_STA_NUMBER','LN':P'IX',,Activation confirmation,,,,'CF_LOG_ADDR',,,,,,,,,,,,"
                        #IF COM_LOG:CCS == 1 #THEN #DO COM_LOG:CCP
                        #ELSE #DO COM_LOG:CIN 
                     #BLOCK_END
                  #BLOCK_END
               #BLOCK_END
               @OUT_LN = %OUTPUT_OBJECT_LNS(1)
               @OUT_IX = %OUTPUT_OBJECT_IXS(1)
               ;************** project-specific modifications ******************
               #IF BIT(%SIGNAL_HANDLING_ATTRS,0) == 1 #THEN #BLOCK
                  ;write the project-specific code in this block
               #BLOCK_END
               #IF BIT(%SIGNAL_HANDLING_ATTRS,2) == 1 #THEN #BLOCK
                  @DB_VALUES = (0,0,1,0)
                  @VALUE = %DB_VALUES(%OV+1)
                  ;negative confirmation/termination if invalid value
                  #IF %OV == 0 OR %OV == 3 #THEN @STATUS_INCREMENT = 64
                  #IF BIT(%SIGNAL_HANDLING_ATTRS,1) == 1 #THEN @VALUE = 1-%VALUE
               #BLOCK_END
               #ELSE_IF BIT(%SIGNAL_HANDLING_ATTRS,3) == 1 #THEN #BLOCK
                  @VALUE = %OV
                  #IF BIT(%SIGNAL_HANDLING_ATTRS,1) == 1 #THEN @VALUE = 1-%VALUE
               #BLOCK_END
               #ELSE @VALUE = MAX(MIN(ROUND(%OV),65535),0) ; value from an analog object
               #IF %STATUS_INCREMENT == 0 #THEN #BLOCK
                  #IF %CT < 128 #THEN #BLOCK 
                     #IF %RA == 0 #THEN #SET 'OUT_LN':POV'OUT_IX' = %VALUE
                     @COMMAND_STATUS = STATUS
                     ;if succesful command and an indication has been connected set the tag
                     ;when executing the command
                     #IF %COMMAND_STATUS == 0 #THEN #BLOCK
                        #IF LENGTH(%OUTPUT_OBJECT_LNS) == 2 AND %RA == 0 #THEN @INDICATION_CONNECTED = TRUE
                     #BLOCK_END
                     #ELSE @STATUS_INCREMENT = 64
                  #BLOCK_END
               #BLOCK_END
               #IF %NCC_SUBPROTOCOL == 2 #THEN #BLOCK
                  #IF %RA == 0 #THEN #BLOCK      
                     #IF %STATUS_INCREMENT == 64 #THEN @RES = 2  
                     #SET STA'NCC_STA_NUMBER':SCF('LN':POA'IX') = (%RES,%RA)
                  #BLOCK_END
                  #IF %ENABLE_LOGGING #THEN #BLOCK ; 5
                     @ADDR='OUT_LN':POA'OUT_IX'
                     @STA_NR='OUT_LN':PUN'OUT_IX'
                     @NCC_TYPE="ICCP"
                     @SH=%SIGNAL_HANDLING_ATTRS
                     @SX_STATE='OUT_LN':PSX'OUT_IX'
                     @S=STATUS
                     @INFO="'rt':'rm',DSDO,'UN','OUT_LN':P'OUT_IX','STA_NR',,'OV','NCC_TYPE','SH','ADDR','VALUE',,,,,,,,'S',,,'SX_STATE'"               
                     #IF COM_LOG:CCS == 1 #THEN #DO COM_LOG:CCP
                     #ELSE #DO COM_LOG:CIN 
                     @CF_TIME = HR_CLOCK
                     @CF_RT = TIMES(CF_TIME:VCL)
                     @CF_RM = ROUND(CF_TIME:VUS/1000)      
                     @CF_LOG_ADDR = 'LN':POA'IX'
                     #IF %RES == 0 #THEN @CF_LOG_TEXT = "Activation confirmation"
                     #ELSE @CF_LOG_TEXT = "Negative activation confirmation" 
                     @INFO="'CF_RT':'CF_RM',DSDO,'NCC_STA_NUMBER','LN':P'IX',,'CF_LOG_TEXT',,,,'CF_LOG_ADDR',,,,,,,,,,,,"
                     #IF COM_LOG:CCS == 1 #THEN #DO COM_LOG:CCP
                     #ELSE #DO COM_LOG:CIN
                  #BLOCK_END ; 5      
               #BLOCK_END
               #ELSE_IF %NCC_SUBPROTOCOL == 3 #THEN #BLOCK 
                  #IF %COMMAND_STATUS == 0 #THEN #BLOCK
                     #IF LENGTH(%OUTPUT_OBJECT_LNS) == 2 AND %RA == 0 #THEN @INDICATION_CONNECTED = TRUE
                     @STATUS_INCREMENT = 0
                     @ACR = 0 
                  #BLOCK_END
                  #ELSE #BLOCK
                     @STATUS_INCREMENT = 64
                     #IF %COMMAND_STATUS == 13222 #THEN #BLOCK
                        @LAST_ERROR_OBJECT_55 = APPLICATION_OBJECT_EXISTS(0, "IX", LIST(LN=%OUTPUT_OBJECT_LNS(1), IX=55),"IU == 1") 
                        #IF %LAST_ERROR_OBJECT_55 #THEN #BLOCK
                           #PAUSE 0.1
                           #IF 'OUTPUT_LN':PRT55 > %RT OR ('OUTPUT_LN':PRT55 == %RT AND 'OUTPUT_LN':PRM55 > %RM) #THEN #BLOCK
                              @ACR = 'OUTPUT_LN':POV55
                           #BLOCK_END          
                           #ELSE @ACR = 0
                        #BLOCK_END
                        #ELSE @ACR = 0
                     #BLOCK_END
                     #ELSE @ACR = 23
                  #BLOCK_END
                  #IF %RA == 0 AND %INDICATION_CONNECTED == FALSE #THEN @COMMAND_COMPLETE = 1
                  #IF %CT == 8 #THEN #BLOCK
                     @COMMAND_COMPLETE = 1
                     @RA = 0
                  #BLOCK_END
                  @ACR = TRUNC(%ACR) MOD 1000
                  #IF BIT(%RB,8) == 1 #THEN @STATUS_INCREMENT = %STATUS_INCREMENT + 128 ;TestCommand  
                  #SET STA'NCC_STA_NUMBER':SCF = (%CT+1+%STATUS_INCREMENT,('LN':POA'IX'),%ACR ,%RA,%COMMAND_COMPLETE)
                  #IF %ENABLE_LOGGING #THEN #BLOCK ; 5
                     #IF SUBSTR('OUT_LN':PDX'OUT_IX',1,2) == "E3" #THEN #BLOCK
                        #IF 'OUT_LN':POA'OUT_IX' == 0 #THEN @ADDR = 0
                        #ELSE @ADDR = 'OUT_LN':POA'OUT_IX' - 4096*3   
                     #BLOCK_END
                     #ELSE @ADDR='OUT_LN':POA'OUT_IX'
                     @STA_NR='OUT_LN':PUN'OUT_IX'
                     @NCC_TYPE="IEC61850"
                     @SH=%SIGNAL_HANDLING_ATTRS
                     @SX_STATE='OUT_LN':PSX'OUT_IX'
                     @LOG_VALUE = %VALUE 
                     @S=%COMMAND_STATUS
                     @INFO="'rt':'rm',DSDO,'UN','OUT_LN':P'OUT_IX','STA_NR',,'OV','NCC_TYPE','SH','ADDR','LOG_VALUE',,,,,,,,'S',,,'SX_STATE'"               
                     #IF COM_LOG:CCS == 1 #THEN #DO COM_LOG:CCP
                     #ELSE #DO COM_LOG:CIN 
                     ;activation confirmation or termination
                     @CF_TIME = HR_CLOCK
                     @CF_RT = TIMES(CF_TIME:VCL)
                     @CF_RM = ROUND(CF_TIME:VUS/1000)      
                     @CF_LOG_ADDR = 'LN':POA'IX'
                     #IF %STATUS_INCREMENT == 0 #THEN @CF_LOG_TEXT = "Activation confirmation"
                     #ELSE @CF_LOG_TEXT = "Negative activation confirmation" 
                     @INFO="'CF_RT':'CF_RM',DSDO,'NCC_STA_NUMBER',,,'CF_LOG_TEXT',,,,'CF_LOG_ADDR',,,,,,,,,,,,"
                     #IF COM_LOG:CCS == 1 #THEN #DO COM_LOG:CCP
                     #ELSE #DO COM_LOG:CIN
                  #BLOCK_END ; 5 
               #BLOCK_END
               #ELSE #BLOCK
                  #IF STA'NCC_STA_NUMBER':SPC == 0 AND NOT %INDICATION_CONNECTED AND %RA == 0 AND %IEC_TERM_ENABLED #THEN #BLOCK
                     #IF %CT < 128 #THEN @TERM_COT = 10
                     #ELSE @TERM_COT = 138 
                     #SET STA'NCC_STA_NUMBER':SCF = (256*%ORIGINATOR+%TERM_COT+%STATUS_INCREMENT,'LN':POA'IX')
                  #BLOCK_END
                  #IF %ENABLE_LOGGING #THEN #BLOCK ; 5
                     @ADDR='OUT_LN':POA'OUT_IX'
                     @STA_NR='OUT_LN':PUN'OUT_IX'
                     @NCC_TYPE="IEC101/104"
                     @SH=%SIGNAL_HANDLING_ATTRS
                     @SX_STATE='OUT_LN':PSX'OUT_IX'
                     @S=STATUS
                     @INFO="'rt':'rm',DSDO,'UN','LN':P'IX','STA_NR',,'OV','NCC_TYPE','SH','ADDR','VALUE',,,,,,,,'S',,,'SX_STATE'"
                     #IF COM_LOG:CCS == 1 #THEN #DO COM_LOG:CCP
                     #ELSE #DO COM_LOG:CIN
                     ;activation termination
                     #IF STA'NCC_STA_NUMBER':SPC == 0 AND NOT %INDICATION_CONNECTED AND %RA == 0 AND %IEC_TERM_ENABLED #THEN #BLOCK
                        @TIME = HR_CLOCK
                        @RT = TIMES(TIME:VCL)
                        @RM = ROUND(TIME:VUS/1000)
                        #IF %STATUS_INCREMENT == 64 #THEN @CF_LOG_TEXT = "Negative activation termination"
                        #ELSE @CF_LOG_TEXT = "Activation termination"        
                        @INFO="'rt':'rm',DSDO,'NCC_STA_NUMBER','LN':P'IX',,'CF_LOG_TEXT',,,,'CF_LOG_ADDR',,,,,,,,,,,,"
                        #IF COM_LOG:CCS == 1 #THEN #DO COM_LOG:CCP
                        #ELSE #DO COM_LOG:CIN 
                     #BLOCK_END
                  #BLOCK_END ; 5
               #BLOCK_END
            #BLOCK_END ; 4
            #WHEN 3 #BLOCK ; CPI interface ; 4
               ;originator address
               @ORIGINATOR = %NCC_STA_NUMBER
               ;************** project-specific modifications ******************
               #IF BIT(%SIGNAL_HANDLING_ATTRS,0) == 1 #THEN #BLOCK
                  ;write the project-specific code in this block
               #BLOCK_END
               @VALUE = ROUND(MAX(%OV,0))
               #SET 'OUT_LN':POV'OUT_IX' = %VALUE
               ;if succesful command and an indication has been connected set the tag
               #IF STATUS == 0 AND LENGTH(%OUTPUT_OBJECT_LNS) == 2 #THEN @INDICATION_CONNECTED = TRUE
               #IF %ENABLE_LOGGING #THEN #BLOCK ; 5
                  @ADDR='OUT_LN':POA'OUT_IX'
                  @STA_NR='OUT_LN':PUN'OUT_IX'
                  @NCC_TYPE="MODBUS/CPI"
                  @SH=%SIGNAL_HANDLING_ATTRS
                  @SX_STATE='OUT_LN':PSX'OUT_IX'
                  @S=STATUS
                  @INFO="'rt':'rm',DSDO,'UN','LN':P'IX','STA_NR',,'OV','NCC_TYPE','SH','ADDR','VALUE',,,,,,,,'S',,,'SX_STATE'"
                  #IF COM_LOG:CCS == 1 #THEN #DO COM_LOG:CCP
                  #ELSE #DO COM_LOG:CIN
               #BLOCK_END ; 5
            #BLOCK_END ; 4
            #WHEN 4 #BLOCK ; DNP 3.0 slave protocol ; 4
            
               ;digital output values are not supported by this protocol
            
            #BLOCK_END ; 4         
         #CASE_END ; 3
         ;write ln+ix+oa+sta_nr+og and time stamp to apl:bsv
         #IF %INDICATION_CONNECTED #THEN #BLOCK ; 3
            #IF LENGTH(APL:BSV(29)) < 9999 #THEN #BLOCK ; 4
               @OUT_LN = %OUTPUT_OBJECT_LNS(2)
               @OUT_IX = %OUTPUT_OBJECT_IXS(2)
               #IF SUBSTR('OUT_LN':PDX'OUT_IX',1,1) == "C" #THEN #BLOCK
                 @TMP = FETCH(0,"P",%OUT_LN,%OUT_IX+100)
                 #IF TMP:VIU <> -1 #THEN #IF TMP:VOA > 0 #THEN @OUT_IX = %OUT_IX + 100
               #BLOCK_END
               #SET APL:BSV(28) = APPEND(APL:BSV(28),CLOCK)
               #SET APL:BSV(29) = APPEND(APL:BSV(29),%OUT_LN+DEC(%OUT_IX,1)+"/"+DEC('LN':POA'IX',1)+"/"+DEC(%NCC_STA_NUMBER,1)+"/"+DEC(%ORIGINATOR,1))
            #BLOCK_END  ; 4                  
         #BLOCK_END ; 3
      #BLOCK_END ; 2
      #ELSE #BLOCK ;command not authorized ; 2
         #CASE %NCC_PROTOCOL  ; 3
            #WHEN 1 #BLOCK ;RP-570 slave protocol ; 4
   
            #BLOCK_END ; 4         
            #WHEN 2 #BLOCK ;IEC protocol ; 4
               ;send negative confirmation
               #IF %NCC_SUBPROTOCOL == 2 #THEN #BLOCK
                  #SET STA'NCC_STA_NUMBER':SCF('LN':POA'IX') = (2,%RA)
                  #IF %ENABLE_LOGGING #THEN #BLOCK ; 1
                     @CF_TIME = HR_CLOCK
                     @CF_RT = TIMES(CF_TIME:VCL)
                     @CF_RM = ROUND(CF_TIME:VUS/1000)      
                     @CF_LOG_ADDR = 'LN':POA'IX'
                     @INFO="'CF_RT':'CF_RM',DSDO,'NCC_STA_NUMBER','LN':P'IX',,Negative activation confirmation,,,,'CF_LOG_ADDR',,,,,,,,,,,,"
                     #IF COM_LOG:CCS == 1 #THEN #DO COM_LOG:CCP
                     #ELSE #DO COM_LOG:CIN 
                  #BLOCK_END  
               #BLOCK_END
               #ELSE_IF %NCC_SUBPROTOCOL == 3 #THEN #BLOCK
                  @ACR = 20
                  #SET STA'NCC_STA_NUMBER':SCF = (%CT+1+64,('LN':POA'IX'),%ACR,%RA)
                  @CF_TIME = HR_CLOCK
                  @CF_RT = TIMES(CF_TIME:VCL)
                  @CF_RM = ROUND(CF_TIME:VUS/1000)      
                  @CF_LOG_ADDR = 'LN':POA'IX'
                  @CF_LOG_TEXT = "Negative activation confirmation" 
                  @INFO="'CF_RT':'CF_RM',DSDO,'NCC_STA_NUMBER',,,'CF_LOG_TEXT',,,,'CF_LOG_ADDR',,,,,,,,,,,,"
                  #IF COM_LOG:CCS == 1 #THEN #DO COM_LOG:CCP
                  #ELSE #DO COM_LOG:CIN
               #BLOCK_END
               #ELSE #BLOCK
                  #IF STA'NCC_STA_NUMBER':SPC == 0 AND %IEC_TERM_ENABLED #THEN #BLOCK 
                     #SET STA'NCC_STA_NUMBER':SCF = (256*%OG+64+7,'LN':POA'IX')
                     #IF %ENABLE_LOGGING #THEN #BLOCK ; 1
                        @CF_TIME = HR_CLOCK
                        @CF_RT = TIMES(CF_TIME:VCL)
                        @CF_RM = ROUND(CF_TIME:VUS/1000)      
                        @CF_LOG_ADDR = 'LN':POA'IX'
                        @INFO="'CF_RT':'CF_RM',DSDO,'NCC_STA_NUMBER','LN':P'IX',,Negative activation confirmation,,,,'CF_LOG_ADDR',,,,,,,,,,,,"
                        #IF COM_LOG:CCS == 1 #THEN #DO COM_LOG:CCP
                        #ELSE #DO COM_LOG:CIN 
                     #BLOCK_END
                  #BLOCK_END
               #BLOCK_END
            #BLOCK_END ; 4 
            #WHEN 3 #BLOCK ; CPI interface ; 4
   
            #BLOCK_END ; 4
            #WHEN 4 #BLOCK ; DNP 3.0 slave protocol ; 4
   
            #BLOCK_END ; 4         
         #CASE_END ; 3
         #IF %ENABLE_LOGGING #THEN #BLOCK ; 3
            @INFO="'rt':'rm',DSDO,'UN','LN':P'IX',,command not authorized,,,,,,,,,,,,,,,,"
            #IF COM_LOG:CCS == 1 #THEN #DO COM_LOG:CCP
            #ELSE #DO COM_LOG:CIN
         #BLOCK_END ; 3        
      #BLOCK_END ; 2
   #BLOCK_END ; 1
   #ELSE_IF %ENABLE_LOGGING #THEN #BLOCK ; 1
      @INFO="'rt':'rm',DSDO,'UN','LN':P'IX',,cross-reference not found,,,,,,,,,,,,,,,,"
      #IF COM_LOG:CCS == 1 #THEN #DO COM_LOG:CCP
      #ELSE #DO COM_LOG:CIN
   #BLOCK_END ; 1
#BLOCK_END
