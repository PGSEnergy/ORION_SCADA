; This command procedure is used for sending AO process object values from a NCC to a COM 
; application (downstream direction)
;
; SYS600 10.2.0
; Compilation status: Compiled
; DO NOT edit this program without consulting with Hitachi Power Grids.
;
;  INPUT: @LN, @IX, @AI, @CA, @OS attributes of the input object
;         @NCC_PROTOCOL, protocol of the NCC sending the command(COM_AUTHCH:C)
;         @NCC_STA_NUMBER, STA object number of the NCC(COM_AUTHCH:C)
;         @COMMAND_TYPE, type of the command (direct/secured-2/secured-4), integer (COM_DSXREF:C)
;         @OUTPUT_OBJECT_LNS, logical name(s) of the output object(s), text/vector (COM_DSXREF:C)
;         @OUTPUT_OBJECT_IXS, indexe(s) of the output object(s), vector (COM_DSXREF:C)
;         @SIGNAL_HANDLING_ATTRS, datatype-specific special conditions, integer (bit mask) (COM_DSXREF:C)
;         @NCC_NUMBER, number of the NCC sending the command 
; OUTPUT  APL:BSV(28), time stamps of the pending indications
;         APL:BSV(29), ids (ln+ix+oa+sta_nr+og) of the pending indications
;         @RI, selection flag (0=not selected,1=selected without direction,2=open select,3=close select),
;         written to the command receiving process object
;------------------------------------------------------------------------------------------------

#LOCAL OUTPUT_LN, OUTPUT_OBJECT_70, OUTPUT_OBJECT_71

#ERROR CONTINUE

;initialize variables
@XREF_INDEX
@OUT_LN
@OUT_IX
@VALUE
@INDICATION_CONNECTED = FALSE
@CONNECTED_LENGTH_LIMIT = 0
@STATUS_INCREMENT = 0
@ACT_TERM_LOG = 0
@CS_CODE = 0
@ACR = 0 
@REX_561_OPEN_SELECT_VALUE = COM_GENVAR:PIZ(1)
@REX_561_CLOSE_SELECT_VALUE = COM_GENVAR:PIZ(2)
@REX_561_EXECUTE_VALUE = COM_GENVAR:PIZ(3)
@REX_561_CANCEL_VALUE = COM_GENVAR:PIZ(4)
@IEC_TERM_ENABLED = COM_GENVAR:PBZ(2)
@ENABLE_LOGGING = COM_GENVAR:PBZ(3)
@REC_561_REMOTE_SELECT_VALUE = COM_GENVAR:PIZ(6)
@REC_561_REMOTE_OPEN_EXECUTE_VALUE = COM_GENVAR:PIZ(7)
@REC_561_REMOTE_CLOSE_EXECUTE_VALUE = COM_GENVAR:PIZ(8)
@REC_561_REMOTE_CANCEL_VALUE = COM_GENVAR:PIZ(9)

@IEC_COMMAND_RECEIVED_WITHOUT_SELECT = COM_GENVAR:PBZ(18)

@UN = 'LN':PUN'IX'

#IF 'IX' == 11 #THEN @IEC61850_CONTROL_VALUE = 51
#ELSE_IF 'IX' == 12 #THEN @IEC61850_CONTROL_VALUE = 53
#ELSE_IF 'IX' == 13 #THEN @IEC61850_CONTROL_VALUE = 55
#ELSE @IEC61850_CONTROL_VALUE = 49

@RESPONSE_MESSAGE_STATUS = 0
@COMMAND_STATUS = 0
@COMMAND_COMPLETE = 0

#IF %OS <> 2 #THEN #BLOCK   
   ;read cross-reference table pointer
   @XREF_INDEX = 'LN':PTI'IX'
   ;if xref found, decode NCC addresses and group alarm information
   #IF %XREF_INDEX > 0  #THEN #BLOCK  ; 1
      #IF COM_DSXREF:CCS == 1 #THEN #DO COM_DSXREF:CCP
      #ELSE #DO COM_DSXREF:CIN
      ;check command authority
      #IF COM_AUTHCH:CCS == 1 #THEN #DO COM_AUTHCH:CCP
      #ELSE #DO COM_AUTHCH:CIN
      ;check command blocking
      #IF COM_DSCMDBLK:CCS == 1 #THEN #DO COM_DSCMDBLK:CCP
      #ELSE #DO COM_DSCMDBLK:CIN
      #IF %COMMAND_TYPE == 6 #THEN #BLOCK
         OUTPUT_OBJECT_70 = APPLICATION_OBJECT_EXISTS(0, "IX", LIST(LN=%OUTPUT_OBJECT_LNS(1), IX=70),"IU == 1") 
         OUTPUT_OBJECT_71 = APPLICATION_OBJECT_EXISTS(0, "IX", LIST(LN=%OUTPUT_OBJECT_LNS(1), IX=71),"IU == 1") 
         OUTPUT_LN = %OUTPUT_OBJECT_LNS(1)
         #IF OUTPUT_OBJECT_70 AND OUTPUT_OBJECT_71 #THEN #BLOCK
            #IF ('OUTPUT_LN':POS70 <> 0 AND 'OUTPUT_LN':POS70 <> 3) OR ('OUTPUT_LN':POS71 <> 0 AND 'OUTPUT_LN':POS71 <> 3) #THEN @CONTROLS_ALLOWED = 0
            #ELSE #IF 'OUTPUT_LN':POV70 <> 0 OR 'OUTPUT_LN':POV71 <> 0 #THEN @CONTROLS_ALLOWED = 0
         #BLOCK_END 
         #ELSE_IF OUTPUT_OBJECT_70 AND NOT OUTPUT_OBJECT_71 #THEN #BLOCK
            #IF 'OUTPUT_LN':POS70 <> 0 AND 'OUTPUT_LN':POS70 <> 3 #THEN @CONTROLS_ALLOWED = 0
            #ELSE #IF 'OUTPUT_LN':POV70 <> 0 #THEN @CONTROLS_ALLOWED = 0
         #BLOCK_END
         #ELSE_IF OUTPUT_OBJECT_71 AND NOT OUTPUT_OBJECT_70 #THEN #BLOCK
            #IF 'OUTPUT_LN':POS71 <> 0 AND 'OUTPUT_LN':POS71 <> 3 #THEN @CONTROLS_ALLOWED = 0
            #ELSE #IF 'OUTPUT_LN':POV71 <> 0 #THEN @CONTROLS_ALLOWED = 0
         #BLOCK_END
      #BLOCK_END
      #IF %CONTROLS_ALLOWED == 1 AND NOT %COMMAND_BLOCKED #THEN #BLOCK ; 2
         ;reset status                
         @S = STATUS
         @OUT_LN = %OUTPUT_OBJECT_LNS(1)
         @OUT_IX = %OUTPUT_OBJECT_IXS(1)
         ;perform the command according to the command type and protocol
         #CASE %NCC_PROTOCOL ; 3
            #WHEN 1 #BLOCK ;************************* RP-570 slave protocol *************************************************; 4
               ;originator address
               @ORIGINATOR = %NCC_STA_NUMBER
               ;************** project-specific modifications ******************
               #IF BIT(%SIGNAL_HANDLING_ATTRS,0) == 1 #THEN #BLOCK
                  ;write the project-specific code in this block
               #BLOCK_END ; 5
               #CASE %COMMAND_TYPE ; 5
                  #WHEN 5 #BLOCK ; direct command (IEC 870-5-103) ; 6
                     @CONNECTED_LENGTH_LIMIT = 2
                     ;scale value to -2000..2000 using the COM 500 scale object
                     @VALUE = SCALE(%AI,"COM_AIRP'NCC_NUMBER'","OUTPUT")
                     #IF SUBSTR('OUT_LN':PDX'OUT_IX',1,1) == "C" #THEN #BLOCK
                        ;information number of the command
                        @INF = ('OUT_LN':POA'OUT_IX' MOD 65536) DIV 256                                                                      
                        #SET 'OUT_LN':POV'OUT_IX' = LIST(OV=%VALUE,CT=40,TY=256*10+%INF)
                     #BLOCK_END ; 7  
                  #BLOCK_END ; 6                                                     
                  #WHEN 1 #BLOCK ; direct command (other protocols) ; 6
                     @CONNECTED_LENGTH_LIMIT = 2
                     ;scale value to -2000..2000 using the COM 500 scale object
                     @VALUE = SCALE(%AI,"COM_AIRP'NCC_NUMBER'","OUTPUT")
                     @DX = SUBSTR('OUT_LN':PDX'OUT_IX',1,1)
                     #CASE %DX ;protocol of the output objects ; 7
                        #WHEN "C" #BLOCK ; IEC 870-5-101/104 ; 8  
                           @TY = 'OUT_LN':PTY'OUT_IX' ; type of the command                                                                                                                                                          
                           #IF  %TY == 0 #THEN @TYPE = 48
                           #ELSE @TYPE = %TY
                           #SET 'OUT_LN':P'OUT_IX' = LIST(OV=%VALUE,CT=6,TY=%TYPE)                                   
                        #BLOCK_END ; 8 
                        #WHEN "D" #BLOCK ; DNP 3.0 ; 8  
                           @TY = 'OUT_LN':PTY'OUT_IX' ; type of the command                                                                                                                                                          
                           #IF  %TY == 0 #THEN @TYPE = 5 ; direct, no ack
                           #ELSE @TYPE = %TY
                           #SET 'OUT_LN':P'OUT_IX' = LIST(OV=%VALUE,TY=%TYPE)                                   
                        #BLOCK_END ; 8 
                        #OTHERWISE #BLOCK  ; 8                                                                                                          
                           #SET 'OUT_LN':POV'OUT_IX' = %VALUE ; 6
                        #BLOCK_END ; 8 
                     #CASE_END ; 7                           
                  #BLOCK_END ; 6
                  #WHEN 8 #BLOCK ; Secured command/1 output object and Select ;6
                     @CONNECTED_LENGTH_LIMIT = 2  
                     ;scale value to -2000..2000 using the COM 500 scale object
                     @VALUE = SCALE(%AI,"COM_AIRP'NCC_NUMBER'","OUTPUT")
                     @DX = SUBSTR('OUT_LN':PDX'OUT_IX',1,1)
                     #CASE %DX ;protocol of the output objects ; 7
                        #WHEN "C" #BLOCK ; IEC 870-5-101/104 ; 8 
                           @TY = 'OUT_LN':PTY'OUT_IX' ; type of the command                                                                                                                                                          
                           #IF  %TY == 0 #THEN @TYPE = 48
                           #ELSE @TYPE = %TY
                           #SET 'OUT_LN':PSE'OUT_IX' = LIST(OV=%VALUE,CT=6,TY=%TYPE)  ;select                                  
                           #PAUSE (GEN_INFO:VREX_SELECT_EXECUTE_DELAY/1000)
                           #SET 'OUT_LN':POV'OUT_IX' = LIST(OV=%VALUE,CT=6,TY=%TYPE) ;execute                                   
                        #BLOCK_END ; 8
                        #WHEN "D" #BLOCK ; DNP 3.0 ; 8   
                           #SET 'OUT_LN':P'OUT_IX' = LIST(OV=%VALUE,TY=3) ;select
                           #PAUSE (GEN_INFO:VREX_SELECT_EXECUTE_DELAY/1000)
                           #SET 'OUT_LN':P'OUT_IX' = LIST(OV=%VALUE,TY=4) ;operate
                        #BLOCK_END ; 8 
                    #CASE_END ;7    
                  #BLOCK_END ;6
                  #WHEN 4 #BLOCK ; secured command/1 output object (REx 561) ; 6
                     @CONNECTED_LENGTH_LIMIT = 2  
                     ;invert value if required
                     #IF BIT(%SIGNAL_HANDLING_ATTRS,1) == 1 #THEN @VALUE = ROUND(1-%OV)
                     #ELSE @VALUE = ROUND(%OV)
                     ;perform command
                     @GEN_INFO = APL:BSV(20)  
                     #IF BIT(%SIGNAL_HANDLING_ATTRS,3) == 1 #THEN #BLOCK                              
                        #SET 'OUT_LN':POV'OUT_IX' =  %REC_561_REMOTE_SELECT_VALUE  ; Select
                        #IF 'OUT_LN':PDX'OUT_IX' == "X4" #THEN #PAUSE (GEN_INFO:VREX_SELECT_EXECUTE_DELAY/1000)
                        #IF %VALUE == 0 #THEN #SET 'OUT_LN':POV'OUT_IX' =  %REC_561_REMOTE_OPEN_EXECUTE_VALUE  ; open execute
                        #ELSE #SET 'OUT_LN':POV'OUT_IX' =  %REC_561_REMOTE_CLOSE_EXECUTE_VALUE  ; close execute
                     #BLOCK_END
                     #ELSE #BLOCK
                        #IF %VALUE == 0 #THEN #SET 'OUT_LN':POV'OUT_IX' =  %REX_561_OPEN_SELECT_VALUE  ; open select
                        #ELSE #SET 'OUT_LN':POV'OUT_IX' =  %REX_561_CLOSE_SELECT_VALUE  ; close select
                        #IF 'OUT_LN':PDX'OUT_IX' == "X4" #THEN #PAUSE (GEN_INFO:VREX_SELECT_EXECUTE_DELAY/1000)
                        #SET 'OUT_LN':POV'OUT_IX' =  %REX_561_EXECUTE_VALUE  ; execute
                     #BLOCK_END
                  #BLOCK_END ; 6
                  #WHEN 6 #BLOCK ; secured command/5 output object  ; 6
                     @CONNECTED_LENGTH_LIMIT = 6
                     #IF BIT(%SIGNAL_HANDLING_ATTRS,2) == 1 #THEN #BLOCK
                        @IEC61850_CONTROL_VALUE = 53
                     #BLOCK_END 
                     #IF %RA == 0 OR %RA == 2 OR %RA == 4 #THEN #BLOCK
                        #IF SUBSTR('OUT_LN':PDX'OUT_IX',1,3) == "G11" #THEN #BLOCK
                           @DX = "G11"   
                        #BLOCK_END 
                        #ELSE @DX = SUBSTR('OUT_LN':PDX'OUT_IX',1,2)
                        #CASE %DX ;protocol of the output objects ; 7   
                           #WHEN "E4","X4","G11" #BLOCK ; IEC61850, LON, OPC ; 8                         
                              #IF BIT(%SIGNAL_HANDLING_ATTRS,1) == 1 #THEN @VALUE = ROUND(1-%OV)
                              #ELSE @VALUE = ROUND(%OV)
                              #IF %VALUE == 0 #THEN @OUT_IND = 1 ; open cmd 
                              #ELSE @OUT_IND = 2 ; close cmd 
                              @SEL_LN = %OUTPUT_OBJECT_LNS(%OUT_IND)
                              @SEL_IX = %OUTPUT_OBJECT_IXS(%OUT_IND)
                              #SET 'SEL_LN':POV'SEL_IX' = %IEC61850_CONTROL_VALUE ; select
                              #IF %RA == 0 #THEN #BLOCK
                                 #PAUSE (GEN_INFO:VREX_SELECT_EXECUTE_DELAY/1000)
                                 @OUT_IND = %OUT_IND + 2
                                 @EXEC_LN = %OUTPUT_OBJECT_LNS(%OUT_IND)
                                 @EXEC_IX = %OUTPUT_OBJECT_IXS(%OUT_IND)
                                 #SET 'EXEC_LN':POV'EXEC_IX' = %IEC61850_CONTROL_VALUE ; open or close execute
                              #BLOCK_END
                              #ELSE_IF %RA == 2 OR %RA == 4 #THEN #BLOCK
                                 #IF STATUS == 0 #THEN #BLOCK
                                    #PAUSE (GEN_INFO:VREX_SELECT_EXECUTE_DELAY/1000)
                                    @OUT_IND = %OUT_IND + 2
                                    @EXEC_LN = %OUTPUT_OBJECT_LNS(%OUT_IND)
                                    @EXEC_IX = %OUTPUT_OBJECT_IXS(%OUT_IND)
                                    #SET 'EXEC_LN':POV'EXEC_IX' = %IEC61850_CONTROL_VALUE ; open or close execute
                                    @COMMAND_STATUS = STATUS
                                 #BLOCK_END
                                 #ELSE @COMMAND_STATUS = 1
                              #BLOCK_END   
                           #BLOCK_END ;8
                        #CASE_END ; 7                  
                     #BLOCK_END
                     #ELSE_IF %RA == 1 #THEN #BLOCK
                        ;write project-specific code for select condition
                     #BLOCK_END
                  #BLOCK_END ;6
               #CASE_END ; 5
               ;if succesful command and an indication has been connected, write ln+ix+oa+sta_nr and time stamp to apl:bsv
               #IF %RA == 0 #THEN #BLOCK
                  #IF STATUS == 0 AND LENGTH(%OUTPUT_OBJECT_LNS) == %CONNECTED_LENGTH_LIMIT #THEN @INDICATION_CONNECTED = TRUE
               #BLOCK_END
               #ELSE_IF %RA == 2 OR %RA == 4 #THEN #BLOCK
                  #IF %COMMAND_STATUS == 0 #THEN #BLOCK
                     @RESPONSE_MESSAGE_STATUS = 0
                     #IF LENGTH(%OUTPUT_OBJECT_LNS) == %CONNECTED_LENGTH_LIMIT #THEN @INDICATION_CONNECTED = TRUE
                  #BLOCK_END
                  #ELSE @RESPONSE_MESSAGE_STATUS = 1
               #BLOCK_END
               ;send response message         
               #IF %RA == 1 OR %RA == 2 OR %RA == 3 OR %RA == 4 #THEN #BLOCK 
                  #SET STA'NCC_STA_NUMBER':SCS = %RESPONSE_MESSAGE_STATUS  
               #BLOCK_END
               #IF %ENABLE_LOGGING #THEN #BLOCK ; 5
                  @ADDR='OUT_LN':POA'OUT_IX'
                  @STA_NR='OUT_LN':PUN'OUT_IX'
                  @SH=%SIGNAL_HANDLING_ATTRS
                  @SX_STATE='OUT_LN':PSX'OUT_IX'
                  @S=STATUS
                  @INFO="'rt':'rm',DSAO,'UN','OUT_LN':P'OUT_IX','STA_NR',,'OV',RP570,'SH','ADDR','VALUE',,,,,,,,'S',,,'SX_STATE'"               
                  #IF COM_LOG:CCS == 1 #THEN #DO COM_LOG:CCP
                  #ELSE #DO COM_LOG:CIN 
               #BLOCK_END ; 5
            #BLOCK_END ; 4
            #WHEN 2 #BLOCK ;************************* IEC protocol *****************************************; 4
               #IF %NCC_SUBPROTOCOL == 2 #THEN #BLOCK ;ICCP
                  ;originator address
                  @ORIGINATOR = %NCC_STA_NUMBER
                  @RES = 0
                  @IEC_COMMAND_RECEIVED_WITHOUT_SELECT = TRUE
                  #IF %RA == 1 #THEN #BLOCK;select
                     #SET STA'NCC_STA_NUMBER':SCF('LN':POA'IX') = (%RES,%RA)
                  #BLOCK_END
               #BLOCK_END
               #ELSE_IF %NCC_SUBPROTOCOL == 3 #THEN #BLOCK ;IEC 61850 Server
                  #IF %CT == 8 #THEN @RA = 1
                  ;originator address
                  @ORIGINATOR = %OG  
               #BLOCK_END
               #ELSE #BLOCK ;IEC 101/104
                  ;originator address
                  @ORIGINATOR = %OG               
               #BLOCK_END
               ;************** project-specific modifications ******************
               #IF BIT(%SIGNAL_HANDLING_ATTRS,0) == 1 #THEN #BLOCK
                  ;write the project-specific code in this block
               #BLOCK_END
               #IF %CT < 128 #THEN #BLOCK 
                  #CASE %COMMAND_TYPE ; 5
                     #WHEN 5 #BLOCK ; direct command (IEC 870-5-103) ; 6
                        @CONNECTED_LENGTH_LIMIT = 2
                        @VALUE = %AI 
                        #IF SUBSTR('OUT_LN':PDX'OUT_IX',1,1) == "C" #THEN #BLOCK                     
                           ;information number of the command
                           @INF = ('OUT_LN':POA'OUT_IX' MOD 65536) DIV 256                                                                      
                           #IF %RA == 0 #THEN #SET 'OUT_LN':POV'OUT_IX' = LIST(OV=%VALUE,CT=40,TY=256*10+%INF)
                        #BLOCK_END ; 7  
                     #BLOCK_END ; 6
                     #WHEN 1 #BLOCK ; direct command (other protocols) ; 6
                        @CONNECTED_LENGTH_LIMIT = 2  
                        @VALUE = %OV 
                        ;received as double command
                        #IF BIT(%SIGNAL_HANDLING_ATTRS,2) == 1 #THEN #BLOCK ; 7
                           ;negative confirmation/termination if invalid value
                           #IF %OV == 0 OR %OV == 3 #THEN @STATUS_INCREMENT = 64
                        #BLOCK_END
                        ;invert value if required
                        #IF BIT(%SIGNAL_HANDLING_ATTRS,1) == 1 #THEN #BLOCK
                           #IF BIT(%SIGNAL_HANDLING_ATTRS,2) == 1 #THEN #BLOCK
                              #IF %VALUE == 1 #THEN @VALUE = 2
                              #ELSE_IF %VALUE == 2 #THEN @VALUE = 1
                           #BLOCK_END
                           #ELSE @VALUE = 1-%VALUE                   
                        #BLOCK_END
                        @DX = SUBSTR('OUT_LN':PDX'OUT_IX',1,1)
                        #CASE %DX ;protocol of the output objects ; 7
                           #WHEN "C" #BLOCK ; IEC 870-5-101/104 ; 8
                              @TY = 'OUT_LN':PTY'OUT_IX' ; type of the command                                                                                                                                                          
                              #IF  %TY == 0 #THEN @TYPE = 48
                              #ELSE @TYPE = %TY
                              #IF %RA == 0 #THEN #SET 'OUT_LN':P'OUT_IX' = LIST(OV=%VALUE,CT=6,TY=%TYPE)                                   
                           #BLOCK_END ; 8 
                           #WHEN "D" #BLOCK ; DNP 3.0 ; 8
                              @TY = 'OUT_LN':PTY'OUT_IX' ; type of the command                                                                                                                                                          
                              #IF  %TY == 0 #THEN @TYPE = 5
                              #ELSE @TYPE = %TY
                              #IF %RA == 0 #THEN #SET 'OUT_LN':P'OUT_IX' = LIST(OV=%VALUE,TY=%TYPE)                                   
                           #BLOCK_END ; 8 
                           #OTHERWISE #BLOCK  ; 8                                                                                                         
                              #IF %RA == 0 #THEN #SET 'OUT_LN':POV'OUT_IX' = %VALUE 
                           #BLOCK_END ; 8 
                        #CASE_END ; 7                           
                     #BLOCK_END ; 6 
                     #WHEN 8 #BLOCK ; Secured command/1 output object and Select ;6 
                        @CONNECTED_LENGTH_LIMIT = 2  
                        @VALUE = %AI
                        @DX = SUBSTR('OUT_LN':PDX'OUT_IX',1,1)
                        #CASE %DX ;protocol of the output objects ; 7
                           #WHEN "C" #BLOCK ; IEC 870-5-101/104 ; 8 
                              @TY = 'OUT_LN':PTY'OUT_IX' ; type of the command                                                                                                                                                          
                              #IF  %TY == 0 #THEN @TYPE = 48
                              #ELSE @TYPE = %TY
                              #IF %IEC_COMMAND_RECEIVED_WITHOUT_SELECT OR BIT(%SIGNAL_HANDLING_ATTRS,1) == 1 #THEN #BLOCK ;9
                                 #IF %RA == 0 AND %CT == 6 #THEN #BLOCK ;8
                                    #SET 'OUT_LN':PSE'OUT_IX' = LIST(OV=%VALUE,CT=6,TY=%TYPE)  ;select 
                                    #PAUSE (GEN_INFO:VREX_SELECT_EXECUTE_DELAY/1000)
                                    #SET 'OUT_LN':POV'OUT_IX' = LIST(OV=%VALUE,CT=6,TY=%TYPE) ;execute                                     
                                 #BLOCK_END
                              #BLOCK_END ;9
                              #ELSE #BLOCK ;9 
                                 #IF %RA == 0 #THEN #SET 'OUT_LN':POV'OUT_IX' = LIST(OV=%VALUE,CT=6,TY=%TYPE) ;execute 
                                 #ELSE_IF %RA == 1 AND %CT == 6 #THEN #SET 'OUT_LN':PSE'OUT_IX' = LIST(OV=%VALUE,CT=6,TY=%TYPE)  ;select                                     
                                 #ELSE_IF %RA == 1 AND %CT == 8 #THEN #SET 'OUT_LN':PSE'OUT_IX' = LIST(OV=0,CT=8,TY=%TYPE)  ;cancel                                     
                              #BLOCK_END ;9             
                           #BLOCK_END ; 8
                           #WHEN "D" #BLOCK ; DNP 3.0 ; 8  
                              #IF %IEC_COMMAND_RECEIVED_WITHOUT_SELECT #THEN #BLOCK ;9
                                 #IF %RA == 0 AND %CT == 6 #THEN #BLOCK ;10
                                    #SET 'OUT_LN':P'OUT_IX' = LIST(OV=%VALUE,TY=3) ;select
                                    #PAUSE (GEN_INFO:VREX_SELECT_EXECUTE_DELAY/1000)
                                    #SET 'OUT_LN':P'OUT_IX' = LIST(OV=%VALUE,TY=4) ;operate
                                 #BLOCK_END ;10
                              #BLOCK_END ;9
                              #ELSE #BLOCK ;7
                                 #IF %RA == 0 #THEN #SET 'OUT_LN':P'OUT_IX' = LIST(OV=%VALUE,TY=4) ;operate   
                                 #ELSE_IF %RA == 1 AND %CT == 6 #THEN #SET 'OUT_LN':P'OUT_IX' = LIST(OV=%VALUE,TY=3) ;select                            
                              #BLOCK_END     
                           #BLOCK_END ; 8 
                       #CASE_END ;7    
                     #BLOCK_END ;6                                        
                     #WHEN 4 #BLOCK ; secured command/1 output object (REx 561) ; 6
                        @CONNECTED_LENGTH_LIMIT = 2  
                        ;received as double command
                        #IF BIT(%SIGNAL_HANDLING_ATTRS,2) == 1 #THEN #BLOCK ; 7
                           @DB_VALUES = (0,0,1,0)
                           @VALUE = %DB_VALUES(%OV+1)
                           ;negative confirmation/termination if invalid value
                           #IF %OV == 0 OR %OV == 3 #THEN @STATUS_INCREMENT = 64
                        #BLOCK_END ; 7
                        #ELSE_IF BIT(%SIGNAL_HANDLING_ATTRS,3) == 1 #THEN @VALUE = %OV  ;received as single command
                        #ELSE @VALUE = %OV   ;received as analog command
                        @VALUE = ROUND(%VALUE)
                        ;invert value if required
                        #IF BIT(%SIGNAL_HANDLING_ATTRS,1) == 1 #THEN @VALUE = 1-%VALUE                  
                        ;receive as direct or secured command
                        #IF BIT(%SIGNAL_HANDLING_ATTRS,5) == 1 #THEN #BLOCK ;remote commands values
                           #IF BIT(%SIGNAL_HANDLING_ATTRS,4) == 1 #THEN #BLOCK ; 7  ; direct
                              #IF %RA == 0 #THEN #BLOCK ; 8
                                 #SET 'OUT_LN':POV'OUT_IX' = %REC_561_REMOTE_SELECT_VALUE  ; select 
                                 #PAUSE (GEN_INFO:VREX_SELECT_EXECUTE_DELAY/1000)
                                 #IF %VALUE == 1 #THEN #SET 'OUT_LN':POV'OUT_IX' = %REC_561_REMOTE_CLOSE_EXECUTE_VALUE  ; close
                                 #ELSE #SET 'OUT_LN':POV'OUT_IX' = %REC_561_REMOTE_OPEN_EXECUTE_VALUE  ; open  
                              #BLOCK_END ; 8
                           #BLOCK_END ; 7
                           #ELSE #BLOCK ; 7  ; secured
                              #IF %RA == 0 #THEN #BLOCK
                                    #IF %VALUE == 1 #THEN #SET 'OUT_LN':POV'OUT_IX' = %REC_561_REMOTE_CLOSE_EXECUTE_VALUE ;close   
                                    #ELSE #SET 'OUT_LN':POV'OUT_IX' = %REC_561_REMOTE_OPEN_EXECUTE_VALUE  ; open   
                              #BLOCK_END
                              #ELSE_IF %RA == 1 AND %CT == 8 #THEN #SET 'OUT_LN':POV'OUT_IX' = %REC_561_REMOTE_CANCEL_VALUE ; cancel    
                              #ELSE_IF %RA == 1 AND %CT == 6 #THEN #BLOCK ; 8
                                 #SET 'OUT_LN':POV'OUT_IX' = %REC_561_REMOTE_SELECT_VALUE  ; select
                              #BLOCK_END ; 8
                           #BLOCK_END  ; 7                  
                        #BLOCK_END
                        #ELSE #BLOCK
                           #IF BIT(%SIGNAL_HANDLING_ATTRS,4) == 1 #THEN #BLOCK ; 7  ; direct
                              #IF %RA == 0 #THEN #BLOCK ; 8
                                 #IF %VALUE == 1 #THEN #SET 'OUT_LN':POV'OUT_IX' = %REX_561_CLOSE_SELECT_VALUE  ; close select 
                                 #ELSE #SET 'OUT_LN':POV'OUT_IX' = %REX_561_OPEN_SELECT_VALUE  ; open select
                                 #PAUSE (GEN_INFO:VREX_SELECT_EXECUTE_DELAY/1000)
                                 #SET 'OUT_LN':POV'OUT_IX' = %REX_561_EXECUTE_VALUE  ; execute   
                              #BLOCK_END ; 8
                           #BLOCK_END ; 7
                           #ELSE #BLOCK ; 7  ; secured
                              #IF %RA == 0 #THEN #SET 'OUT_LN':POV'OUT_IX' = %REX_561_EXECUTE_VALUE  ; execute   
                              #ELSE_IF %RA == 1 AND %CT == 8 #THEN #SET 'OUT_LN':POV'OUT_IX' = %REX_561_CANCEL_VALUE ; cancel    
                              #ELSE_IF %RA == 1 AND %CT == 6 #THEN #BLOCK ; 8
                                 #IF %VALUE == 1 #THEN #SET 'OUT_LN':POV'OUT_IX' = %REX_561_CLOSE_SELECT_VALUE  ; close select 
                                 #ELSE #SET 'OUT_LN':POV'OUT_IX' = %REX_561_OPEN_SELECT_VALUE  ; open select
                              #BLOCK_END ; 8
                           #BLOCK_END  ; 7
                        #BLOCK_END      
                     #BLOCK_END ; 6
                     #WHEN 6 #BLOCK ; secured command/5 output object  ; 6
                        @CONNECTED_LENGTH_LIMIT = 6
                        #IF BIT(%SIGNAL_HANDLING_ATTRS,3) == 1 #THEN #BLOCK
                           @IEC61850_CONTROL_VALUE = 53 ;SynchrocheckOverride
                        #BLOCK_END
                        #IF %NCC_SUBPROTOCOL == 3 #THEN #BLOCK
                           #IF (%RB mod 256) == 9 #THEN @IEC61850_CONTROL_VALUE = BIT_SET(%IEC61850_CONTROL_VALUE,1) ;InterlockOverride   
                           #ELSE_IF (%RB mod 256) == 10 #THEN @IEC61850_CONTROL_VALUE = BIT_SET(%IEC61850_CONTROL_VALUE,2) ;SynchrocheckOverride
                           #ELSE_IF (%RB mod 256) == 11 #THEN #BLOCK
                              @IEC61850_CONTROL_VALUE = BIT_SET(%IEC61850_CONTROL_VALUE,1) ;InterlockOverride
                              @IEC61850_CONTROL_VALUE = BIT_SET(%IEC61850_CONTROL_VALUE,2) ;SynchrocheckOverride
                           #BLOCK_END
                           #IF BIT(%RB,8) == 1 #THEN @IEC61850_CONTROL_VALUE = BIT_SET(%IEC61850_CONTROL_VALUE,3) ;TestCommand  
                        #BLOCK_END
                        @VALUE = %OV 
                        #IF SUBSTR('OUT_LN':PDX'OUT_IX',1,3) == "G11" #THEN #BLOCK
                           @DX = "G11"   
                        #BLOCK_END 
                        #ELSE @DX = SUBSTR('OUT_LN':PDX'OUT_IX',1,2)
                        #CASE %DX ;protocol of the output objects ; 7   
                           #WHEN "E4","X4","G11" #BLOCK ; IEC61850, LON, OPC ; 8
                              #IF BIT(%SIGNAL_HANDLING_ATTRS,2) == 1 #THEN #BLOCK ; 7
                                 @DB_VALUES = (0,0,1,0)
                                 @VALUE = %DB_VALUES(%OV+1)
                                 ;negative confirmation/termination if invalid value
                                 #IF %OV == 0 OR %OV == 3 #THEN @STATUS_INCREMENT = 64
                              #BLOCK_END ; 7
                              ;invert value if required
                              #IF BIT(%SIGNAL_HANDLING_ATTRS,1) == 1 #THEN @VALUE = 1-%VALUE
                              #IF %IEC_COMMAND_RECEIVED_WITHOUT_SELECT OR BIT(%SIGNAL_HANDLING_ATTRS,4) == 1 #THEN #BLOCK ;7
                                 #IF %VALUE == 0 #THEN #BLOCK ; 8
                                    #IF %RA == 0 AND %CT == 6 #THEN #BLOCK ;9
                                       @OUT_IND = 1 ; open select
                                       @OUT_LN = %OUTPUT_OBJECT_LNS(%OUT_IND)
                                       @OUT_IX = %OUTPUT_OBJECT_IXS(%OUT_IND)
                                       #SET 'OUT_LN':POV'OUT_IX' = %IEC61850_CONTROL_VALUE   
                                       #PAUSE (GEN_INFO:VREX_SELECT_EXECUTE_DELAY/1000)
                                       @OUT_IND = 3 ; open execute
                                       @OUT_LN = %OUTPUT_OBJECT_LNS(%OUT_IND)
                                       @OUT_IX = %OUTPUT_OBJECT_IXS(%OUT_IND)
                                       #SET 'OUT_LN':POV'OUT_IX' = %IEC61850_CONTROL_VALUE 
                                    #BLOCK_END ;9
                                 #BLOCK_END ;8
                                 #ELSE #BLOCK ;8
                                    #IF %RA == 0 AND %CT == 6 #THEN #BLOCK ;9
                                       @OUT_IND = 2 ; close select
                                       @OUT_LN = %OUTPUT_OBJECT_LNS(%OUT_IND)
                                       @OUT_IX = %OUTPUT_OBJECT_IXS(%OUT_IND)
                                       #SET 'OUT_LN':POV'OUT_IX' = %IEC61850_CONTROL_VALUE   
                                       #PAUSE (GEN_INFO:VREX_SELECT_EXECUTE_DELAY/1000)
                                       @OUT_IND = 4 ; close execute
                                       @OUT_LN = %OUTPUT_OBJECT_LNS(%OUT_IND)
                                       @OUT_IX = %OUTPUT_OBJECT_IXS(%OUT_IND)
                                       #SET 'OUT_LN':POV'OUT_IX' = %IEC61850_CONTROL_VALUE 
                                    #BLOCK_END ;9
                                 #BLOCK_END ;8      
                              #BLOCK_END
                              #ELSE #BLOCK
                                 #IF %VALUE == 0 #THEN #BLOCK ; 8
                                    #IF %RA == 0 #THEN #BLOCK ;9
                                       @OUT_IND = 3 ; open execute
                                       #PAUSE (GEN_INFO:VREX_SELECT_EXECUTE_DELAY/1000)
                                    #BLOCK_END ;9   
                                    #ELSE_IF %RA == 1 AND %CT == 6 #THEN @OUT_IND = 1 ; open select
                                    #ELSE_IF %RA == 1 AND %CT == 8 #THEN #BLOCK
                                       @OUT_IND = 5 ; cancel
                                    #BLOCK_END
                                 #BLOCK_END  ; 8
                                 #ELSE #BLOCK ; 8
                                    #IF %RA == 0 #THEN #BLOCK ;9
                                       @OUT_IND = 4 ; close execute
                                       #PAUSE (GEN_INFO:VREX_SELECT_EXECUTE_DELAY/1000)
                                    #BLOCK_END ;9   
                                    #ELSE_IF %RA == 1 AND %CT == 6 #THEN @OUT_IND = 2 ; close select
                                    #ELSE_IF %RA == 1 AND %CT == 8 #THEN #BLOCK
                                       @OUT_IND = 5 ; cancel
                                    #BLOCK_END
                                 #BLOCK_END ; 8
                                 @OUT_LN = %OUTPUT_OBJECT_LNS(%OUT_IND)
                                 @OUT_IX = %OUTPUT_OBJECT_IXS(%OUT_IND)
                                 #SET 'OUT_LN':POV'OUT_IX' = %IEC61850_CONTROL_VALUE
                             #BLOCK_END ;7    
                           #BLOCK_END ; 8      
                        #CASE_END
                     #BLOCK_END ; 6
                  #CASE_END ; 5       
               #BLOCK_END     
               #IF %NCC_SUBPROTOCOL == 2 #THEN #BLOCK
                  @COMMAND_STATUS = STATUS
                  #IF %RA == 0 #THEN #BLOCK      
                     #IF %COMMAND_STATUS == 0 AND %STATUS_INCREMENT == 0 #THEN @RES = 0
                     #ELSE @RES = 2  
                     #SET STA'NCC_STA_NUMBER':SCF('LN':POA'IX') = (%RES,%RA)
                  #BLOCK_END
                  #IF %ENABLE_LOGGING #THEN #BLOCK ; 5
                     @ADDR='OUT_LN':POA'OUT_IX'
                     @STA_NR='OUT_LN':PUN'OUT_IX'
                     @NCC_TYPE="ICCP"
                     @SH=%SIGNAL_HANDLING_ATTRS
                     @SX_STATE='OUT_LN':PSX'OUT_IX'
                     @S=STATUS
                     @INFO="'rt':'rm',DSAO,'UN','OUT_LN':P'OUT_IX','STA_NR',,'OV','NCC_TYPE','SH','ADDR','VALUE',,,,,,,,'S',,,'SX_STATE'"               
                     #IF COM_LOG:CCS == 1 #THEN #DO COM_LOG:CCP
                     #ELSE #DO COM_LOG:CIN 
                     @CF_TIME = HR_CLOCK
                     @CF_RT = TIMES(CF_TIME:VCL)
                     @CF_RM = ROUND(CF_TIME:VUS/1000)      
                     @CF_LOG_ADDR = 'LN':POA'IX'
                     #IF %RES == 0 #THEN @CF_LOG_TEXT = "Activation confirmation"
                     #ELSE @CF_LOG_TEXT = "Negative activation confirmation" 
                     @INFO="'CF_RT':'CF_RM',DSAO,'NCC_STA_NUMBER','LN':P'IX',,'CF_LOG_TEXT',,,,'CF_LOG_ADDR',,,,,,,,,,,,"
                     #IF COM_LOG:CCS == 1 #THEN #DO COM_LOG:CCP
                     #ELSE #DO COM_LOG:CIN
                  #BLOCK_END ; 5      
               #BLOCK_END
               #ELSE_IF %NCC_SUBPROTOCOL == 3 #THEN #BLOCK 
                  @COMMAND_STATUS = STATUS
                  #IF %COMMAND_STATUS == 0 #THEN #BLOCK
                     #IF LENGTH(%OUTPUT_OBJECT_LNS) == %CONNECTED_LENGTH_LIMIT AND %RA == 0 #THEN @INDICATION_CONNECTED = TRUE
                     @STATUS_INCREMENT = 0
                     @ACR = 0 
                  #BLOCK_END
                  #ELSE #BLOCK
                     @STATUS_INCREMENT = 64
                     #IF %COMMAND_STATUS == 13222 #THEN #BLOCK
                        @LAST_ERROR_OBJECT_55 = APPLICATION_OBJECT_EXISTS(0, "IX", LIST(LN=%OUTPUT_OBJECT_LNS(1), IX=55),"IU == 1") 
                        #IF %LAST_ERROR_OBJECT_55 #THEN #BLOCK
                           #PAUSE 0.1
                           #IF 'OUTPUT_LN':PRT55 > %RT OR ('OUTPUT_LN':PRT55 == %RT AND 'OUTPUT_LN':PRM55 > %RM) #THEN #BLOCK
                              @ACR = 'OUTPUT_LN':POV55
                           #BLOCK_END          
                           #ELSE @ACR = 0
                        #BLOCK_END
                        #ELSE @ACR = 0
                     #BLOCK_END
                     #ELSE @ACR = 23
                  #BLOCK_END
                  #IF %RA == 0 AND %INDICATION_CONNECTED == FALSE #THEN @COMMAND_COMPLETE = 1
                  #IF %CT == 8 #THEN #BLOCK
                     @COMMAND_COMPLETE = 1
                     @RA = 0
                  #BLOCK_END
                  @ACR = TRUNC(%ACR) MOD 1000
                  #IF BIT(%RB,8) == 1 #THEN @STATUS_INCREMENT = %STATUS_INCREMENT + 128 ;TestCommand  
                  #SET STA'NCC_STA_NUMBER':SCF = (%CT+1+%STATUS_INCREMENT,('LN':POA'IX'),%ACR ,%RA,%COMMAND_COMPLETE)
                  #IF %ENABLE_LOGGING #THEN #BLOCK ; 5
                     #IF SUBSTR('OUT_LN':PDX'OUT_IX',1,2) == "E4" #THEN @ADDR = 'OUT_LN':POA'OUT_IX' - 4096*4   
                     #ELSE @ADDR='OUT_LN':POA'OUT_IX'
                     @STA_NR='OUT_LN':PUN'OUT_IX'
                     @NCC_TYPE="IEC61850"
                     @SH=%SIGNAL_HANDLING_ATTRS
                     #IF %COMMAND_TYPE == 6 #THEN #BLOCK
                        #IF %OUT_IND == 1 OR %OUT_IND == 3 #THEN @SX_STATE= "Open " + 'OUT_LN':PSX'OUT_IX'
                        #ELSE_IF %OUT_IND == 2 OR %OUT_IND == 4 #THEN @SX_STATE= "Close " + 'OUT_LN':PSX'OUT_IX'
                        #ELSE @SX_STATE='OUT_LN':PSX'OUT_IX'
                     #BLOCK_END  
                     #ELSE @SX_STATE='OUT_LN':PSX'OUT_IX'
                     #IF %COMMAND_TYPE == 6 #THEN @LOG_VALUE = %IEC61850_CONTROL_VALUE
                     #ELSE @LOG_VALUE = %VALUE 
                     @S=%COMMAND_STATUS
                     @INFO="'rt':'rm',DSAO,'UN','OUT_LN':P'OUT_IX','STA_NR',,'OV','NCC_TYPE','SH','ADDR','LOG_VALUE',,,,,,,,'S',,,'SX_STATE'"               
                     #IF COM_LOG:CCS == 1 #THEN #DO COM_LOG:CCP
                     #ELSE #DO COM_LOG:CIN 
                     ;activation confirmation or termination
                     @CF_TIME = HR_CLOCK
                     @CF_RT = TIMES(CF_TIME:VCL)
                     @CF_RM = ROUND(CF_TIME:VUS/1000)      
                     @CF_LOG_ADDR = 'LN':POA'IX'
                     #IF %STATUS_INCREMENT == 0 #THEN @CF_LOG_TEXT = "Activation confirmation"
                     #ELSE @CF_LOG_TEXT = "Negative activation confirmation" 
                     @INFO="'CF_RT':'CF_RM',DSAO,'NCC_STA_NUMBER',,,'CF_LOG_TEXT',,,,'CF_LOG_ADDR',,,,,,,,,,,,"
                     #IF COM_LOG:CCS == 1 #THEN #DO COM_LOG:CCP
                     #ELSE #DO COM_LOG:CIN
                  #BLOCK_END ; 5 
               #BLOCK_END
               #ELSE #BLOCK    
                  ;if succesful command and an indication has been connected set the tag when executing the command
                  #IF STATUS == 0 #THEN #BLOCK
                     #IF LENGTH(%OUTPUT_OBJECT_LNS) == %CONNECTED_LENGTH_LIMIT AND %RA == 0 #THEN @INDICATION_CONNECTED = TRUE
                  #BLOCK_END
                  #ELSE @STATUS_INCREMENT = 64
                  #IF STA'NCC_STA_NUMBER':SPC == 0 #THEN #BLOCK ; 6
                     #IF %RA == 0 #THEN #BLOCK ; 7   
                        ;send positive or negative command confirmation at execution
                        #SET STA'NCC_STA_NUMBER':SCF = (256*%ORIGINATOR+%CT+1+%STATUS_INCREMENT,'LN':POA'IX')
                        ;Send command termination if positive command confirmation 
                        #IF %STATUS_INCREMENT == 0 #THEN #BLOCK
                           #IF NOT %INDICATION_CONNECTED AND %IEC_TERM_ENABLED #THEN #BLOCK
                              #IF %TY < 110 OR %TY > 112 #THEN #BLOCK ; no termination for paramter cmds
                                 #IF %CT < 128 #THEN @TERM_COT = 10
                                 #ELSE @TERM_COT = 138 
                                 #SET STA'NCC_STA_NUMBER':SCF = (256*%ORIGINATOR+%TERM_COT+%STATUS_INCREMENT,'LN':POA'IX')
                                 @ACT_TERM_LOG = 1
                              #BLOCK_END
                           #BLOCK_END
                        #BLOCK_END
                     #BLOCK_END ; 7
                     #ELSE #SET STA'NCC_STA_NUMBER':SCF = (256*%ORIGINATOR+%STATUS_INCREMENT+%CT+1,'LN':POA'IX')       
                  #BLOCK_END ; 6   
                  #IF %ENABLE_LOGGING #THEN #BLOCK ; 5
                     @ADDR='OUT_LN':POA'OUT_IX'
                     @STA_NR='OUT_LN':PUN'OUT_IX'
                     @NCC_TYPE="IEC101/104"
                     @SH=%SIGNAL_HANDLING_ATTRS
                     @SX_STATE='OUT_LN':PSX'OUT_IX'
                     @S=STATUS
                     @INFO="'rt':'rm',DSAO,'UN','OUT_LN':P'OUT_IX','STA_NR',,'OV','NCC_TYPE','SH','ADDR','VALUE',,,,,,,,'S',,,'SX_STATE'"               
                     #IF COM_LOG:CCS == 1 #THEN #DO COM_LOG:CCP
                     #ELSE #DO COM_LOG:CIN 
                     ;activation confirmation or termination
                      #IF STA'NCC_STA_NUMBER':SPC == 0 #THEN #BLOCK ; 6
                        @CF_TIME = HR_CLOCK
                        @CF_RT = TIMES(CF_TIME:VCL)
                        @CF_RM = ROUND(CF_TIME:VUS/1000)      
                        @CF_LOG_ADDR = 'LN':POA'IX'
                        #IF %STATUS_INCREMENT == 0 #THEN @CF_LOG_TEXT = "Activation confirmation"
                        #ELSE @CF_LOG_TEXT = "Negative activation confirmation" 
                        @INFO="'CF_RT':'CF_RM',DSAO,'NCC_STA_NUMBER','LN':P'IX',,'CF_LOG_TEXT',,,,'CF_LOG_ADDR',,,,,,,,,,,,"
                        #IF COM_LOG:CCS == 1 #THEN #DO COM_LOG:CCP
                        #ELSE #DO COM_LOG:CIN
                        #IF %ACT_TERM_LOG == 1 #THEN #BLOCK 
                           @INFO="'CF_RT':'CF_RM',DSAO,'NCC_STA_NUMBER','LN':P'IX',,Activation termination,,,,'CF_LOG_ADDR',,,,,,,,,,,,"
                           #IF COM_LOG:CCS == 1 #THEN #DO COM_LOG:CCP
                           #ELSE #DO COM_LOG:CIN
                        #BLOCK_END
                     #BLOCK_END
                  #BLOCK_END ; 5
               #BLOCK_END
            #BLOCK_END ; 4
            #WHEN 3 #BLOCK ; ************************* CPI interface *******************************************************; 4
               ;originator address
               @ORIGINATOR = %NCC_STA_NUMBER
               ;************** project-specific modifications ******************
               #IF BIT(%SIGNAL_HANDLING_ATTRS,0) == 1 #THEN #BLOCK
                  ;write the project-specific code in this block
               #BLOCK_END
               #CASE %COMMAND_TYPE ; 5
                  #WHEN 5 #BLOCK ; direct command (IEC 870-5-103) ; 6
                     @CONNECTED_LENGTH_LIMIT = 2  
                     ;scale value to -2000..2000 using the COM 500 scale object
                     @VALUE = SCALE(%AI,"COM_AIRP'NCC_NUMBER'","OUTPUT")
                     #IF SUBSTR('OUT_LN':PDX'OUT_IX',1,1) == "C" #THEN #BLOCK
                        ;information number of the command
                        @INF = ('OUT_LN':POA'OUT_IX' MOD 65536) DIV 256                                                                      
                        #SET 'OUT_LN':POV'OUT_IX' = LIST(OV=%VALUE,CT=40,TY=256*10+%INF)
                     #BLOCK_END ; 7  
                  #BLOCK_END ; 6                                                     
                  #WHEN 1 #BLOCK ; direct command (other protocols) ; 6
                     @CONNECTED_LENGTH_LIMIT = 2  
                     ;scale value to -2000..2000 using the COM 500 scale object
                     @VALUE = SCALE(%AI,"COM_AIRP'NCC_NUMBER'","OUTPUT")
                     @DX = SUBSTR('OUT_LN':PDX'OUT_IX',1,1)
                     #CASE %DX ;protocol of the output objects ; 7
                        #WHEN "C" #BLOCK ; IEC 870-5-101/104 ; 8  
                           @TY = 'OUT_LN':PTY'OUT_IX' ; type of the command                                                                                                                                                          
                           #IF  %TY == 0 #THEN @TYPE = 48
                           #ELSE @TYPE = %TY
                           #SET 'OUT_LN':P'OUT_IX' = LIST(OV=%VALUE,CT=6,TY=%TYPE)                                   
                        #BLOCK_END ; 8 
                        #WHEN "D" #BLOCK ; DNP 3.0 ; 8  
                           @TY = 'OUT_LN':PTY'OUT_IX' ; type of the command                                                                                                                                                          
                           #IF  %TY == 0 #THEN @TYPE = 5
                           #ELSE @TYPE = %TY
                           #SET 'OUT_LN':P'OUT_IX' = LIST(OV=%VALUE,TY=%TYPE)                                   
                        #BLOCK_END ; 8                      
                        #OTHERWISE #BLOCK  ; 8                                                                                                          
                           #SET 'OUT_LN':POV'OUT_IX' = %VALUE ; 6
                        #BLOCK_END ; 8 
                     #CASE_END ; 7                           
                  #BLOCK_END ; 6 
                  #WHEN 8 #BLOCK ; Secured command/1 output object and Select ;6  
                     @CONNECTED_LENGTH_LIMIT = 2
                     ;scale value to -2000..2000 using the COM 500 scale object
                     @VALUE = SCALE(%AI,"COM_AIRP'NCC_NUMBER'","OUTPUT")
                     @DX = SUBSTR('OUT_LN':PDX'OUT_IX',1,1)
                     #CASE %DX ;protocol of the output objects ; 7
                        #WHEN "C" #BLOCK ; IEC 870-5-101/104 ; 8 
                           @TY = 'OUT_LN':PTY'OUT_IX' ; type of the command                                                                                                                                                          
                           #IF  %TY == 0 #THEN @TYPE = 48
                           #ELSE @TYPE = %TY
                           #SET 'OUT_LN':PSE'OUT_IX' = LIST(OV=%VALUE,CT=6,TY=%TYPE)  ;select                                  
                           #PAUSE (GEN_INFO:VREX_SELECT_EXECUTE_DELAY/1000)
                           #SET 'OUT_LN':POV'OUT_IX' = LIST(OV=%VALUE,CT=6,TY=%TYPE) ;execute                                   
                        #BLOCK_END ; 8
                        #WHEN "D" #BLOCK ; DNP 3.0 ; 8   
                           #SET 'OUT_LN':P'OUT_IX' = LIST(OV=%VALUE,TY=3) ;select
                           #PAUSE (GEN_INFO:VREX_SELECT_EXECUTE_DELAY/1000)
                           #SET 'OUT_LN':P'OUT_IX' = LIST(OV=%VALUE,TY=4) ;operate
                        #BLOCK_END ; 8 
                    #CASE_END ;7    
                  #BLOCK_END ;6
                  #WHEN 4 #BLOCK ; secured command/1 output object (REx 561) ; 6                  
                     @CONNECTED_LENGTH_LIMIT = 2  
                     @GEN_INFO = APL:BSV(20)               
                     ;invert value if required and direction included in the command
                     #IF BIT(%SIGNAL_HANDLING_ATTRS,1) == 1 #THEN #BLOCK
                        #CASE ROUND(%OV)    
                           #WHEN 0 @VALUE = 1     ;immediate cmd off
                           #WHEN 1 @VALUE = 0     ;immediate cmd on 
                           #WHEN 32 @VALUE = 33   ;execute cmd off  
                           #WHEN 33 @VALUE = 32   ;execute cmd on
                           #WHEN 64 @VALUE = 66   ;select cmd off   
                           #WHEN 66 @VALUE = 64   ;select cmd on 
                           #OTHERWISE @VALUE = ROUND(%OV)
                        #CASE_END
                     #BLOCK_END
                     #ELSE @VALUE = ROUND(%OV)               
                     #CASE %VALUE  ; type of the cpi command ; 7
                         #WHEN 0 #BLOCK ; immediate cmd off ; 8
                            #IF BIT(%SIGNAL_HANDLING_ATTRS,3) == 1 #THEN #BLOCK
                               #SET 'OUT_LN':POV'OUT_IX' = %REC_561_REMOTE_SELECT_VALUE   ; select
                               #PAUSE (GEN_INFO:VREX_SELECT_EXECUTE_DELAY/1000)
                               #SET 'OUT_LN':POV'OUT_IX' = %REC_561_REMOTE_OPEN_EXECUTE_VALUE   ; open execute   
                            #BLOCK_END
                            #ELSE #BLOCK
                               #SET 'OUT_LN':POV'OUT_IX' = %REX_561_OPEN_SELECT_VALUE   ; open select
                               #PAUSE (GEN_INFO:VREX_SELECT_EXECUTE_DELAY/1000)
                               #SET 'OUT_LN':POV'OUT_IX' = %REX_561_EXECUTE_VALUE   ; execute
                            #BLOCK_END
                         #BLOCK_END ; 8
                         #WHEN 1 #BLOCK ; immediate cmd on
                            #IF BIT(%SIGNAL_HANDLING_ATTRS,3) == 1 #THEN #BLOCK   
                               #SET 'OUT_LN':POV'OUT_IX' = %REC_561_REMOTE_SELECT_VALUE   ; select
                               #PAUSE (GEN_INFO:VREX_SELECT_EXECUTE_DELAY/1000)
                               #SET 'OUT_LN':POV'OUT_IX' = %REC_561_REMOTE_CLOSE_EXECUTE_VALUE   ; close execute                          
                            #BLOCK_END
                            #ELSE #BLOCK
                               #SET 'OUT_LN':POV'OUT_IX' = %REX_561_CLOSE_SELECT_VALUE   ; close select
                               #PAUSE (GEN_INFO:VREX_SELECT_EXECUTE_DELAY/1000)
                               #SET 'OUT_LN':POV'OUT_IX' = %REX_561_EXECUTE_VALUE   ; execute
                            #BLOCK_END
                         #BLOCK_END ; 8
                         #WHEN 16,96 #BLOCK ; cancel cmd with or without direction
                            #IF BIT(%SIGNAL_HANDLING_ATTRS,3) == 1 #THEN #BLOCK  
                               ;reset selection flag
                               #SET 'LN':PRI'IX' = 0
                               #SET 'OUT_LN':POV'OUT_IX' = %REC_561_REMOTE_CANCEL_VALUE   ; cancel 
                            #BLOCK_END
                            #ELSE #BLOCK                      
                               ;reset selection flag
                               #SET 'LN':PRI'IX' = 0
                               #SET 'OUT_LN':POV'OUT_IX' = %REX_561_CANCEL_VALUE   ; cancel
                            #BLOCK_END
                         #BLOCK_END ; 8
                         #WHEN 17 #BLOCK ; select cmd without direction
                            ;set selection flag and execute flag reseting procedure
                            #SET 'LN':PRI'IX' = 1
                            #EXEC_AFTER GEN_INFO:VCPI_SELECTION_RESET_TIME COM_RESSEL:C (@COM_SELECTION_TIME = %RT+(%RM/1000),-
                                                                                         @COM_SELECTION_LN = %LN,-
                                                                                         @COM_SELECTION_IX = %IX)
                         #BLOCK_END ; 8
                         #WHEN 32 #BLOCK ; execute cmd off ; 8
                            #IF BIT(%SIGNAL_HANDLING_ATTRS,3) == 1 #THEN #BLOCK   
                               ;if selection flag is up, send also select command
                               #IF 'LN':PRI'IX' == 1 #THEN #BLOCK
                                  #SET 'OUT_LN':POV'OUT_IX' = %REC_561_REMOTE_SELECT_VALUE   ; select
                                  #PAUSE (GEN_INFO:VREX_SELECT_EXECUTE_DELAY/1000)
                               #BLOCK_END
                               #SET 'OUT_LN':POV'OUT_IX' = %REC_561_REMOTE_OPEN_EXECUTE_VALUE   ; open execute   
                               #SET 'LN':PRI'IX' = 0 ; reset flag                            
                            #BLOCK_END
                            #ELSE #BLOCK
                               ;if selection flag is up, send also select command
                               #IF 'LN':PRI'IX' == 1 #THEN #BLOCK
                                  #SET 'OUT_LN':POV'OUT_IX' = %REX_561_OPEN_SELECT_VALUE   ; open select
                                  #PAUSE (GEN_INFO:VREX_SELECT_EXECUTE_DELAY/1000)
                               #BLOCK_END
                               #SET 'OUT_LN':POV'OUT_IX' = %REX_561_EXECUTE_VALUE   ; execute
                               #SET 'LN':PRI'IX' = 0 ; reset flag
                            #BLOCK_END
                         #BLOCK_END ; 8
                         #WHEN 33 #BLOCK ; execute cmd on ; 8
                            #IF BIT(%SIGNAL_HANDLING_ATTRS,3) == 1 #THEN #BLOCK   
                               ;if selection flag is up, send also select command 
                               #IF 'LN':PRI'IX' == 1 #THEN #BLOCK
                                  #SET 'OUT_LN':POV'OUT_IX' = %REC_561_REMOTE_SELECT_VALUE   ; select
                                  #PAUSE (GEN_INFO:VREX_SELECT_EXECUTE_DELAY/1000)                                                       
                               #BLOCK_END
                               #SET 'OUT_LN':POV'OUT_IX' = %REC_561_REMOTE_CLOSE_EXECUTE_VALUE   ; close execute
                               #SET 'LN':PRI'IX' = 0 ; reset flag                            
                            #BLOCK_END
                            #ELSE #BLOCK
                               ;if selection flag is up, send also select command 
                               #IF 'LN':PRI'IX' == 1 #THEN #BLOCK
                                  #SET 'OUT_LN':POV'OUT_IX' = %REX_561_CLOSE_SELECT_VALUE   ; close select
                                  #PAUSE (GEN_INFO:VREX_SELECT_EXECUTE_DELAY/1000)                                                       
                               #BLOCK_END
                               #SET 'OUT_LN':POV'OUT_IX' = %REX_561_EXECUTE_VALUE   ; execute
                               #SET 'LN':PRI'IX' = 0 ; reset flag
                            #BLOCK_END
                         #BLOCK_END ; 8
                         #WHEN 64 #BLOCK ; select cmd off ; 8
                            #IF BIT(%SIGNAL_HANDLING_ATTRS,3) == 1 #THEN #BLOCK   
                               ; not supported  
                            #BLOCK_END
                            #ELSE #BLOCK
                               #SET 'OUT_LN':POV'OUT_IX' = %REX_561_OPEN_SELECT_VALUE   ; open select
                               ;set selection flag and execute flag reseting procedure
                               #SET 'LN':PRI'IX' = 2
                               #EXEC_AFTER GEN_INFO:VCPI_SELECTION_RESET_TIME COM_RESSEL:C (@COM_SELECTION_TIME = %RT+(%RM/1000),-
                                                                                            @COM_SELECTION_LN = %LN,-
                                                                                            @COM_SELECTION_IX = %IX)
                            #BLOCK_END                                                                                  
                         #BLOCK_END               
                         #WHEN 66 #BLOCK ; select cmd on ; 8
                            #IF BIT(%SIGNAL_HANDLING_ATTRS,3) == 1 #THEN #BLOCK   
                               ; not supported                     
                            #BLOCK_END
                            #ELSE #BLOCK
                               #SET 'OUT_LN':POV'OUT_IX' = %REX_561_CLOSE_SELECT_VALUE   ; close select
                               ;set selection flag and execute flag reseting procedure
                               #SET 'LN':PRI'IX' = 3
                               #EXEC_AFTER GEN_INFO:VCPI_SELECTION_RESET_TIME COM_RESSEL:C (@COM_SELECTION_TIME = %RT+(%RM/1000),-
                                                                                            @COM_SELECTION_LN = %LN,-
                                                                                            @COM_SELECTION_IX = %IX)
                            #BLOCK_END
                         #BLOCK_END ; 8  
                         #WHEN 97 #BLOCK ; execute cmd without direction ; 8
                            #IF BIT(%SIGNAL_HANDLING_ATTRS,3) == 1 #THEN #BLOCK   
                               ; not supported                      
                            #BLOCK_END
                            #ELSE #BLOCK
                               #SET 'OUT_LN':POV'OUT_IX' = %REX_561_EXECUTE_VALUE   ; execute
                               #SET 'LN':PRI'IX' = 0 ; reset flag
                            #BLOCK_END
                         #BLOCK_END ; 8                                                             
                     #CASE_END  ; 7
                  #BLOCK_END ; 6          
                  #WHEN 6 #BLOCK ; secured command/5 output object  ; 6
                     @CONNECTED_LENGTH_LIMIT = 6
                     #IF BIT(%SIGNAL_HANDLING_ATTRS,2) == 1 #THEN #BLOCK
                        @IEC61850_CONTROL_VALUE = 53
                     #BLOCK_END
                     #IF SUBSTR('OUT_LN':PDX'OUT_IX',1,3) == "G11" #THEN #BLOCK
                        @DX = "G11"   
                     #BLOCK_END 
                     #ELSE @DX = SUBSTR('OUT_LN':PDX'OUT_IX',1,2)
                     #CASE %DX ;protocol of the output objects ; 7   
                        #WHEN "E4","X4","G11" #BLOCK ; IEC61850, LON, OPC ; 8                         
                           @VALUE = %OV
                           ;invert value if required and direction included in the command
                           #IF BIT(%SIGNAL_HANDLING_ATTRS,1) == 1 #THEN #BLOCK
                              #CASE %VALUE    
                                 #WHEN 0 @VALUE = 1    ;immediate cmd off
                                 #WHEN 1 @VALUE = 0    ;immediate cmd on 
                                 #WHEN 32 @VALUE = 33  ;execute cmd off  
                                 #WHEN 33 @VALUE = 32  ;execute cmd on
                                 #WHEN 64 @VALUE = 66  ;select cmd off   
                                 #WHEN 66 @VALUE = 64  ;select cmd on 
                              #CASE_END
                           #BLOCK_END
                           #CASE %VALUE  ; type of the cpi command ; 7
                              #WHEN 0 #BLOCK ; immediate cmd off
                                 @OUT_LN = %OUTPUT_OBJECT_LNS(1)
                                 @OUT_IX = %OUTPUT_OBJECT_IXS(1)
                                 #SET 'OUT_LN':POV'OUT_IX' = %IEC61850_CONTROL_VALUE  ; open select
                                 #PAUSE (GEN_INFO:VREX_SELECT_EXECUTE_DELAY/1000)
                                 @OUT_LN = %OUTPUT_OBJECT_LNS(3)
                                 @OUT_IX = %OUTPUT_OBJECT_IXS(3)
                                 #SET 'OUT_LN':POV'OUT_IX' = %IEC61850_CONTROL_VALUE  ; open execute
                              #BLOCK_END
                              #WHEN 1 #BLOCK ; immediate cmd on
                                 @OUT_LN = %OUTPUT_OBJECT_LNS(2)
                                 @OUT_IX = %OUTPUT_OBJECT_IXS(2)
                                 #SET 'OUT_LN':POV'OUT_IX' = %IEC61850_CONTROL_VALUE  ; close select
                                 #PAUSE (GEN_INFO:VREX_SELECT_EXECUTE_DELAY/1000)
                                 @OUT_LN = %OUTPUT_OBJECT_LNS(4)
                                 @OUT_IX = %OUTPUT_OBJECT_IXS(4)
                                 #SET 'OUT_LN':POV'OUT_IX' = %IEC61850_CONTROL_VALUE  ; close execute
                              #BLOCK_END
                              #WHEN 16,96 #BLOCK ; cancel cmd with or without direction
                                 ;reset selection flag
                                 #SET 'LN':PRI'IX' = 0
                                 @OUT_LN = %OUTPUT_OBJECT_LNS(5)
                                 @OUT_IX = %OUTPUT_OBJECT_IXS(5)
                                 @IEC61850_CONTROL_VALUE = 49
                                 #SET 'OUT_LN':POV'OUT_IX' = %IEC61850_CONTROL_VALUE  ; cancel
                              #BLOCK_END
                              #WHEN 17 #BLOCK ; select cmd without direction
                                 ;set selection flag and execute flag reseting procedure
                                 #SET 'LN':PRI'IX' = 1
                                 #EXEC_AFTER GEN_INFO:VCPI_SELECTION_RESET_TIME COM_RESSEL:C (@COM_SELECTION_TIME = %RT+(%RM/1000),-
                                                                                               @COM_SELECTION_LN = %LN,-
                                                                                               @COM_SELECTION_IX = %IX)
                              #BLOCK_END
                              #WHEN 32 #BLOCK ; execute cmd off
                                 ;if selection flag is up, send also select command
                                 #IF 'LN':PRI'IX' == 1 #THEN #BLOCK
                                    @OUT_LN = %OUTPUT_OBJECT_LNS(1)
                                    @OUT_IX = %OUTPUT_OBJECT_IXS(1)
                                    #SET 'OUT_LN':POV'OUT_IX' = %IEC61850_CONTROL_VALUE  ; open select                            
                                 #BLOCK_END
                                 @OUT_LN = %OUTPUT_OBJECT_LNS(3)
                                 @OUT_IX = %OUTPUT_OBJECT_IXS(3)
                                 #PAUSE (GEN_INFO:VREX_SELECT_EXECUTE_DELAY/1000)
                                 #SET 'OUT_LN':POV'OUT_IX' = %IEC61850_CONTROL_VALUE  ; open execute
                                 #SET 'LN':PRI'IX' = 0 ; reset flag
                              #BLOCK_END
                              #WHEN 33 #BLOCK ; execute cmd on
                                 ;if selection flag is up, send also select command 
                                 #IF 'LN':PRI'IX' == 1 #THEN #BLOCK
                                    @OUT_LN = %OUTPUT_OBJECT_LNS(2)
                                    @OUT_IX = %OUTPUT_OBJECT_IXS(2)
                                    #SET 'OUT_LN':POV'OUT_IX' = %IEC61850_CONTROL_VALUE  ; close select                           
                                 #BLOCK_END                         
                                 @OUT_LN = %OUTPUT_OBJECT_LNS(4)
                                 @OUT_IX = %OUTPUT_OBJECT_IXS(4)
                                 #PAUSE (GEN_INFO:VREX_SELECT_EXECUTE_DELAY/1000)
                                 #SET 'OUT_LN':POV'OUT_IX' = %IEC61850_CONTROL_VALUE  ; close execute
                                 #SET 'LN':PRI'IX' = 0 ; reset flag
                              #BLOCK_END
                              #WHEN 64 #BLOCK ; select cmd off
                                 @OUT_LN = %OUTPUT_OBJECT_LNS(1)
                                 @OUT_IX = %OUTPUT_OBJECT_IXS(1)
                                 #SET 'OUT_LN':POV'OUT_IX' = %IEC61850_CONTROL_VALUE  ; open select
                                 ;set selection flag and execute flag reseting procedure
                                 #SET 'LN':PRI'IX' = 2
                                 #EXEC_AFTER GEN_INFO:VCPI_SELECTION_RESET_TIME COM_RESSEL:C (@COM_SELECTION_TIME = %RT+(%RM/1000),-
                                                                                             @COM_SELECTION_LN = %LN,-
                                                                                             @COM_SELECTION_IX = %IX)
                              #BLOCK_END
                              #WHEN 66 #BLOCK ; select cmd on
                                 @OUT_LN = %OUTPUT_OBJECT_LNS(2)
                                 @OUT_IX = %OUTPUT_OBJECT_IXS(2)
                                 #SET 'OUT_LN':POV'OUT_IX' = %IEC61850_CONTROL_VALUE  ; close select
                                 ;set selection flag and execute flag reseting procedure
                                 #SET 'LN':PRI'IX' = 3
                                 #EXEC_AFTER GEN_INFO:VCPI_SELECTION_RESET_TIME COM_RESSEL:C (@COM_SELECTION_TIME = %RT+(%RM/1000),-
                                                                                               @COM_SELECTION_LN = %LN,-
                                                                                               @COM_SELECTION_IX = %IX)
                              #BLOCK_END 
                              #WHEN 97 #BLOCK ; execute cmd without direction
                                 ; not supported      
                              #BLOCK_END
                           #CASE_END ; 9  
                        #BLOCK_END ;8
                     #CASE_END ; 7                  
                  #BLOCK_END ;6          
               #CASE_END ; 5
               ;if succesful command and an indication has been connected set the tag
               #IF STATUS == 0 AND LENGTH(%OUTPUT_OBJECT_LNS) == %CONNECTED_LENGTH_LIMIT #THEN @INDICATION_CONNECTED = TRUE
               #IF %ENABLE_LOGGING #THEN #BLOCK ; 5
                  @ADDR='OUT_LN':POA'OUT_IX'
                  @STA_NR='OUT_LN':PUN'OUT_IX'
                  @NCC_TYPE="MODBUS/CPI"
                  @SH=%SIGNAL_HANDLING_ATTRS
                  @SX_STATE='OUT_LN':PSX'OUT_IX'
                  @S=STATUS
                  @INFO="'rt':'rm',DSAO,'UN','OUT_LN':P'OUT_IX','STA_NR',,'OV','NCC_TYPE','SH','ADDR','VALUE',,,,,,,,'S',,,'SX_STATE'"
                  #IF COM_LOG:CCS == 1 #THEN #DO COM_LOG:CCP
                  #ELSE #DO COM_LOG:CIN 
               #BLOCK_END ; 5
            #BLOCK_END ; 4
            #WHEN 4 #BLOCK ; ************************* DNP 3.0 slave protocol ****************************************; 4 
               ;originator address
               @ORIGINATOR = %NCC_STA_NUMBER                                      
               ;************** project-specific modifications ******************
               #IF BIT(%SIGNAL_HANDLING_ATTRS,0) == 1 #THEN #BLOCK
                  ;write the project-specific code in this block
               #BLOCK_END
               #CASE %COMMAND_TYPE ; 5
                  #WHEN 5 #BLOCK ; direct command (IEC 870-5-103) ; 6
                     @VALUE = %OV 
                     #IF SUBSTR('OUT_LN':PDX'OUT_IX',1,1) == "C" #THEN #BLOCK
                        ;information number of the command
                        @INF = ('OUT_LN':POA'OUT_IX' MOD 65536) DIV 256 
                        ;perform command depending on the function code                    
                        #CASE %RA ; 7
                           ;operate, direct operate, direct operate no ack  
                           #WHEN 4,5,6 #BLOCK ; 8
                              #SET 'OUT_LN':POV'OUT_IX' = LIST(OV=%VALUE,CT=40,TY=256*10+%INF)
                           #BLOCK_END ; 8                                                                                             
                        #CASE_END ; 7                                                                                          
                     #BLOCK_END ; 7  
                  #BLOCK_END ; 6
                  #WHEN 1 #BLOCK ; direct command (other protocols) ; 6 
                     @VALUE = %OV
                     @DX = SUBSTR('OUT_LN':PDX'OUT_IX',1,1)
                     #CASE %DX ;protocol of the output objects ; 7
                        #WHEN "C" #BLOCK ; IEC 870-5-101/104 ; 8
                           @TY = 'OUT_LN':PTY'OUT_IX' ; type of the command                                                                                                                                                          
                           #IF  %TY == 0 #THEN @TYPE = 48
                           #ELSE @TYPE = %TY
                           ;perform command depending on the function code                    
                           #CASE %RA ; 9                        
                              ;operate, direct operate, direct operate no ack  
                              #WHEN 4,5,6 #BLOCK ; 10
                                 #SET 'OUT_LN':P'OUT_IX' = LIST(OV=%VALUE,CT=6,TY=%TYPE)
                              #BLOCK_END ; 10      
                           #CASE_END; 9                                                                                          
                        #BLOCK_END ; 8 
                        #WHEN "D" #BLOCK ; DNP 3.0 ; 8
                           @TY = 'OUT_LN':PTY'OUT_IX' ; type of the command                                                                                                                                                          
                           #IF  %TY == 0 #THEN @TYPE = 5
                           #ELSE @TYPE = %TY
                           ;perform command depending on the function code                    
                           #CASE %RA ; 9                        
                              ;operate, direct operate, direct operate no ack  
                              #WHEN 4,5,6 #BLOCK ; 10
                                 #SET 'OUT_LN':P'OUT_IX' = LIST(OV=%VALUE,TY=%TYPE)
                              #BLOCK_END ; 10      
                           #CASE_END; 9                                                                                          
                        #BLOCK_END ; 8                      
                        #OTHERWISE #BLOCK  ; 8
                           ;perform command depending on the function code                    
                           #CASE %RA ; 9                        
                              ;operate, direct operate, direct operate no ack  
                              #WHEN 4,5,6 #BLOCK ; 10
                                 #SET 'OUT_LN':POV'OUT_IX' = %VALUE 
                              #BLOCK_END ; 10      
                           #CASE_END; 9                                                                                                                        
                        #BLOCK_END ; 8 
                     #CASE_END ; 7                           
                  #BLOCK_END ; 6  
                  #WHEN 8 #BLOCK ; Secured command/1 output object and Select ;6  
                     @VALUE = %OV
                     @DX = SUBSTR('OUT_LN':PDX'OUT_IX',1,1)
                     #CASE %DX ;protocol of the output objects ; 7
                        #WHEN "C" #BLOCK ; IEC 870-5-101/104 ; 8 
                           @TY = 'OUT_LN':PTY'OUT_IX' ; type of the command                                                                                                                                                          
                           #IF  %TY == 0 #THEN @TYPE = 48
                           #ELSE @TYPE = %TY
                           #CASE %RA ; 9
                              #WHEN 3 #BLOCK
                                 #SET 'OUT_LN':PSE'OUT_IX' = LIST(OV=%VALUE,CT=6,TY=%TYPE)  ;select                                  
                              #BLOCK_END
                              #WHEN 4 #BLOCK
                                 #SET 'OUT_LN':POV'OUT_IX' = LIST(OV=%VALUE,CT=6,TY=%TYPE) ;operate                                   
                              #BLOCK_END
                              ;direct operate, direct operate no ack 
                              #WHEN 5,6 #BLOCK ; 8
                                 #SET 'OUT_LN':PSE'OUT_IX' = LIST(OV=%VALUE,CT=6,TY=%TYPE)  ;select                                  
                                 #PAUSE (GEN_INFO:VREX_SELECT_EXECUTE_DELAY/1000)
                                 #SET 'OUT_LN':POV'OUT_IX' = LIST(OV=%VALUE,CT=6,TY=%TYPE) ;execute                                   
                              #BLOCK_END   
                           #CASE_END ;9
                        #BLOCK_END ; 8
                        #WHEN "D" #BLOCK ; DNP 3.0 ; 8   
                           #CASE %RA ; 9
                              #WHEN 3 #BLOCK
                                 #SET 'OUT_LN':P'OUT_IX' = LIST(OV=%VALUE,TY=3) ;select                        
                              #BLOCK_END
                              #WHEN 4 #BLOCK
                                 #SET 'OUT_LN':P'OUT_IX' = LIST(OV=%VALUE,TY=4) ;operate                        
                              #BLOCK_END
                              ;direct operate, direct operate no ack 
                              #WHEN 5,6 #BLOCK ; 8
                                 #SET 'OUT_LN':P'OUT_IX' = LIST(OV=%VALUE,TY=3) ;select
                                 #PAUSE (GEN_INFO:VREX_SELECT_EXECUTE_DELAY/1000)
                                 #SET 'OUT_LN':P'OUT_IX' = LIST(OV=%VALUE,TY=4) ;operate                        
                              #BLOCK_END   
                           #CASE_END ;9
                        #BLOCK_END ; 8 
                    #CASE_END ;7    
                  #BLOCK_END ;6         
                  #WHEN 4 #BLOCK ; secured command/1 output object (REx 561) ; 6
                     #IF BIT(%SIGNAL_HANDLING_ATTRS,3) == 1 #THEN #BLOCK; 7 
                        @VALUE = %OV  ;received as single command
                        ;invert value if required
                        #IF BIT(%SIGNAL_HANDLING_ATTRS,1) == 1 #THEN @VALUE = 1-%VALUE               
                        #IF BIT(%SIGNAL_HANDLING_ATTRS,5) == 1 #THEN #BLOCK
                           ;perform command depending on the function code                    
                           #CASE %RA ; 8
                              ;select 
                              #WHEN 3 #BLOCK ; 9
                                 #SET 'OUT_LN':POV'OUT_IX' = %REC_561_REMOTE_SELECT_VALUE  ; select
                                 #IF STATUS == 0 #THEN @CS_CODE = 0
                                 #ELSE @CS_CODE = 6        
                              #BLOCK_END ; 9              
                              ;operate 
                              #WHEN 4 #BLOCK ; 9
                                 #IF %VALUE == 1 #THEN #SET 'OUT_LN':POV'OUT_IX' = %REC_561_REMOTE_CLOSE_EXECUTE_VALUE   ; close execute
                                 #ELSE #SET 'OUT_LN':POV'OUT_IX' = %REC_561_REMOTE_OPEN_EXECUTE_VALUE  ; open execute
                                 #IF STATUS == 0 #THEN @CS_CODE = 0
                                 #ELSE @CS_CODE = 6                
                              #BLOCK_END ; 9                           
                              ;direct operate, direct operate no ack  
                              #WHEN 5,6 #BLOCK ; 9
                                 #SET 'OUT_LN':POV'OUT_IX' = %REC_561_REMOTE_SELECT_VALUE  ; select
                                 #IF 'OUT_LN':PDX'OUT_IX' == "X4" #THEN #PAUSE (GEN_INFO:VREX_SELECT_EXECUTE_DELAY/1000)                                                
                                 #IF %VALUE == 1 #THEN #SET 'OUT_LN':POV'OUT_IX' = %REC_561_REMOTE_CLOSE_EXECUTE_VALUE   ; close execute
                                 #ELSE #SET 'OUT_LN':POV'OUT_IX' = %REC_561_REMOTE_OPEN_EXECUTE_VALUE  ; open execute
                                 #IF STATUS == 0 #THEN @CS_CODE = 0
                                 #ELSE @CS_CODE = 6
                              #BLOCK_END ; 9
                           #CASE_END ; 8
                        #BLOCK_END
                        #ELSE #BLOCK
                           ;perform command depending on the function code                    
                           #CASE %RA ; 8
                              ;select 
                              #WHEN 3 #BLOCK ; 9
                                 #IF %VALUE == 1 #THEN #SET 'OUT_LN':POV'OUT_IX' = %REX_561_CLOSE_SELECT_VALUE   ; close select
                                 #ELSE #SET 'OUT_LN':POV'OUT_IX' = %REX_561_OPEN_SELECT_VALUE  ; open select
                                 #IF STATUS == 0 #THEN @CS_CODE = 0
                                 #ELSE @CS_CODE = 6                        
                              #BLOCK_END ; 9              
                              ;operate 
                              #WHEN 4 #BLOCK ; 9
                                 #SET 'OUT_LN':POV'OUT_IX' = %REX_561_EXECUTE_VALUE  ; execute
                                 #IF STATUS == 0 #THEN @CS_CODE = 0
                                 #ELSE @CS_CODE = 6
                              #BLOCK_END ; 9                           
                              ;direct operate, direct operate no ack  
                              #WHEN 5,6 #BLOCK ; 9
                                 #IF %VALUE == 1 #THEN #SET 'OUT_LN':POV'OUT_IX' = %REX_561_CLOSE_SELECT_VALUE   ; close select
                                 #ELSE #SET 'OUT_LN':POV'OUT_IX' = %REX_561_OPEN_SELECT_VALUE  ; open select
                                 #IF 'OUT_LN':PDX'OUT_IX' == "X4" #THEN #PAUSE (GEN_INFO:VREX_SELECT_EXECUTE_DELAY/1000)                                                
                                 #SET 'OUT_LN':POV'OUT_IX' = %REX_561_EXECUTE_VALUE  ; execute
                                 #IF STATUS == 0 #THEN @CS_CODE = 0
                                 #ELSE @CS_CODE = 6
                              #BLOCK_END ; 9
                           #CASE_END ; 8
                        #BLOCK_END
                     #BLOCK_END ; 7    
                     #ELSE #BLOCK ; 7
                        @VALUE = %OV  ;received as analog command
                        ;perform command depending on the function code                    
                        #CASE %RA ; 8
                           ;select 
                           #WHEN 3 #BLOCK ; 9                           
                              #SET 'OUT_LN':PSE'OUT_IX' = %VALUE  ; select
                              #IF STATUS == 0 #THEN @CS_CODE = 0
                              #ELSE @CS_CODE = 6                        
                           #BLOCK_END ; 9              
                           ;operate 
                           #WHEN 4 #BLOCK ; 9
                              #SET 'OUT_LN':POV'OUT_IX' = %VALUE  ; execute
                              #IF STATUS == 0 #THEN @CS_CODE = 0
                              #ELSE @CS_CODE = 6
                           #BLOCK_END ; 9                           
                           ;direct operate, direct operate no ack  
                           #WHEN 5,6 #BLOCK ; 9                           
                              #SET 'OUT_LN':PSE'OUT_IX' = %VALUE  ; select
                              #PAUSE (GEN_INFO:VREX_SELECT_EXECUTE_DELAY/1000)                                                
                              #SET 'OUT_LN':POV'OUT_IX' = %VALUE  ; execute
                              #IF STATUS == 0 #THEN @CS_CODE = 0
                              #ELSE @CS_CODE = 6
                           #BLOCK_END ; 9
                        #CASE_END ; 8                     
                     #BLOCK_END ; 7          
                  #BLOCK_END ; 6    
                  #WHEN 6 #BLOCK ; secured command/5 output object  ; 6
                     #IF BIT(%SIGNAL_HANDLING_ATTRS,3) == 1 #THEN #BLOCK
                        @IEC61850_CONTROL_VALUE = 53
                     #BLOCK_END
                     #IF SUBSTR('OUT_LN':PDX'OUT_IX',1,3) == "G11" #THEN #BLOCK
                        @DX = "G11"   
                     #BLOCK_END 
                     #ELSE @DX = SUBSTR('OUT_LN':PDX'OUT_IX',1,2)
                     #CASE %DX ;protocol of the output objects ; 7   
                        #WHEN "E4","X4","G11" #BLOCK ; IEC61850, LON, OPC ; 8                         
                           @VALUE = %OV
                           ;invert value if required
                           #IF BIT(%SIGNAL_HANDLING_ATTRS,1) == 1 #THEN @VALUE = 1-%VALUE            
                           #CASE %RA ; 9         
                              ;select 
                              #WHEN 3 #BLOCK ; 10
                                 #IF %VALUE == 1 #THEN @OUT_IND = 2 ; close select
                                 #ELSE @OUT_IND = 1 ; open select
                                 @OUT_LN = %OUTPUT_OBJECT_LNS(%OUT_IND)
                                 @OUT_IX = %OUTPUT_OBJECT_IXS(%OUT_IND)
                                 #SET 'OUT_LN':POV'OUT_IX' = %IEC61850_CONTROL_VALUE                 
                              #BLOCK_END ; 10
                              ;operate 
                              #WHEN 4 #BLOCK ; 10         
                                 #IF %VALUE == 1 #THEN @OUT_IND = 4 ; close execute
                                 #ELSE @OUT_IND = 3 ; open execute
                                 @OUT_LN = %OUTPUT_OBJECT_LNS(%OUT_IND)
                                 @OUT_IX = %OUTPUT_OBJECT_IXS(%OUT_IND)
                                 #PAUSE (GEN_INFO:VREX_SELECT_EXECUTE_DELAY/1000)
                                 #SET 'OUT_LN':POV'OUT_IX' = %IEC61850_CONTROL_VALUE                     
                              #BLOCK_END ; 10
                              ;direct operate, direct operate no ack 
                              #WHEN 5,6 #BLOCK ; 10   
                                 #IF %VALUE == 1 #THEN @OUT_IND = 2 ; close select
                                 #ELSE @OUT_IND = 1 ; open select
                                 @OUT_LN = %OUTPUT_OBJECT_LNS(%OUT_IND)
                                 @OUT_IX = %OUTPUT_OBJECT_IXS(%OUT_IND)
                                 #SET 'OUT_LN':POV'OUT_IX' = %IEC61850_CONTROL_VALUE
                                 #PAUSE (GEN_INFO:VREX_SELECT_EXECUTE_DELAY/1000)                 
                                 @OUT_IND = %OUT_IND + 2
                                 @OUT_LN = %OUTPUT_OBJECT_LNS(%OUT_IND)
                                 @OUT_IX = %OUTPUT_OBJECT_IXS(%OUT_IND)
                                 #SET 'OUT_LN':POV'OUT_IX' = %IEC61850_CONTROL_VALUE  ; open or close execute                                                
                              #BLOCK_END ; 10
                           #CASE_END ; 9             
                        #BLOCK_END ; 8          
                     #CASE_END ; 7             
                  #BLOCK_END ;6        
               #CASE_END ; 5
               ;send command confirmation, if required
               ;if command fails, report hardware problems
               #IF %RA < 6 #THEN #BLOCK ; 5
                  #IF STATUS <> 0 #THEN @CS_CODE = 6
                  #SET STA'NCC_STA_NUMBER':SCF = (%CS_CODE,'LN':POA'IX')
               #BLOCK_END ; 5                      
               #IF %ENABLE_LOGGING #THEN #BLOCK ; 5
                  @ADDR='OUT_LN':POA'OUT_IX'
                  @STA_NR='OUT_LN':PUN'OUT_IX'
                  @SH=%SIGNAL_HANDLING_ATTRS
                  @SX_STATE='OUT_LN':PSX'OUT_IX'
                  @S=STATUS
                  @INFO="'rt':'rm',DSAO,'UN','OUT_LN':P'OUT_IX','STA_NR',,'OV',DNP30,'SH','ADDR','VALUE',,,,,,,,'S',,,'SX_STATE'"
                  #IF COM_LOG:CCS == 1 #THEN #DO COM_LOG:CCP
                  #ELSE #DO COM_LOG:CIN 
               #BLOCK_END ; 5
            #BLOCK_END ; 4                 
         #CASE_END ; 3
         ;write ln+ix+oa+sta_nr+og and time stamp to apl:bsv
         ;if IEC master use termination object, otherwise indication
         #IF %INDICATION_CONNECTED #THEN #BLOCK ; 3
            #IF LENGTH(APL:BSV(29)) < 9999 #THEN #BLOCK ; 4
               @OUT_LN = %OUTPUT_OBJECT_LNS(%CONNECTED_LENGTH_LIMIT)
               @OUT_IX = %OUTPUT_OBJECT_IXS(%CONNECTED_LENGTH_LIMIT)
               #IF SUBSTR('OUT_LN':PDX'OUT_IX',1,1) == "C" #THEN #BLOCK
                 @TMP = FETCH(0,"P",%OUT_LN,%OUT_IX+100)
                 #IF TMP:VIU <> -1 #THEN #IF TMP:VOA > 0 #THEN @OUT_IX = %OUT_IX + 100
               #BLOCK_END
               #SET APL:BSV(28) = APPEND(APL:BSV(28),CLOCK)
               #SET APL:BSV(29) = APPEND(APL:BSV(29),%OUT_LN+DEC(%OUT_IX,1)+"/"+DEC('LN':POA'IX',1)+"/"+DEC(%NCC_STA_NUMBER,1)+"/"+DEC(%ORIGINATOR,1)+"/"+%OUTPUT_OBJECT_LNS(1)+"/"+DEC(%RT)+"/"+DEC(%RM))
            #BLOCK_END  ; 4                  
         #BLOCK_END ; 3
      #BLOCK_END ; 2
      #ELSE #BLOCK ;command not authorized ; 2
         #CASE %NCC_PROTOCOL  ; 3
            #WHEN 1 #BLOCK ;RP-570 slave protocol ; 4
               @RESPONSE_MESSAGE_STATUS = 1   
               #IF %RA == 1 OR %RA == 2 OR %RA == 3 #THEN #SET STA'NCC_STA_NUMBER':SCS = %RESPONSE_MESSAGE_STATUS 
            #BLOCK_END ; 4         
            #WHEN 2 #BLOCK ;IEC 870-5-101 slave protocol ; 4
               ;send negative confirmation
               #IF %NCC_SUBPROTOCOL == 2 #THEN #BLOCK
                  #SET STA'NCC_STA_NUMBER':SCF('LN':POA'IX') = (2,%RA)
                  #IF %ENABLE_LOGGING #THEN #BLOCK ; 1
                     @CF_TIME = HR_CLOCK
                     @CF_RT = TIMES(CF_TIME:VCL)
                     @CF_RM = ROUND(CF_TIME:VUS/1000)      
                     @CF_LOG_ADDR = 'LN':POA'IX'
                     @INFO="'CF_RT':'CF_RM',DSAO,'NCC_STA_NUMBER','LN':P'IX',,Negative activation confirmation,,,,'CF_LOG_ADDR',,,,,,,,,,,,"
                     #IF COM_LOG:CCS == 1 #THEN #DO COM_LOG:CCP
                     #ELSE #DO COM_LOG:CIN 
                  #BLOCK_END  
               #BLOCK_END
               #ELSE_IF %NCC_SUBPROTOCOL == 3 #THEN #BLOCK
                  @ACR = 20
                  #SET STA'NCC_STA_NUMBER':SCF = (%CT+1+64,('LN':POA'IX'),%ACR,%RA)
                  @CF_TIME = HR_CLOCK
                  @CF_RT = TIMES(CF_TIME:VCL)
                  @CF_RM = ROUND(CF_TIME:VUS/1000)      
                  @CF_LOG_ADDR = 'LN':POA'IX'
                  @CF_LOG_TEXT = "Negative activation confirmation" 
                  @INFO="'CF_RT':'CF_RM',DSAO,'NCC_STA_NUMBER',,,'CF_LOG_TEXT',,,,'CF_LOG_ADDR',,,,,,,,,,,,"
                  #IF COM_LOG:CCS == 1 #THEN #DO COM_LOG:CCP
                  #ELSE #DO COM_LOG:CIN
               #BLOCK_END
               #ELSE #BLOCK
                  #IF STA'NCC_STA_NUMBER':SPC == 0 AND %IEC_TERM_ENABLED #THEN #BLOCK
                     #SET STA'NCC_STA_NUMBER':SCF = (256*%OG+64+7,'LN':POA'IX')
                     #IF %ENABLE_LOGGING #THEN #BLOCK ; 1
                        @CF_TIME = HR_CLOCK
                        @CF_RT = TIMES(CF_TIME:VCL)
                        @CF_RM = ROUND(CF_TIME:VUS/1000)      
                        @CF_LOG_ADDR = 'LN':POA'IX'
                        @INFO="'CF_RT':'CF_RM',DSAO,'NCC_STA_NUMBER','LN':P'IX',,Negative activation confirmation,,,,'CF_LOG_ADDR',,,,,,,,,,,,"
                        #IF COM_LOG:CCS == 1 #THEN #DO COM_LOG:CCP
                        #ELSE #DO COM_LOG:CIN 
                     #BLOCK_END
                  #BLOCK_END
               #BLOCK_END
            #BLOCK_END ; 4 
            #WHEN 2 #BLOCK ; CPI interface ; 4
   
            #BLOCK_END ; 4
            #WHEN 4 #BLOCK ;DNP 3.0 slave protocol ; 4
              ;send command confirmation, if required, report ouputs in local state
              #IF %RA < 6 #THEN #SET STA'NCC_STA_NUMBER':SCF = (128,'LN':POA'IX')
            #BLOCK_END ; 4         
         #CASE_END ; 3
         #IF %ENABLE_LOGGING #THEN #BLOCK ; 3
            @INFO="'rt':'rm',DSAO,'UN','LN':P'IX',,command not authorized,,,,,,,,,,,,,,,,"
            #IF COM_LOG:CCS == 1 #THEN #DO COM_LOG:CCP
            #ELSE #DO COM_LOG:CIN 
         #BLOCK_END ; 3  
      #BLOCK_END ; 2
   #BLOCK_END ; 1
   #ELSE_IF %ENABLE_LOGGING #THEN #BLOCK ; 1
      @INFO="'rt':'rm',DSAO,'UN','LN':P'IX',,cross-reference not found,,,,,,,,,,,,,,,,"
      #IF COM_LOG:CCS == 1 #THEN #DO COM_LOG:CCP
      #ELSE #DO COM_LOG:CIN 
   #BLOCK_END ; 1
#BLOCK_END
