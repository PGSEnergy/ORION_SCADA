; This command procedure is used for read general application information
; in a COM500 application 
;
; SYS600 10.2.0
; Compilation status: Compiled
; DO NOT edit this program without consulting with Hitachi Power Grids.
;
;--------------------------------------------------------------------------

#ERROR CONTINUE

;initialize variables and give parameters their default values
@STA_NAME_START = 1
@STA_NAME_LENGTH = 0
@STA_LR_OBJECT_LNS = VECTOR()
@STA_LR_OBJECT_IXS = VECTOR()
@STA_LR_OBJECT_STA_NAMES = VECTOR()
@STA_LR_OBJECT_CMD_SOURCES = VECTOR()
@MAX_NCC_COUNT = 8
@UPSTREAM_XREF_TABLE_LENGTH = 2000
@DOWNSTREAM_XREF_TABLE_LENGTH = 7000
@SEND_GROUP_ALARMS_AT_STARTUP = FALSE
@NET_INIT_START_DELAY = 60
@REX_SELECT_EXECUTE_DELAY = 200
@DATABASE_INITIALISATION_TIME = 120
@STA_OBJECT_STATUS_CHECK_TIMEOUT = 5000
@PENDING_INDICATION_TIMEOUT = 10
@CPI_SELECTION_RESET_TIME = 60
@STATION_LR_CHECK_IN_USE = TRUE
@HARD_CODED_STA_LR_OBJECT_LN = ""
@HARD_CODED_STA_LR_OBJECT_IX = 0
@RPSS_CMD_TYPE = ""
@SWITCH_OVER_NET_INIT_DELAY = 0
@SWITCH_OVER_DB_INIT_TIME = 0


#IF SYS:BPR == "COM_500" #THEN @COMMAND_SOURCE_CHECK_IN_USE = FALSE
#ELSE @COMMAND_SOURCE_CHECK_IN_USE = TRUE

;in the startup this value must be false
#IF ( LENGTH(APL:BSV(20)) == 0 ) #THEN @COM_DATABASE_INITIALISED = FALSE
#ELSE #BLOCK
   ;check if comtool sets parameters before ending database initialisation
   @GEN_INFO = APL:BSV(20)
   #IF ( GEN_INFO:VCOM_DATABASE_INITIALISED ) #THEN @COM_DATABASE_INITIALISED = TRUE
   #ELSE @COM_DATABASE_INITIALISED = FALSE
#BLOCK_END

;read parameters from the file com500.ini
@TMP = READ_PARAMETER("COM_PATH/COM500.INI","General","max_number_of_nccs")
#IF TMP:VSTATUS == 0 #THEN @MAX_NCC_COUNT = DEC_SCAN(TMP:VVALUE)
@TMP = READ_PARAMETER("COM_PATH/COM500.INI","General","upstream_xref_table_length")
#IF TMP:VSTATUS == 0 #THEN @UPSTREAM_XREF_TABLE_LENGTH = DEC_SCAN(TMP:VVALUE)
@TMP = READ_PARAMETER("COM_PATH/COM500.INI","General","downstream_xref_table_length")
#IF TMP:VSTATUS == 0 #THEN @DOWNSTREAM_XREF_TABLE_LENGTH = DEC_SCAN(TMP:VVALUE)
@TMP = READ_PARAMETER("COM_PATH/COM500.INI","General","send_group_alarms_at_startup")
#IF TMP:VSTATUS == 0 #THEN #BLOCK
   #IF UPPER_CASE(TMP:VVALUE) == "TRUE" #THEN @SEND_GROUP_ALARMS_AT_STARTUP = TRUE
   #ELSE_IF UPPER_CASE(TMP:VVALUE) == "FALSE" #THEN @SEND_GROUP_ALARMS_AT_STARTUP = FALSE    
#BLOCK_END
@TMP = READ_PARAMETER("COM_PATH/COM500.INI","Timeouts","net_init_start_delay")
#IF TMP:VSTATUS == 0 #THEN @NET_INIT_START_DELAY = DEC_SCAN(TMP:VVALUE)
@TMP = READ_PARAMETER("COM_PATH/COM500.INI","Timeouts","rex_select_execute_delay")
#IF TMP:VSTATUS == 0 #THEN @REX_SELECT_EXECUTE_DELAY = DEC_SCAN(TMP:VVALUE)
@TMP = READ_PARAMETER("COM_PATH/COM500.INI","Timeouts","database_initialisation_time")
#IF TMP:VSTATUS == 0 #THEN @DATABASE_INITIALISATION_TIME = DEC_SCAN(TMP:VVALUE)
@TMP = READ_PARAMETER("COM_PATH/COM500.INI","Timeouts","sta_object_status_check_timeout")
#IF TMP:VSTATUS == 0 #THEN @STA_OBJECT_STATUS_CHECK_TIMEOUT = DEC_SCAN(TMP:VVALUE)
@TMP = READ_PARAMETER("COM_PATH/COM500.INI","Timeouts","pending_indication_timeout")
#IF TMP:VSTATUS == 0 #THEN @PENDING_INDICATION_TIMEOUT = DEC_SCAN(TMP:VVALUE)
@TMP = READ_PARAMETER("COM_PATH/COM500.INI","Timeouts","cpi_selection_reset_time")
#IF TMP:VSTATUS == 0 #THEN @CPI_SELECTION_RESET_TIME = DEC_SCAN(TMP:VVALUE)
@TMP = READ_PARAMETER("COM_PATH/COM500.INI","Authorisation","station_lr_check_in_use")
#IF TMP:VSTATUS == 0 #THEN #BLOCK
   #IF UPPER_CASE(TMP:VVALUE) == "TRUE" #THEN @STATION_LR_CHECK_IN_USE = TRUE
   #ELSE_IF UPPER_CASE(TMP:VVALUE) == "FALSE" #THEN @STATION_LR_CHECK_IN_USE = FALSE    
#BLOCK_END    
@TMP = READ_PARAMETER("COM_PATH/COM500.INI","Authorisation","command_source_check_in_use")
#IF TMP:VSTATUS == 0 #THEN #BLOCK
   #IF UPPER_CASE(TMP:VVALUE) == "TRUE" #THEN @COMMAND_SOURCE_CHECK_IN_USE = TRUE
   #ELSE_IF UPPER_CASE(TMP:VVALUE) == "FALSE" #THEN @COMMAND_SOURCE_CHECK_IN_USE = FALSE
#BLOCK_END  
@TMP = READ_PARAMETER("COM_PATH/COM500.INI","Authorisation","hard_coded_sta_lr_object_ln")
#IF TMP:VSTATUS == 0 #THEN @HARD_CODED_STA_LR_OBJECT_LN  = TMP:VVALUE
@TMP = READ_PARAMETER("COM_PATH/COM500.INI","Authorisation","hard_coded_sta_lr_object_ix")
#IF TMP:VSTATUS == 0 #THEN @HARD_CODED_STA_LR_OBJECT_IX = DEC_SCAN(TMP:VVALUE)

@TMP = READ_PARAMETER("COM_PATH/COM500.INI","Timeouts","switch_over_net_init_delay")
#IF TMP:VSTATUS == 0 #THEN @SWITCH_OVER_NET_INIT_DELAY = DEC_SCAN(TMP:VVALUE)
@TMP = READ_PARAMETER("COM_PATH/COM500.INI","Timeouts","switch_over_db_init_time")
#IF TMP:VSTATUS == 0 #THEN @SWITCH_OVER_DB_INIT_TIME = DEC_SCAN(TMP:VVALUE)



;find station name from the OI attribute configuration
#ERROR IGNORE
@STATUS = STATUS
@APL_BSV15 = APL:BSV15
@PROCESSOBJECTS = APL_BSV15:VPROCESS_OBJECTS
@OI = PROCESSOBJECTS:VOI
@STATUS = STATUS
#ERROR CONTINUE
#IF %STATUS == 0 #THEN #BLOCK
   #LOOP_WITH I = 1..30
     #IF DATA_TYPE(OI:VLENGTH'I') == "INTEGER" #THEN #BLOCK  
        #IF OI:VLENGTH'I' > 0 #THEN #BLOCK  
           #IF LENGTH(SELECT(OI:VFIELD'I',"==""STA""")) > 0 #THEN #BLOCK        
              @STA_NAME_LENGTH = OI:VLENGTH'I'
              #LOOP_EXIT
           #BLOCK_END
           #ELSE @STA_NAME_START = %STA_NAME_START + OI:VLENGTH'I'
        #BLOCK_END
     #BLOCK_END
   #LOOP_END
#BLOCK_END
#ELSE #BLOCK
   @STA_NAME_START = 1
   @STA_NAME_LENGTH = 10
#BLOCK_END

;find all station L/R switch objects from the process database
#INIT_QUERY "A" IU == 1 AND RX == "%%%%%%%%%%%%%%%%%%%%%%ASTAILRS*"
                
;remove duplicates (by station name)
;collect logical names, indexes, station names (OI) and command sources (CX)
@J = 1
#LOOP
   @STA_LR_OBJECTS = PROD_QUERY(APL:BQL)
   #IF LENGTH(STA_LR_OBJECTS:VLN) > 0 #THEN #BLOCK
      #LOOP_WITH I = 1..(LENGTH(STA_LR_OBJECTS:VLN))
         @STA_NAME = SUBSTR(STA_LR_OBJECTS:VOI(%I),%STA_NAME_START,%STA_NAME_LENGTH)
         #IF LENGTH(SELECT(%STA_LR_OBJECT_STA_NAMES,"==%STA_NAME")) == 0 #THEN #BLOCK
            @LN = STA_LR_OBJECTS:VLN(%I)
            @IX = STA_LR_OBJECTS:VIX(%I)
            @STA_LR_OBJECT_LNS(%J) = %LN
            @STA_LR_OBJECT_IXS(%J) = %IX
            @STA_LR_OBJECT_STA_NAMES(%J) = %STA_NAME
            @STA_LR_OBJECT_CMD_SOURCES(%J) = SEPARATE('LN':PCX'IX',"/")
            @J = %J + 1
         #BLOCK_END
      #LOOP_END
   #BLOCK_END
   #IF END_QUERY #THEN #LOOP_EXIT
#LOOP_END

;collect info to a list and set to apl:bsv
#CREATE TMP_LIST:V = LIST(-
        MAX_NCC_COUNT                         = %MAX_NCC_COUNT,-
        UPSTREAM_XREF_TABLE_LENGTH            = %UPSTREAM_XREF_TABLE_LENGTH,-
        DOWNSTREAM_XREF_TABLE_LENGTH          = %DOWNSTREAM_XREF_TABLE_LENGTH,-
        SEND_GROUP_ALARMS_AT_STARTUP          = %SEND_GROUP_ALARMS_AT_STARTUP,-
        NET_INIT_START_DELAY                  = %NET_INIT_START_DELAY,-       
        REX_SELECT_EXECUTE_DELAY              = %REX_SELECT_EXECUTE_DELAY,-
        DATABASE_INITIALISATION_TIME          = %DATABASE_INITIALISATION_TIME,-
        STA_OBJECT_STATUS_CHECK_TIMEOUT       = %STA_OBJECT_STATUS_CHECK_TIMEOUT,-
        PENDING_INDICATION_TIMEOUT            = %PENDING_INDICATION_TIMEOUT,-
        CPI_SELECTION_RESET_TIME              = %CPI_SELECTION_RESET_TIME,-
        STATION_LR_CHECK_IN_USE               = %STATION_LR_CHECK_IN_USE,- 
        COMMAND_SOURCE_CHECK_IN_USE           = %COMMAND_SOURCE_CHECK_IN_USE,- 
        HARD_CODED_STA_LR_OBJECT_LN           = %HARD_CODED_STA_LR_OBJECT_LN,- 
        HARD_CODED_STA_LR_OBJECT_IX           = %HARD_CODED_STA_LR_OBJECT_IX,-  
        OI_STA_NAME_START                     = %STA_NAME_START,-
        OI_STA_NAME_LENGTH                    = %STA_NAME_LENGTH,-
        STA_LR_OBJECT_LNS                     = %STA_LR_OBJECT_LNS,-
        STA_LR_OBJECT_IXS                     = %STA_LR_OBJECT_IXS,-
        STA_LR_OBJECT_STA_NAMES               = %STA_LR_OBJECT_STA_NAMES,-
        STA_LR_OBJECT_CMD_SOURCES             = %STA_LR_OBJECT_CMD_SOURCES,-
        COM_DATABASE_INITIALISED              = %COM_DATABASE_INITIALISED,-
        RPSS_CMD_TYPE                         = %RPSS_CMD_TYPE,-        
        SWITCH_OVER_NET_INIT_DELAY            = %SWITCH_OVER_NET_INIT_DELAY,-
        SWITCH_OVER_DB_INIT_TIME              = %SWITCH_OVER_DB_INIT_TIME,-  
        COMTOOL_IN_USE_IN_MONITOR             = 0)

#SET APL:BSV(20) = %TMP_LIST

