OEXP
    C"16.0"
    C"Win 2.6" d: 6f d: 22575f8 d: 8321b88 d: 225a8d8 d: a d: 0
     d: fa d: 1 d: 1 d: 1 d: 0 d: 0
    C: 0 
O: 0x08321B88 9 192
O: 0x07CC0868 7 0 d: 8 d: 15
O: 0x083A16C0 21 128 d: f
O: 0x07D00BEC 15 128 d: 0 d: 0 1 1 0
    C"08 - PL_Equipment\Tank 1.sd" d: 0 d: 4
O: 0x00001F13 4 0 d: 2 d: 1 d: 0 d: 0 d: 0 d: 15
    
O: 0x083A1558 21 128 d: f
O: 0x07D00AB4 15 128 d: 0 d: 708 1 1 0
    C"00 - Common\Scale 0-100 - LED.sd" d: 0 d: 0 d: 2 d: 1 d: 0 d: 6
    C"default.mem"
    C"Value" d: 18
O: 0x082A0078 24 110 d: 224eea8 d: 1 d: 1 d: 1 d: 224cff0
    C: 0  d: 0 d: 7 d: 3 0 1 d: 1
     d: 0 d: 0 d: 0 d: 0 d: ffffff00
    C"Value" d: 0 d: 0
    C"default.mem"
    C"Status Color" d: 18
O: 0x082A0300 24 110 d: 224ef10 d: 1 d: 1 d: 1 d: 224d428
    C: 0  d: 0 d: 7 d: 3 0 1 d: 1
     d: 0 d: 0 d: 0 d: 0 d: ff0000ff
    C"Status Color" d: 0 d: 0
    C"default.mem"
    C"Low Alarm Limit" d: 18
O: 0x082A00D8 24 110 d: 224ef78 d: 1 d: 1 d: 1 d: 224cf18
    C: 0  d: 0 d: 7 d: 3 0 1 d: 1
     d: 0 d: 0 d: 0 d: 0 d: ff0000ff
    C"Low Alarm Limit" d: 0 d: 0
    C"default.mem"
    C"Low Warning Limit" d: 18
O: 0x082A0270 24 110 d: 224efe0 d: 1 d: 1 d: 1 d: 224d278
    C: 0  d: 0 d: 7 d: 3 0 1 d: 1
     d: 0 d: 0 d: 0 d: 0 d: ffff00ff
    C"Low Warning Limit" d: 0 d: 0
    C"default.mem"
    C"High Warning Limit" d: 18
O: 0x082A01B0 24 110 d: 224f048 d: 1 d: 1 d: 1 d: 224d788
    C: 0  d: 0 d: 7 d: 3 0 1 d: 1
     d: 0 d: 0 d: 0 d: 0 d: ff00ffff
    C"High Warning Limit" d: 0 d: 0
    C"default.mem"
    C"High Alarm Limit" d: 18
O: 0x082A03F0 24 110 d: 224f0b0 d: 1 d: 1 d: 1 d: 224d6b0
    C: 0  d: 0 d: 7 d: 3 0 1 d: 1
     d: 0 d: 0 d: 0 d: 0 d: ffffffff
    C"High Alarm Limit" d: 0 d: 0 d: 0 d: 11
O: 0x07D40518 17 128 d: f
O: 0x07D00268 15 128 d: fffff830 d: 1405 d: f
O: 0x07D003B8 15 128 d: fffff830 d: 1405 d: 0 d: 4
O: 0x0000FB13 4 0 d: 1 d: 1 d: 75 d: 0 d: 0 d: 11
    
O: 0x07D40368 17 128 d: f
O: 0x07D00280 15 128 d: fffff830 d: fffff9a7 d: f
O: 0x07D00808 15 128 d: fffff830 d: fffff9a7 d: 0 d: 4
O: 0x0000FB13 4 0 d: 1 d: 1 d: 75 d: 0 d: 0 d: 11
    
O: 0x07D40188 17 128 d: f
O: 0x07D006D0 15 128 d: 7d0 d: 1405 d: f
O: 0x07D00940 15 128 d: 7d0 d: 1405 d: 0 d: 4
O: 0x0000FB13 4 0 d: 1 d: 1 d: 75 d: 0 d: 0 d: 11
    
O: 0x07D40038 17 128 d: f
O: 0x07D00070 15 128 d: 7d0 d: fffff9a7 d: f
O: 0x07D001FC 15 128 d: 7d0 d: fffff9a7 d: 0 d: 4
O: 0x0000FB13 4 0 d: 1 d: 1 d: 75 d: 0 d: 0 d: 11
    
O: 0x07D40338 17 128 d: f
O: 0x07D00958 15 128 d: 0 d: 1770 d: f
O: 0x07D00B8C 15 128 d: 0 d: 1770 d: 0 d: 4
O: 0x0000FB13 4 0 d: 1 d: 1 d: 75 d: 0 d: 0 d: 11
    
O: 0x07D40308 17 128 d: f
O: 0x07D00C34 15 128 d: 0 d: fffff830 d: f
O: 0x07D00AE4 15 128 d: 0 d: fffff830 d: 0 d: 4
O: 0x0000FB13 4 0 d: 1 d: 1 d: 75 d: 0 d: 0 d: 0
     d: 4
O: 0x00001713 4 0 d: 22
O: 0x07D805B8 34 0
O: 0x08321B88 9 128 d: a d: 21
O: 0x021AA078 33 2
    C"V_CDVObjectInternals" d: 78 d: 0 d: 21
O: 0x021AA0A8 33 2
    C"ABB SA Symbols" d: 74
    C"v1.0" d: 21
O: 0x021AA0D8 33 105
    C"SAObjectType" d: 74
    C"Tank 1 Fill" d: 21
O: 0x021AA108 33 105
    C"SASuperType" d: 74
    C"Tank" d: 21
O: 0x021AA138 33 105
    C"DV_RULE_SCRIPT_NAME" d: 74
    C"\sc\prog\graphicsengine\etc\SYS600_scripts.bas" d: 21
O: 0x021AA6A8 33 105
    C"DV_RULE_SCRIPT" d: 74
    C: 12664 Attribute VB_Name = "ScriptComment"
' Scripting File for Implementing Custom Rule Actions and Conditions

' A rule action must be a subroutine. A rule condition must be a
' function that returns a Boolean. Note that "Boolean" is not in
' the command completion list of function return options, so you
' must explicitly type it in.

' The rule action and condition names in the script appear in the
' Display Builder rules tab "Execute Function In Script" combobox.
' You can also enter a new action or condition in the combobox.
' This adds a new subroutine or function stub to the script file.

' To prevent an action or condition name from appearing in the combobox,
' precede the subroutine or function with '*** USER DEFINED CODE START ***
' and follow it with '*** USER DEFINED CODE END ***

' Any number of functions and/or subroutines can be entered between
' these lines. You can use this technique multiple times, and anywhere
' in your script.

' Following predefined globals are provided:
'Dim theView As DVView        'the view object from which the rule was invoked
'Dim theObject As DVObject    'the graphical object (if any) that invoked the rule

' If SYS 600 is updated, you must merge your changes to the new version
' of this file. To ease the merging, comment your changes in the existing
' subs/functions and write your additional subs/functions either right after
' this line or to the end of this file.


'===========================================================================
'
'===========================================================================
Sub Dummy()
    '
End Sub


'===========================================================================
' Executes a program specified in public data variables of a subdrawing object.
' "Execute Button" uses this sub as an internal mouse click rule action.
'===========================================================================
Sub Execute()
    Dim dVar As DVMappedVar
    Dim exeFound As Boolean
    Dim argsFound As Boolean
    Dim executable As String
    Dim arguments As String
    
    'On Error GoTo ErrorHandler
    
    If theObject.view.IsInSubdrawing Then
        For Each dVar In theObject.view.Subdrawing.MappedVars
            If dVar.SubdrawingDataVar.Name = "Executable" Then
                exeFound = True
                executable = dVar.StringMapping
            ElseIf dVar.SubdrawingDataVar.Name = "Arguments" Then
                argsFound = True
                arguments = dVar.StringMapping
            End If
        Next dVar
    End If
    
    If Not exeFound Then
        MsgBox "Data variable 'Executable' not found.", 16, "SYS 600"
        Exit Sub
    ElseIf executable = "" Then
        MsgBox "No program to execute.", 16, "SYS 600"
        Exit Sub
    End If
    
    If argsFound Then
        Shell (executable & " " & arguments)
    Else
        Shell (executable)
    End If
    
    Exit Sub

'ErrorHandler:
    '
End Sub


'===========================================================================
' Executes a program specified in custom attributes of an object.
' Use this sub as a mouse click rule action for objects in a process display.
'===========================================================================
Sub ExecuteFromCustomAttribute()
    Dim i As Integer
    Dim exeFound As Boolean
    Dim argsFound As Boolean
    Dim executable As String
    Dim arguments As String
    
    'On Error GoTo ErrorHandler
    
    For i = 1 To theObject.CustomAttributes.Count
        If theObject.CustomAttributes(i).Name = "Executable" Then
             exeFound = True
             executable = theObject.CustomAttributes(i).Value

        ElseIf theObject.CustomAttributes(i).Name = "Arguments" Then
             argsFound = True
             arguments = theObject.CustomAttributes(i).Value
        End If
    Next i
    
    If Not exeFound Then
        MsgBox "Custom attribute 'Executable' not found.", 16, "SYS 600"
        Exit Sub
    ElseIf executable = "" Then
        MsgBox "No program to excecute.", 16, "SYS 600"
        Exit Sub
    End If
    
    If argsFound Then
        Shell (executable & " " & arguments)
    Else
        Shell (executable)
    End If
    
    Exit Sub

'ErrorHandler:
    '
End Sub


'===========================================================================
' This sub is used as a rule action for AfterAttach event.
' Display Builder adds the rule automatically when saving a process display
' containing a subdrawing that has "SAScriptAfterAttach" custom attribute
' key with value "OnAfterAttach".
'===========================================================================
Sub OnAfterAttach()
    SetMeasurementValueDecimals
End Sub

'===========================================================================
' This sub is used as a rule action for AfterAttach event for measurement
' value display.
'===========================================================================
Sub OnAfterAttachMeas()
    SetMeasurementMinMax
End Sub

'***************************************************************************
'***************************************************************************
'*** USER DEFINED CODE START ***


'===========================================================================
'
'===========================================================================
Sub Dummy2()
    '
End Sub


'===========================================================================
'
'===========================================================================
Sub Dummy3()
    '
End Sub


'===========================================================================
' Set the decimal amount in the text format of measurement values
'===========================================================================
Sub SetMeasurementValueDecimals()
    Dim obj As DVObject
    Dim sd As DVSubdrawing
    Dim sdObj As DVObject
    Dim dynFeature As DVDynamicFeature
    Dim txtDyn As DVTextDynamic
    
    'Dim startTime As Single
    'startTime = Timer
    
    For Each obj In theView.Objects
        If obj.ObjectType = 21 Then 'dvotSubdrawing
            Set sd = obj
            
            If sd.SubdrawingView.CustomAttributes.HasName("SAObjectType") Then
                If sd.SubdrawingView.CustomAttributes("SAObjectType").Value = "Measurement Value" Then
                    If Not sd.MappedVars(4).ViewDataVar Is Nothing Then 'Decimals
                        For Each sdObj In sd.SubdrawingView.Objects
                            If sdObj.Name = "Value Text" Then
                                For Each dynFeature In sdObj.DynamicFeatureSet.DynamicFeatures
                                    If dynFeature.DynamicType = 44 Then 'dvftText
                                        Set txtDyn = dynFeature
                                        txtDyn.OutputTextFormat = _
                                            "%1." & Abs(CInt(sd.MappedVars(4).DoubleMapping)) & "f"
                                        Set txtDyn = Nothing
                                        sdObj.Erase
                                        sdObj.Draw
                                    End If
                                Next dynFeature
                            End If
                        Next sdObj
                    End If
                End If
            End If
            
            Set sd = Nothing
        End If
    Next obj
    
    'MsgBox (Timer - startTime)
End Sub


'===========================================================================
' Set the decimal amount in the text format of measurement values
'===========================================================================
Sub SetMeasurementMinMax()
    Dim obj As DVObject
    Dim sd As DVSubdrawing
    Dim sdObj As DVObject
    Dim dynFeature As DVDynamicFeature
    Dim InOutDyn As DVBasicDynamic
    
    'Dim startTime As Single
    'startTime = Timer
    
    MsgBox "TEST", 16, "SYS 600"

    For Each obj In theView.Objects
        If obj.ObjectType = 21 Then 'dvotSubdrawing
            Set sd = obj
            
            If sd.SubdrawingView.CustomAttributes.HasName("SAObjectType") Then
                If sd.SubdrawingView.CustomAttributes("SAObjectType").Value = "Level Indicator" Then
                    If ((Not sd.MappedVars(2).ViewDataVar Is Nothing) And _
                        (Not sd.MappedVars(2).ViewDataVar Is Nothing)) Then 'Min/Max Values
                        For Each sdObj In sd.SubdrawingView.Objects
                            If sdObj.Name = "FillLevel" Then
                                For Each dynFeature In sdObj.DynamicFeatureSet.DynamicFeatures
                                    If dynFeature.DynamicType = 41 Then 'dvftFillUp
                                        dynFeature.InputLowerBound = 10
                                        dynFeature.InputUpperBound = 90
                                        sdObj.Erase
                                        sdObj.Draw
                                    End If
                                Next dynFeature
                            End If
                        Next sdObj
                    End If
                End If
            End If
            
            Set sd = Nothing
        End If
    Next obj
    
    'MsgBox (Timer - startTime)
End Sub

'*** USER DEFINED CODE END ***
'***************************************************************************
'***************************************************************************


'***************************************************************************
' Example subs how to use MFC controls.
'
' Following Display Builder's MFC control types can be accessed simply by
' using rules and/or VBA script:
' - Push Button
' - Check Box
' - Radio Button
' - Combo Box
' - Group Box
' - Edit Field
' - Text Field
' The rest of the types are available in Display Builder but cannot be
' accessed without lower level programming.
' See \sc\prog\graphicsEngine\lib\views\MFCExample.v
'***************************************************************************
'*** USER DEFINED CODE START ***


'===========================================================================
' This sub is used as a rule action for AfterReadData event.
'===========================================================================
Sub SetMFCExampleProperties()
    On Error GoTo ErrorHandler
    
    If theView.Comment = "failed" Then Exit Sub
    
    Dim state As Integer
    Dim btn As DVMFCControl
    Dim radio1 As DVMFCControl
    Dim radio2 As DVMFCControl
    Dim check1 As DVMFCControl
    Dim static1 As DVMFCControl
    Dim static2 As DVMFCControl
    Dim edit1 As DVMFCControl
    
    state = theView.DataSources(1).DataVars(1).GetValue(0, 0)
    Set btn = theView.Objects("PushButton1")
    Set radio1 = theView.Objects("Radio1")
    Set radio2 = theView.Objects("Radio2")
    Set check1 = theView.Objects("Check1")
    Set static1 = theView.Objects("Static1")
    Set static2 = theView.Objects("Static2")
    Set edit1 = theView.Objects("Edit1")
    
    If state = 1 Then
        btn.ShowWindow 1
        radio1.CheckMark = 0
        radio2.CheckMark = 1
        check1.CheckMark = 1
        static1.WindowText = "Value in MicroSCADA: 2"
    ElseIf state = 2 Then
        btn.ShowWindow 1
        radio1.CheckMark = 1
        radio2.CheckMark = 0
        check1.CheckMark = 0
        static1.WindowText = "Value in MicroSCADA: 1"
    Else
        btn.ShowWindow 0
        radio1.CheckMark = 0
        radio2.CheckMark = 0
        check1.CheckMark = 0
        static1.WindowText = "Value in MicroSCADA: " & state
    End If
    
    static2.WindowText = "Value in SA Symbol: " & state
    edit1.WindowText = theView.DataSources(1).DataVars(3).GetStringValue(0, 0)
    Set btn = Nothing
    Set radio1 = Nothing
    Set radio2 = Nothing
    Set check1 = Nothing
    Set static1 = Nothing
    Set static2 = Nothing
    Set edit1 = Nothing
    Exit Sub

ErrorHandler:
    theView.Comment = "failed"
    MsgBox "SetMFCExampleProperties failed."
End Sub


'===========================================================================
' This sub is used as a rule action for CBN_SELCHANGE event.
'===========================================================================
Sub OnCbnSelChange()
    Dim combo As DVMFCControl
    Set combo = theObject
    MsgBox combo.WindowText, 16, "SYS 600"
    Set combo = Nothing
End Sub


'*** USER DEFINED CODE END ***
'***************************************************************************
'***************************************************************************


 d: 21
O: 0x021AA168 33 105
    C"DV_SEARCH_PATH" d: 74
    C"C:\SC\APL\PIPELINE\PICT;C:\SC\APL\PIPELINE\AplMod4\Palette;C:\sc\prog\graphicsengine\Palette;C:\sc\prog\graphicsengine\etc;C:\sc\prog\graphicsengine\lib;C:\sc\prog\graphicsengine\lib\views;C:\sc\prog\graphicsengine\lib\fonts;C:\sc\prog\graphicsengine\lib\Templates;C:\sc\prog\graphicsengine\lib\templates\drawings;C:\sc\prog\graphicsengine\support" d: 21
O: 0x021AA198 33 1
    C"DV_SA_REV_INFO" d: 74
    C"1" d: 21
O: 0x021AA1C8 33 105
    C"SATopology" d: 74
    C: -1  d: 21
O: 0x021AA258 33 105
    C"SAOpenVSCILOnClickVso" d: 74
    C"B5_USE/BPU_DLG_ENG.VSO@1MAIN@2@31SGTS:-1" d: 8
O: 0x083A16C0 21 128
    C"Tank 1"
O: 0x07D40518 17 128
    C"Hotspot1"
O: 0x07D40368 17 128
    C"Hotspot2"
O: 0x07D40188 17 128
    C"Hotspot3"
O: 0x07D40038 17 128
    C"Hotspot4"
O: 0x07D40338 17 128
    C"Hotspot5"
O: 0x07D40308 17 128
    C"Hotspot6"
O: 0x083A1558 21 128
    C"Scale 0-100 - LED" d: de d: 225a8d8 d: 2217160 d: 14d d: 2217160 d: 0
     d: 6 d: 3
    C"default.mem" d: 0 d: 0 d: 0 d: 0 d: 2 d: 224cff0
     d: 225a8d8 d: 0 d: 0
    C: 0  d: 0 d: 0 d: 1bc d: 224cff0 d: 224d428
    C"%f" 0 d: 1 d: 1 d: 1
    C"Value" d: 225a6e0 d: 2217160 d: 2 d: 0 d: 0 d: 0
     d: 22b d: 225a6e0 d: 0 d: 0 d: 224eea8 d: 1bc d: 224d428
     d: 224cf18
    C"%f" 0 d: 1 d: 1 d: 1
    C"Status Color" d: 225a8a8 d: 2217160 d: 2 d: 0 d: 0 d: 0
     d: 22b d: 225a8a8 d: 0 d: 0 d: 224ef10 d: 1bc d: 224cf18
     d: 224d278
    C"%f" 0 d: 1 d: 1 d: 1
    C"Low Alarm Limit" d: 225ac98 d: 2217160 d: 2 d: 0 d: 0 d: 0
     d: 22b d: 225ac98 d: 0 d: 0 d: 224ef78 d: 1bc d: 224d278
     d: 224d788
    C"%f" 0 d: 1 d: 1 d: 1
    C"Low Warning Limit" d: 225a7a0 d: 2217160 d: 2 d: 0 d: 0 d: 0
     d: 22b d: 225a7a0 d: 0 d: 0 d: 224efe0 d: 1bc d: 224d788
     d: 224d6b0
    C"%f" 0 d: 1 d: 1 d: 1
    C"High Warning Limit" d: 21f8fd0 d: 2217160 d: 2 d: 0 d: 0 d: 0
     d: 22b d: 21f8fd0 d: 0 d: 0 d: 224f048 d: 1bc d: 224d6b0
     d: 0
    C"%f" 0 d: 1 d: 1 d: 1
    C"High Alarm Limit" d: 21f8eb0 d: 2217160 d: 2 d: 0 d: 0 d: 0
     d: 22b d: 21f8eb0 d: 0 d: 0 d: 224f0b0 d: 0
