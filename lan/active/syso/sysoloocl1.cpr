; LOOP PROCEDURE PACKAGE PART 1
; 
; REVISION HISTORY :
;  19.10.94   LOOP1TEXT REMOVED FROM PACKAGE, SCAN TIME WRITE CORRECTED
;  25.10.94   LOOPINIDAT MADE MORE EFFICIENT
;  02.12.94   DELAYS IN LOOPAUTREC AND LOOPMANREC USING PARAMETERS
              LOOPCORESU: LOOP_CONST RUN CONDITIONALLY
;  12.09,95   LOOPCORESU : DCDSACTIVE AND LOOPSINUSE INITIALIZED AND
                  ONLY_ONE_NET_RUNNING CASE SUPPORTED

LOOPAUTREC:C
; LOOPAUTREC:C - AUTOMATIC RECONFIGURATION V 930630_1

#SET LOOPTEST:P'LOOPNUMB'=11 
#ERROR CONTINUE
@OLDTI = TIMEOUT(%LPTIMEOUT)
; FIND SUSPENDED STATIONS
@FIRST = 0
@I = 0
#LOOP_WITH J = 1 .. %RTUMAX
  @INUSE = TRUNC( LOOP'LOOPNUMB'IUSE:DOV'J' )
  #IF (%INUSE == 1) #THEN #BLOCK
    @X = TRUNC( LOOP'LOOPNUMB'LNUM:DOV'J')
    @TP = TRUNC('RTU_SMO''X':POV1)
    #IF (%TP==%RTUSUSPEND) OR (%TP==%NOCTS1) OR (%TP==%NOCTS2) #THEN #BLOCK
       #IF %FIRST == 0 #THEN @FIRST = %J
       @LAST = %J
    #BLOCK_END
  #BLOCK_END
#LOOP_END

#IF %FIRST == 0 #THEN @RESULT = %NO_CHANGE
#ELSE #BLOCK                              
  @FIDIR = TRUNC(LOOP'LOOPNUMB'PDIR:DOV'FIRST')
  @LADIR = TRUNC(LOOP'LOOPNUMB'PDIR:DOV'LAST')
  #IF %FIDIR <> %LADIR #THEN @RESULT = %FAILED ; SUSPENDED ON BOTH SIDES
  #ELSE #BLOCK

; SET NEW BREAKPOINTS
   #IF  %FIDIR == %A_SIDE #THEN #BLOCK
      @A_BREAK = %FIRST-1
      @B_BREAK = %FIRST
   #BLOCK_END
   #ELSE #BLOCK
      @A_BREAK = %LAST
      @B_BREAK = %LAST+1
   #BLOCK_END


   @SENDCONF = 0
; CREATE A-SIDE CONFIGURATION VECTOR
   @INX = 1
   #LOOP_WITH I = 1 .. %RTUMAX
    #IF (LOOP'LOOPNUMB'IUSE:DOV'I' == 1) #THEN #BLOCK
      @SENDCONF = 1
      @ACONFIG(%INX) = TRUNC(LOOP'LOOPNUMB'LNUM:DOV'I')
      @J = TRUNC(LOOP'LOOPNUMB'LNUM:DOV'I')
      #IF %I <= %A_BREAK #THEN #BLOCK
         @ACONFIG(%INX+1) = 1
         #SET LOOP'LOOPNUMB'PDIR:DOV'I' = %A_SIDE
         #SET LOOP'LOOPNUMB'CLOS:DOV'I' = %CLOSED
         @LAST = %I
      #BLOCK_END                
      #ELSE @ACONFIG(%INX+1) = 0
      @INX = %INX + 2
    #BLOCK_END
   #LOOP_END
   #SET LOOP'LOOPNUMB'CLOS:DOV'LAST' = %OPEN    

; CREATE B-SIDE CONFIGURATION VECTOR
   @INX = 1
   #LOOP_WITH I = 1 .. %RTUMAX
    @B = %RTUMAX-%I+1
    #IF (LOOP'LOOPNUMB'IUSE:DOV'B' == 1) #THEN #BLOCK
      @BCONFIG(%INX) = TRUNC(LOOP'LOOPNUMB'LNUM:DOV'B')
      @J = TRUNC(LOOP'LOOPNUMB'LNUM:DOV'B')
      #IF %B >= %B_BREAK #THEN #BLOCK
        @BCONFIG(%INX+1) = 1
        #SET LOOP'LOOPNUMB'PDIR:DOV'B' = %B_SIDE
        #SET LOOP'LOOPNUMB'CLOS:DOV'B' = %CLOSED
        @LAST = %B
      #BLOCK_END                
      #ELSE @BCONFIG(%INX+1) = 0
      @INX = %INX + 2
    #BLOCK_END
   #LOOP_END
   #SET LOOP'LOOPNUMB'CLOS:DOV'LAST' = %OPEN    

 #IF %SENDCONF == 1 #THEN #BLOCK

; RESET CONFIGURATION RESULT MSG COUNTER
   #SET LOOPREPCNT:DOV'LOOPNUMB' = 0

  ; STOP ANY BREAKDOWN OR BUILDUP
   @ANETLS = 9
   @ANETLS = NET'A_NET':SLS'A_LIN' 
   #CASE %ANETLS
      #WHEN    1    #SET NET'A_NET':SBO'A_LIN' = 0
      #WHEN    2    #SET NET'A_NET':SBU'A_LIN' = 0
   #CASE_END
   @BNETLS = NET'B_NET':SLS'B_LIN' 
   #CASE %BNETLS
      #WHEN    1    #SET NET'B_NET':SBO'B_LIN' = 0
      #WHEN    2    #SET NET'B_NET':SBU'B_LIN' = 0
   #CASE_END

  ; SEND CONFIGURATION VECTORS
   #SET NET'A_NET':SCF'A_LIN' = %ACONFIG 
   #SET NET'B_NET':SCF'B_LIN' = %BCONFIG

   @LEN = LENGTH( %ACONFIG )
   @I = 1
   #LOOP (%I < %LEN )
     #IF (%ACONFIG(%I+1) > 0 ) #THEN #BLOCK
        @J = %ACONFIG(%I)
        #SET STA'J':BND = TRUNC(LOOP_ANET:DOV'LOOPNUMB')
     #BLOCK_END
     #IF (%BCONFIG(%I+1) > 0) #THEN #BLOCK
        @J = %BCONFIG(%I)
        #SET STA'J':BND = TRUNC(LOOP_BNET:DOV'LOOPNUMB')
     #BLOCK_END
     @I = %I + 2
   #LOOP_END

   #SET NET'A_NET':SIU'A_LIN' = 0
   #SET NET'B_NET':SIU'B_LIN' = 0
   #PAUSE %AUTOPAUSE1
   #SET NET'A_NET':SIU'A_LIN' = 1
   #SET NET'B_NET':SIU'B_LIN' = 1
   #PAUSE %AUTOPAUSE2
   #SET NET'A_NET':SMT'A_LIN' = TRUNC(LOOP_STIM:D(%LOOPNUMB))
   #SET NET'A_NET':SBU'A_LIN' = 1
   #SET NET'B_NET':SMT'B_LIN' = TRUNC(LOOP_STIM:D(%LOOPNUMB))
   #SET NET'B_NET':SBU'B_LIN' = 1       
   @RESULT = %OK_CHANGE
   #SET LOOPAUTDON:DOV'LOOPNUMB' = 1
  #BLOCK_END
 #BLOCK_END
#BLOCK_END
END


LOOPCHKLIN:C
;LOOPCHKLIN:C - CHK LINE AND RTU STATUS MSG OBJECTS

#DO LOOP_CONST:C

#CREATE V:V
#SET V:VIU = 1
#SET V:VSS = 2
#SET V:VAE = 1
#SET V:VAA = 2
#SET V:VAF = 1
#SET V:VHE = 1
#SET V:VHA = 2
#SET V:VHF = 1
#SET V:VPT = 9
#SET V:VSN = "1_1"
#LOOP_WITH I = 1..%LOOPMAX
  @ALIN = TRUNC(LOOP_ALIN:DOV'I')
  @ANET = TRUNC(LOOP_ANET:DOV'I')
  @BLIN = TRUNC(LOOP_BLIN:DOV'I')
  @BNET = TRUNC(LOOP_BNET:DOV'I')
  #IF ((%ALIN>0) AND (%ANET>0) AND (%BLIN>0) AND (%BNET>0)) #THEN #BLOCK
    #SET V:VAN = "LOOPCORESU"
    #SET V:VFI = %I
    #SET V:VMT = LOOP_STIM:DOV'I'
;A_SIDE
    @ADDR = 6000 + 100 * %ANET + %ALIN
    @POBJ = PHYS_FETCH( 0, 0, %ADDR)
    #IF (POBJ:VIU == -1) #THEN #BLOCK
      #SET V:VOA = %ADDR
      #CREATE 'NETN''ANET''LINN':P'ALIN' = %V
      #DELETE V:VOA
    #BLOCK_END
    #ELSE #BLOCK              
      @PNAME = POBJ:VLN
      @PIX = POBJ:VIX
      #MODIFY 'PNAME':P'PIX' = %V
    #BLOCK_END
;B_SIDE
    @ADDR = 6000 + 100 * %BNET + %BLIN
    @POBJ = PHYS_FETCH( 0, 0, %ADDR)
    #IF (POBJ:VIU == -1) #THEN #BLOCK
      #SET V:VOA = %ADDR
      #CREATE 'NETN''BNET''LINN':P'BLIN' = %V
      #DELETE V:VOA
    #BLOCK_END
    #ELSE #BLOCK                 
      @PNAME = POBJ:VLN
      @PIX = POBJ:VIX
      #MODIFY 'PNAME':P'PIX' = %V
    #BLOCK_END

; CHECK RTU STATUS MSG OBJECTS
    #LOOP_WITH K = 1..%RTUMAX
      #IF LOOP'I'DUSE:DOV'K' > 0 #THEN #BLOCK
        @RTU = TRUNC( LOOP'I'LNUM:DOV'K' )
        @ADDR = 8000 + %RTU
        #SET V:VAN = "LOOP_TERMS"
        @POBJ = PHYS_FETCH( 0, 0, %ADDR )
        #IF (POBJ:VIU == -1) #THEN #BLOCK
          #SET V:VOA = %ADDR
          #CREATE 'RTU_SMO''RTU':P1 = %V
          #DELETE V:VOA
        #BLOCK_END
        #ELSE #BLOCK
          @PNAME = POBJ:VLN
          @PIX = POBJ:VIX
          #MODIFY 'PNAME':P'PIX' = %V
        #BLOCK_END
      #BLOCK_END
    #LOOP_END
  #BLOCK_END
#LOOP_END
END


LOOPCORESU:C

; HANDLE_CONFIGURATION_RESULT_MESSAGE: LOOPCORESU:C
#IF %AI== 'LN':POV'IX' #THEN #BLOCK
  #DO LOOP_CONST:C
  @OLDTI = TIMEOUT(%LPTIMEOUT)
  @LOOPNUMB = 'LN':PFI'IX'
  #CASE %AI
   #WHEN %RECONF_OK #BLOCK
      #SET LOOPREPCNT:DOV'LOOPNUMB' = LOOPREPCNT:DOV'LOOPNUMB' + 1
      #IF LOOPREPCNT:DOV'LOOPNUMB' == 2 #THEN #BLOCK
        @SIGNAL = %CONFIG_OK
        #LOOP_WITH RTUIX = 1..%RTUMAX
          #IF %SIGNAL==%CONFIG_OK #THEN #BLOCK
           #IF LOOP'LOOPNUMB'IUSE:DOV(%RTUIX) == 1 #THEN #BLOCK
            @RTUNR=TRUNC(LOOP'LOOPNUMB'LNUM:DOV(%RTUIX))
            @OV=RTU'RTUNR':POV1
            #IF %OV==%RTUSUSPEND OR %OV==%NOCTS1 OR %OV==%NOCTS2 #THEN #BLOCK
             @SIGNAL=%CONFIGFAIL
            #BLOCK_END
           #BLOCK_END
          #BLOCK_END            
        #LOOP_END
        #EXEC LOOP_CTRL'LOOPNUMB':C (@LOOPNUMB=%LOOPNUMB, @SIGNAL=%SIGNAL)
        #SET LOOPREPCNT:DOV'LOOPNUMB' = 0
      #BLOCK_END
   #BLOCK_END
   #WHEN %RECONFAIL #BLOCK
    #EXEC LOOP_CTRL'LOOPNUMB':C (@LOOPNUMB=%LOOPNUMB, @SIGNAL=%CONFIGFAIL)
    #SET LOOPREPCNT:DOV'LOOPNUMB' = 0
   #BLOCK_END
   #WHEN 0 #BLOCK
      @A_NET = TRUNC(LOOP_ANET:D(%LOOPNUMB))
      @B_NET = TRUNC(LOOP_BNET:D(%LOOPNUMB))
      @A_LIN = TRUNC(LOOP_ALIN:D(%LOOPNUMB))
      @B_LIN = TRUNC(LOOP_BLIN:D(%LOOPNUMB))

; IF PREVENT_RECONN
      @DCDSACTIVE = 0
      @LOOPSINUSE = 0
      #ERROR IGNORE
      @DCDSACTIVE = NET'A_NET':SSG(100*%A_LIN+8) + NET'B_NET':SSG(100*%B_LIN+8)
      @LOOPSINUSE = NET'A_NET':SLU'A_LIN' + NET'B_NET':SLU'B_LIN'
      #ERROR STOP
      #IF (%DCDSACTIVE < 2) OR (%LOOPSINUSE < 2) #THEN #BLOCK 
; END_IF PREVENT_RECONN
        #EXEC LOOP_CTRL'LOOPNUMB':C (@LOOPNUMB=%LOOPNUMB, @SIGNAL=%INIT)
        #SET LOOPREPCNT:DOV'LOOPNUMB' = 0
; IF PREVENT_RECONN
      #BLOCK_END
; END_IF PREVENT_RECONN

   #BLOCK_END
  #CASE_END
#BLOCK_END
END


LOOPCREATE:C
#ERROR CONTINUE
#DO LOOP_CONST:C
#CREATE V:V

; THE COMMON DATALOG OBJECTS FOR ALL LOOPS
#SET V:VLF=0
#SET V:VHR=%LOOPMAX
#SET V:VLR=%LOOPMAX
#SET V:VIU=1
@COMMON_DOBJ = ("LOOP_ANET","LOOP_ALIN","LOOP_ABRK","LOOP_BNET","LOOP_BLIN", -
"LOOP_BBRK","LOOP_CTIM","LOOP_BTIM","LOOP_STIM","LOOP_NUMS","LOOP_STAT", -
"LOOP_AUTO","LOOPAUTDON","LOOP_ALARM","LOOPREPCNT")
#LOOP_WITH O_IND = 1..LENGTH(%COMMON_DOBJ)
   @O_NAME = %COMMON_DOBJ(%O_IND)
   @SYSTAT = STATUS
   #CREATE 'O_NAME':D = %V
   @SYSTAT = STATUS
   #IF %SYSTAT == 1090 #THEN #MODIFY 'O_NAME':D = %V
#LOOP_END

; THE SEPARATE DATALOG OBJECTS FOR EACH LOOP
@LOOP_OBJ = ("LNUM","PDIR","DDIR","CLOS","DLOS","IUSE","DUSE","NNAM")
#LOOP_WITH I = 1..%LOOPMAX
  #SET V:VHR = 16               
  #SET V:VLR = 16                
  #LOOP_WITH O_IND = 1..LENGTH(%LOOP_OBJ)
     @O_NAME = %LOOP_OBJ(%O_IND)
     @SYSTAT = STATUS
     #CREATE LOOP'I''O_NAME':D = %V
     @SYSTAT = STATUS
     #IF %SYSTAT == 1090 #THEN #MODIFY LOOP'I''O_NAME':D = %V
  #LOOP_END
#LOOP_END

; CREATE EVENT CHANNELS
#CREATE E:V

#SET E:VON = "LOOPTIMOUT"
#SET E:VOT = "C"
@SYSTAT = STATUS
#CREATE LOOPTIMOUT:A = %E
@SYSTAT = STATUS
#IF %SYSTAT == 1065 #THEN #MODIFY LOOPTIMOUT:A = %E

#SET E:VON = "LOOP_TERMS"
#SET E:VOT = "C"
@SYSTAT = STATUS
#CREATE LOOP_TERMS:A = %E
@SYSTAT = STATUS
#IF %SYSTAT == 1065 #THEN #MODIFY LOOP_TERMS:A = %E

#SET E:VON = "LOOPCNFRES"
#SET E:VOT = "C"
@SYSTAT = STATUS
#CREATE LOOPCNFRES:A = %E
@SYSTAT = STATUS
#IF %SYSTAT == 1065 #THEN #MODIFY LOOPCNFRES:A = %E

; CREATE PROCESS OBJECTS
#CREATE P:V

#SET P:VPT = 9
#SET P:VSN = "1_1"
#SET P:VSS = 2
#SET P:VIU = 1
#SET P:VAA = 0
#SET P:VAE = 1

#LOOP_WITH I = 1 .. %LOOPMAX
  #SET P:VIX = %I
  @SYSTAT = STATUS
  #CREATE LOOPTEST:P'I' = %P
  @SYSTAT = STATUS
  #IF STATUS == 1090 #THEN #MODIFY LOOPTEST:P'I' = %P
#LOOP_END

#SET P:VPT = 9
#SET P:VAI = 3.0
#SET P:VSN = "1_1"
#SET P:VHI = 4.0
#SET P:VLI = 2.0
#SET P:VSS = 2
#SET P:VIU = 1
#SET P:VSZ = 1
#SET P:VAA = 0
#SET P:VAE = 1
#SET P:VAC = 1
#SET P:VAF = 0
#SET P:VAN = "LOOPTIMOUT"
#SET P:VHE = 0

#LOOP_WITH I = 1 .. %LOOPMAX
  #SET P:VIX = %I
  @SYSTAT = STATUS
  #CREATE LOOP_TIMER:P'I' = %P
  @SYSTAT = STATUS
  #IF STATUS == 1090 #THEN #MODIFY LOOP_TIMER:P'I' = %P
#LOOP_END

END


LOOPDELETE:C

;DELETES ALL LOOP RELATED DATALOG OBJECTS
#DO LOOP_CONST:C
#ON ERROR #BLOCK
  #IF STATUS <> 1055 #THEN #ERROR RAISE
#BLOCK_END
#ERROR CONTINUE

@COMMON_DOBJ = ("LOOP_ANET","LOOP_ALIN","LOOP_ABRK","LOOP_BNET","LOOP_BLIN", -
"LOOP_BBRK","LOOP_CTIM","LOOP_BTIM","LOOP_STIM","LOOP_NUMS","LOOP_STAT", -
"LOOP_AUTO","LOOPAUTDON","LOOP_ALARM","LOOPREPCNT")
#LOOP_WITH O_IND = 1..LENGTH(%COMMON_DOBJ)
   @O_NAME = %COMMON_DOBJ(%O_IND)
   #DELETE 'O_NAME':D
#LOOP_END

@LOOP_OBJ = ("LNUM","PDIR","DDIR","CLOS","DLOS","IUSE","DUSE","NNAM")
#LOOP_WITH I = 1..%LOOPMAX
  #LOOP_WITH J = 1..LENGTH(%LOOP_OBJ)
     @O_NAME = %LOOP_OBJ(%J)
     #DELETE LOOP'I''O_NAME':D
  #LOOP_END
#LOOP_END

END


LOOPINIDAT:C

#ERROR CONTINUE
#DO LOOP_CONST:C
#CREATE V:V
#SET V:VLF=0
#SET V:VHR=%LOOPMAX
#SET V:VLR=%LOOPMAX
#SET V:VIU=1

@COMMON_DOBJ = ("LOOP_ANET","LOOP_ALIN","LOOP_ABRK","LOOP_BNET","LOOP_BLIN", -
"LOOP_BBRK","LOOP_CTIM","LOOP_BTIM","LOOP_STIM","LOOP_NUMS","LOOP_STAT", -
"LOOP_AUTO","LOOPAUTDON","LOOP_ALARM","LOOPREPCNT")
#LOOP_WITH O_IND = 1..LENGTH(%COMMON_DOBJ)
   @O_NAME = %COMMON_DOBJ(%O_IND)
   @X = FETCH( 0,"D","'O_NAME'")
   #IF (X:VIU == -1) #THEN #BLOCK
     #CREATE 'O_NAME':D = %V
     #SET 'O_NAME':DOV(1..%LOOPMAX) = 0
   #BLOCK_END
#LOOP_END

#LOOP_WITH I = 1..%LOOPMAX
  #SET V:VHR = %RTUMAX
  #SET V:VLR = %RTUMAX

  @LOOP_OBJ = ("LNUM","PDIR","DDIR","CLOS","DLOS","IUSE","DUSE","NNAM")
  #LOOP_WITH O_IND = 1..LENGTH(%LOOP_OBJ)
     @O_NAME = %LOOP_OBJ(%O_IND)
     @X = FETCH ( 0,"D","LOOP'I''O_NAME'")
     #IF (X:VIU == -1) #THEN #BLOCK
       #CREATE LOOP'I''O_NAME':D = %V
       #SET LOOP'I''O_NAME':DOV(1..%RTUMAX) = 0
     #BLOCK_END
  #LOOP_END

#LOOP_END

END


LOOPINIOTH:C

#ERROR CONTINUE
#DO LOOP_CONST:C

; CREATE EVENT CHANNELS
#CREATE E:V
#SET E:VOT = "C"

@X = FETCH ( 0,"A", "LOOPTIMOUT")
#IF (X:VIU == -1) #THEN #BLOCK
  #SET E:VON = "LOOPTIMOUT"
  #CREATE LOOPTIMOUT:A = %E
#BLOCK_END

@X = FETCH ( 0,"A", "LOOP_TERMS")
#IF (X:VIU == -1) #THEN #BLOCK
  #SET E:VON = "LOOP_TERMS"
  #CREATE LOOP_TERMS:A = %E
#BLOCK_END

@X = FETCH ( 0,"A", "LOOPCORESU")
#IF (X:VIU == -1) #THEN #BLOCK
  #SET E:VON = "LOOPCORESU"
  #CREATE LOOPCORESU:A = %E
#BLOCK_END

END


LOOPMANREC:C
#SET LOOPTEST:P'LOOPNUMB'=13 
@OLDTI = TIMEOUT(%LPTIMEOUT)
#ERROR CONTINUE
; LOOPMANREC:C - MANUAL RECONFIGURATION

@SENDCONF = 0

; CREATE A-SIDE CONFIGURATION VECTOR
@INX = 1
#LOOP_WITH I = 1 .. %RTUMAX
 #IF (LOOP'LOOPNUMB'IUSE:DOV'I' == 1) #THEN #BLOCK
   @SENDCONF = 1
   @ACONFIG(%INX) = TRUNC(LOOP'LOOPNUMB'LNUM:DOV'I')
   @J = TRUNC(LOOP'LOOPNUMB'LNUM:DOV'I')
   #IF LOOP'LOOPNUMB'PDIR:DOV'I' == %A_SIDE #THEN #BLOCK
      @Z = %INX+1                                          
      @ACONFIG(%INX+1) = 1
   #BLOCK_END
   #ELSE #BLOCK
      @A_BREAK = %I-1
      @ACONFIG(%INX+1) = 0
   #BLOCK_END
   @INX = %INX + 2
 #BLOCK_END
#LOOP_END

; CREATE B-SIDE CONFIGURATION VECTOR
@INX = 1
#LOOP_WITH I = 1 .. %RTUMAX
 @B = %RTUMAX-%I+1
 #IF (LOOP'LOOPNUMB'IUSE:DOV'B' == 1) #THEN #BLOCK
   @BCONFIG(%INX) = TRUNC(LOOP'LOOPNUMB'LNUM:DOV'B')
   @J = TRUNC(LOOP'LOOPNUMB'LNUM:DOV'B')
   #IF LOOP'LOOPNUMB'PDIR:DOV'B' == %B_SIDE #THEN #BLOCK
      @BCONFIG(%INX+1) = 1
   #BLOCK_END
   #ELSE #BLOCK
      @B_BREAK = %I-1
      @BCONFIG(%INX+1) = 0
   #BLOCK_END
   @INX = %INX + 2
 #BLOCK_END
#LOOP_END


#IF %SENDCONF == 1 #THEN #BLOCK

  ; RESET CONFIGURATION RESULT MSG COUNTER
  #SET LOOPREPCNT:DOV'LOOPNUMB' = 0

  ; STOP ANY BREAKDOWN OR BUILDUP
  @ANETLS = 9
  @ANETLS = NET'A_NET':SLS'A_LIN' 
  #CASE %ANETLS
     #WHEN    1    #SET NET'A_NET':SBO'A_LIN' = 0
     #WHEN    2    #SET NET'A_NET':SBU'A_LIN'=0
  #CASE_END
  @BNETLS = NET'B_NET':SLS'B_LIN' 
  #CASE %BNETLS
     #WHEN    1    #SET NET'B_NET':SBO'B_LIN' = 0
     #WHEN    2    #SET NET'B_NET':SBU'B_LIN'=0
  #CASE_END

  ; SEND CONFIGURATION VECTORS
  #SET NET'A_NET':SCF'A_LIN' = %ACONFIG
  #SET NET'B_NET':SCF'B_LIN' = %BCONFIG
  #SET NET'A_NET':SIU'A_LIN' = 0
  #SET NET'B_NET':SIU'B_LIN' = 0
  
  ; UPDATE NODE NUMBER OF STA:B OBJECTS
  
  @LEN = LENGTH( %ACONFIG )
  @I = 1
  #LOOP ( %I < %LEN )
    #IF (%ACONFIG(%I+1) > 0 ) #THEN #BLOCK
       @J = %ACONFIG(%I)
       #SET STA'J':BND = TRUNC(LOOP_ANET:DOV'LOOPNUMB')
    #BLOCK_END
    #IF (%BCONFIG(%I+1) > 0) #THEN #BLOCK
       @J = %BCONFIG(%I)
       #SET STA'J':BND = TRUNC(LOOP_BNET:DOV'LOOPNUMB')
    #BLOCK_END
    @I = %I + 2
  #LOOP_END

  #PAUSE %MANPAUSE1
  #SET NET'A_NET':SIU'A_LIN' = 1
  #SET NET'B_NET':SIU'B_LIN' = 1
  #PAUSE %MANPAUSE2
  #SET NET'A_NET':SMT'A_LIN' = TRUNC(LOOP_STIM:D(%LOOPNUMB))
  #SET NET'A_NET':SBU'A_LIN' = 1
  #SET NET'B_NET':SMT'B_LIN' = TRUNC(LOOP_STIM:D(%LOOPNUMB))
  #SET NET'B_NET':SBU'B_LIN' = 1
#BLOCK_END

END


LOOPSTART:C

; LOOP_START:C - INITIALIZE LINES TO LOOP MODE

#DO LOOP_CONST:C
@OLDTI = TIMEOUT (%LPTIMEOUT)
#LOOP_WITH L = 1..%LOOPMAX
  @ALINE = TRUNC( LOOP_ALIN:DOV'L' )
  @ANET  = TRUNC( LOOP_ANET:DOV'L' )
  @BLINE = TRUNC( LOOP_BLIN:DOV'L' )
  @BNET  = TRUNC( LOOP_BNET:DOV'L' )
  #IF((%ALINE>0)AND(%ANET>0)AND(%BLINE>0)AND(%BNET>0)) #THEN #BLOCK
    #SET NET'ANET':SLU'ALINE' = 1
    #SET NET'ANET':SDR'ALINE' = "A"
    #SET NET'ANET':SMT'ALINE' = 45
    #SET NET'BNET':SLU'BLINE' = 1
    #SET NET'BNET':SDR'BLINE' = "B"
    #SET NET'BNET':SMT'BLINE' = 45
    #LOOP_WITH R = 1..%RTUMAX
      #SET LOOP'L'IUSE:DOV'R' = LOOP'L'DUSE:DOV'R'
      #SET LOOP'L'PDIR:DOV'R' = LOOP'L'DDIR:DOV'R'
      #SET LOOP'L'CLOS:DOV'R' = LOOP'L'DLOS:DOV'R'
      @LN = TRUNC( LOOP'L'LNUM:DOV'R' )
      #IF LOOP'L'PDIR:DOV'R' == %A_SIDE #THEN #BLOCK
        #SET STA'LN':BND = %ANET
      #BLOCK_END                                  
      #ELSE #SET STA'LN':BND = %BNET
    #LOOP_END
  #SET LOOP_STAT:DOV'L' = %INITIAL
  #EXEC LOOP_CTRL'L':C (@LOOPNUMB = %L, @SIGNAL = %NEWCONFIG )
  #BLOCK_END
#LOOP_END

END


LOOPTIMOUT:C

; LOOPTIMOUT:C - SIGNAL TIMEOUT

#DO LOOP_CONST:C
#IF %AI<> %OK_VALUE #THEN #BLOCK
   #SET LOOP_TIMER:POV'IX' = %OK_VALUE
   #EXEC LOOP_CTRL'IX':C (@LOOPNUMB = %IX, @SIGNAL = %TIMEOUT)
#BLOCK_END

END



