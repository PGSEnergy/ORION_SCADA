; SHADCVSTAT - CONVERT STATE TO TEXT
; PARAMETERS:
;   IN:
;       AS - APPLICATION STATE
;       SS - SHADOWING STATE
;       SP - SHADOWING PHASE
;   OUT:
;       STATE - COMBINED STATE

#CASE %AS
   #WHEN 0 @STATE = "APL_COLD_"
   #WHEN 1 @STATE = "APL_WARM_"
   #WHEN 2 @STATE = "APL_HOT__"
#CASE_END
#CASE %SS
   #WHEN 0 @STATE = %STATE + "SHD_NONE_"
   #WHEN 1 @STATE = %STATE + "SHD_WSND_"
   #WHEN 2 @STATE = %STATE + "SHD_HSND_"
   #WHEN 3 @STATE = %STATE + "SHD_RECV_"
#CASE_END
#CASE %SP
   #WHEN 1 @STATE = %STATE + "PHS_TO_WARM_SEND"
   #WHEN 2 @STATE = %STATE + "PHS_WARM_SEND"   
   #WHEN 3 @STATE = %STATE + "PHS_TO_HOT_SEND" 
   #WHEN 4 @STATE = %STATE + "PHS_HOT_SEND"    
   #WHEN 5 @STATE = %STATE + "PHS_TO_WARM_RECEIVE"
   #WHEN 6 @STATE = %STATE + "PHS_WARM_RECEIVE"   
   #WHEN 7 @STATE = %STATE + "PHS_TO_HOT_RECEIVE" 
   #WHEN 8 @STATE = %STATE + "PHS_HOT_RECEIVE"    
   #OTHERWISE @STATE = %STATE + "PHS_NONE"
#CASE_END

@STATES='MATRIX':CIN(%STATE_BEGIN .. (%STATE_BEGIN + %MAX_STATE))

@NEW_STATE = 0
@II=1
#LOOP
   #IF LOCATE(%STATES(%II),%STATE) > 0 #THEN #BLOCK
      @NEW_STATE = %II
      #LOOP_EXIT
   #BLOCK_END
   @II = %II + 1
   #IF %II > %MAX_STATE #THEN #LOOP_EXIT
#LOOP_END

#IF %NEW_STATE == 0 #THEN #BLOCK
   NEW STATE NOT FOUND : 'STATE'
#BLOCK_END
