@NAMES = ( -
("SHADCVATTR", "SHADOW CONVERT ATTRIBUTE VALUES"),-
("SHADRCV_M",  "SHADOW RECEIVER MATRIX"),-
("SHADXMT_M",  "SHADOW TRANSMITTER MATRIX"),-
("SHAD_PROC",  "SHADOW PROCEDURE DISPATCHER"),-
("SHADCVSTAT", "SHADOW CONVERT STATE"),-
("SHADSTATCH", "SHADOW TRANSITION - STATE CHANGE "),-
("SHADOW_RCV", "SHADOW RECEIVER PROCEDURE"),-
("SHADOW_XMT", "SHADOW TRANSMITTER PROCEDURE"),-
("SHAD_INIT1", "SHADOW INITIALIZATION"),-
("SHADCHKSP",  "SHADOW CHECK PARTNER SP"),-
("SHADRCLSTR", "SHADOW TRANSITION - RECEIVER CONNECTION LOST -> RESTART"),-
("SHADRSTACH", "SHADOW TRANSITION - STATE CHANGE FROM HOT RECEIVE"),-
("SHADCHKXMT", "SHADOW: CHECK FOR START TRANSMISSION REQUESTS"),-
("SHADTCLOST", "SHADOW TRANSMITTER LOST CONNECTION TO RECEIVER"),-
("SHADHOT",    "CHECK FOR HOT APPLICATIONS"),-
("SHADLSTART", "LOCAL SHADOWING START REQUEST"),-
("SHADRSTART", "REMOTE SHADOWING START REQUEST"),-
("SHADSSTART", "SHADOWING STARTS (RECEIVE OR TRANSMIT)"),-
("SHADRESAPL", "RESOLVE APPLICATION CONNECTIONS"),-
("SHADFSTART", "FORCED APPLICATION START"),-
("SHADGLOBAL", "GLOBAL DEFINITIONS"),-
("SHADTSTART", "TRANSMISSION STARTS"),-
("SHADDBLHOT", "AVOID DOUBLE HOTS"),-
("SHADEXTAS",  "EXT APL STATE"),-
("SHAD_VERS",  "SHADOWING WATCHDOG REVISION HISTORY"),-
("SHADBACKUP", "UNIX: CREATING A BACKUP ON TAPE"),-
("SHADBCK_M",  "BACKUP TRANSITION MATRIX"),-
("SHADBCKSCH", "BACKUP TRANSITION STATE CHANGE"),-
("SHADBCKRDY", "READY FOR BACKUP"),-
("SHADBCKGO",  "START BACKUP SEQUENCE"),-
("SHADLOG",    "LOGGING OF SHADOWING EVENTS"),-
("SHADRCVINI", "RECEIVER DATA OBJECT INITIALIZATION"))



#SET APL'WAPL_P':BSV5=1
#LOOP_WITH I = 1 .. LENGTH(%NAMES)
   @NAME = %NAMES(%I)
   @LN = %NAME(1)
   @CM = %NAME(2)
   @OBJ = FETCH(%WAPL,"C",%LN)
   #IF OBJ:VIU <> -1 #THEN #BLOCK
      @OLD_INS = TRUE
      @OLD_IN = OBJ:VIN
      #DELETE 'LN':'WAPL'C
   #BLOCK_END
   #ELSE #BLOCK
      @OLD_INS = FALSE
   #BLOCK_END
   #CREATE OBJ:V
   #SET OBJ:VIU = 1
   #SET OBJ:VMO = 1
   #SET OBJ:VCM = %CM
   #SET OBJ:VIN = READ_TEXT("SHAD/'LN'.CIN")
   #IF (%LN == "SHADGLOBAL") AND %OLD_INS #THEN #BLOCK
      #LOOP_WITH JJ = 1 .. LENGTH(%OLD_IN)
         #IF LOCATE(%OLD_IN(%JJ),";-END-ABB-") > 0 #THEN #BLOCK
            #IF %JJ < LENGTH(%OLD_IN) #THEN #BLOCK
               @USER_IN = %OLD_IN(%JJ+1 ..)
               #SET OBJ:VIN(LENGTH(OBJ:VIN)+1 ..) = %USER_IN
               #LOOP_EXIT
            #BLOCK_END
         #BLOCK_END
      #LOOP_END
   #BLOCK_END
   #CREATE 'LN':'WAPL'C = %OBJ
#LOOP_END
#SET APL'WAPL_P':BSV5=0

#MODIFY SHADBACKUP:'WAPL'C = LIST(PE=1,PQ=2)
#MODIFY SHADBCKGO:'WAPL'C =  LIST(PE=1,PQ=2)
#MODIFY SHADLOG:'WAPL'C =    LIST(PE=1,PQ=2)
#MODIFY SHADCHKSP:'WAPL'C =  LIST(PE=1,PQ=1)
#MODIFY SHADCHKXMT:'WAPL'C = LIST(PE=1,PQ=1,TC="SHAD_1MIN")
#MODIFY SHADHOT:'WAPL'C =    LIST(TC="SHAD_5MIN")

@STRING = "#DO SHAD_INIT1:C"
@OBJ = FETCH(%WAPL,"C","APL_INIT_1")
#IF OBJ:VIU <> -1 #THEN #BLOCK
   @FOUND = FALSE
   #LOOP_WITH I = 1..LENGTH(OBJ:VIN)
      #IF LOCATE(OBJ:VIN(%I),%STRING) > 0 #THEN @FOUND = TRUE
   #LOOP_END
   #IF NOT %FOUND #THEN #BLOCK
      @IN(1) = %STRING
      #SET OBJ:VIN = APPEND(%IN,OBJ:VIN)
      #MODIFY APL_INIT_1:'WAPL'C = %OBJ
   #BLOCK_END
#BLOCK_END
#ELSE #BLOCK
   #CREATE OBJ:V
   #SET OBJ:VIU = 1
   #SET OBJ:VIN(1) = %STRING
   #CREATE APL_INIT_1:'WAPL'C = %OBJ
#BLOCK_END

; -------------------------------------------------------------------------
;
; USER DEFINED COMMAND PROCEDURES
;
@I=0

@I = %I + 1
@UNAME(%I) = "SHADUSR"
@UNAME_CM(%I) = "USER DEFINED PROCEDURE FOR ALARM AND EVENT HANDLING"

@I = %I + 1
@UNAME(%I) = "SHADGOHOT"
@UNAME_CM(%I) = "USER DEFINED CHECKS FOR STARTING STANDBY APPLICATION"

@I = %I + 1
@UNAME(%I) = "SHADMAPNET"
@UNAME_CM(%I) = "USER DEFINED PROCEDURE FOR CONFIGURING NET''S AT TAKEOVER"

@I = %I + 1
@UNAME(%I) = "SHADMAPMON"
@UNAME_CM(%I) = "USER DEFINED PROCEDURE MAPPING MONITORS AT TAKEOVER"

@I = %I + 1
@UNAME(%I) = "SHADREMHOT"
@UNAME_CM(%I) = "CHECK IF ALLOWED TO REMAIN HOT"

#LOOP_WITH I = 1..LENGTH(%UNAME)
   @NAM = %UNAME(%I)
   @OBJ = FETCH(%WAPL,"C",%NAM)
   #IF OBJ:VIU == -1 #THEN #BLOCK
      #CREATE OBJ:V
      #SET OBJ:VIU = 1
      #SET OBJ:VMO = 1
      #SET OBJ:VCM = %UNAME_CM(%I)
      #SET OBJ:VIN = READ_TEXT("SHAD/'NAM'.CIN")
      #CREATE 'NAM':'WAPL'C = %OBJ
   #BLOCK_END
   #ELSE_IF %NAM == "SHADUSR" #THEN #BLOCK
      @ABB_IN = READ_TEXT("SHAD/'NAM'.CIN")
      @OLD_IN = OBJ:VIN
      #LOOP_WITH JJ = 1 .. LENGTH(%OLD_IN)
         #IF LOCATE(%OLD_IN(%JJ),";-END-ABB-") > 0 #THEN #BLOCK
            #IF %JJ < LENGTH(%OLD_IN) #THEN #BLOCK
               @USER_IN = %OLD_IN(%JJ+1 ..)
               @ABB_IN(LENGTH(%ABB_IN)+1 ..) = %USER_IN
               #LOOP_EXIT
            #BLOCK_END
         #BLOCK_END
      #LOOP_END
      #MODIFY 'NAM':'WAPL'C = LIST(IN=%ABB_IN)
   #BLOCK_END
#LOOP_END

@NAMES
@NAME
@UNAME
