<?xml version="1.0" encoding="utf-8"?>
<view comment="" box="-2000.0 -2250.0 2000.0 6250.0" scale="0.0" delay="0" minortickspacing="1" middletickspacing="1" majortickspacing="1" import_filename="C:/sc/prog/graphicsEngine/Palette/08 - PL_Equipment" pathname="C:/sc/prog/graphicsEngine/Palette/08 - PL_Equipment" filename="Tank 1 with Fill Level.sd" usetooltip="0">
  <searchpath>
    <dir idx="1" dname="C:/sc/prog/graphicsEngine/Palette"/>
    <dir idx="2" dname="C:/sc/prog/graphicsEngine/etc"/>
    <dir idx="3" dname="C:/sc/prog/graphicsEngine/lib"/>
    <dir idx="4" dname="C:/sc/prog/graphicsEngine/lib/views"/>
    <dir idx="5" dname="C:/sc/prog/graphicsEngine/lib/fonts"/>
    <dir idx="6" dname="C:/sc/prog/graphicsEngine/lib/Templates"/>
    <dir idx="7" dname="C:/sc/prog/graphicsEngine/lib/Templates/drawings"/>
    <dir idx="8" dname="views"/>
    <dir idx="9" dname="drawings"/>
    <dir idx="10" dname="datafiles"/>
    <dir idx="11" dname="layouts"/>
    <dir idx="12" dname="images"/>
    <dir idx="13" dname="icons"/>
    <dir idx="14" dname="C:\Program Files (x86)\ABB\MicroSCADA Pro\DV2XML\lib\gipsy\etc"/>
    <dir idx="15" dname="C:\Program Files (x86)\ABB\MicroSCADA Pro\DV2XML\lib\gipsy\lib\fonts"/>
    <dir idx="16" dname="C:\Program Files (x86)\ABB\MicroSCADA Pro\DV2XML\lib\gipsy\lib\views"/>
    <dir idx="17" dname="C:\Program Files (x86)\ABB\MicroSCADA Pro\DV2XML\lib\gipsy\lib\drawings"/>
    <dir idx="18" dname="C:\Program Files (x86)\ABB\MicroSCADA Pro\DV2XML\lib\gipsy\lib\templates_sftext"/>
    <dir idx="19" dname="C:\Program Files (x86)\ABB\MicroSCADA Pro\DV2XML\lib\gipsy\lib\templates_sftext\drawings"/>
    <dir idx="20" dname="C:\Program Files (x86)\ABB\MicroSCADA Pro\DV2XML\lib\gipsy\lib\templates"/>
    <dir idx="21" dname="C:\Program Files (x86)\ABB\MicroSCADA Pro\DV2XML\lib\gipsy\lib\templates\drawings"/>
    <dir idx="22" dname="C:\Program Files (x86)\ABB\MicroSCADA Pro\DV2XML\lib\gipsy\lib\datafiles"/>
    <dir idx="23" dname="C:\Program Files (x86)\ABB\MicroSCADA Pro\DV2XML\lib\gipsy\lib\layouts"/>
    <dir idx="24" dname="C:\Program Files (x86)\ABB\MicroSCADA Pro\DV2XML\lib\gipsy\lib\images"/>
    <dir idx="25" dname="C:\Program Files (x86)\ABB\MicroSCADA Pro\DV2XML\lib\gipsy\lib\icons"/>
  </searchpath>
  <datasources>
    <dps id="dps-2a5bd10" type="memory" format="binary" name="default.mem">
      <dp id="dp-2a5b5d8" type="float" name="Value" rows="1" columns="1" delimiter="" global="1" initval="0.0" strinitval=""/>
      <dp id="dp-2a5b6e0" type="float" name="Status Color" rows="1" columns="1" delimiter="" global="1" initval="0.0" strinitval=""/>
      <dp id="dp-2a5b7e8" type="float" name="Low Alarm Limit" rows="1" columns="1" delimiter="" global="1" initval="0.0" strinitval=""/>
      <dp id="dp-2a5b8f0" type="float" name="Low Warning Limit" rows="1" columns="1" delimiter="" global="1" initval="0.0" strinitval=""/>
      <dp id="dp-2a5b9f8" type="float" name="High Warning Limit" rows="1" columns="1" delimiter="" global="1" initval="0.0" strinitval=""/>
      <dp id="dp-2a5bb00" type="float" name="High Alarm Limit" rows="1" columns="1" delimiter="" global="1" initval="0.0" strinitval=""/>
    </dps>
  </datasources>
  <graphics layer="1073741823" lod="all" invisible="0" foregroundcolor="empty" backgroundcolor="23">
    <sk name="V_CDVObjectInternals" type="external" size="0" value="0"/>
    <sk name="ABB SA Symbols" type="string" size="0" value="v1.0"/>
    <sk name="SAObjectType" type="string" size="0" value="Tank 1 Fill"/>
    <sk name="SASuperType" type="string" size="0" value="Tank"/>
    <sk name="DV_RULE_SCRIPT_NAME" type="string" size="0" value="\sc\prog\graphicsengine\etc\SYS600_scripts.bas"/>
    <sk name="DV_RULE_SCRIPT" type="string" size="0" value="Attribute VB_Name = &quot;ScriptComment&quot;&#10;' Scripting File for Implementing Custom Rule Actions and Conditions&#10;&#10;' A rule action must be a subroutine. A rule condition must be a&#10;' function that returns a Boolean. Note that &quot;Boolean&quot; is not in&#10;' the command completion list of function return options, so you&#10;' must explicitly type it in.&#10;&#10;' The rule action and condition names in the script appear in the&#10;' Display Builder rules tab &quot;Execute Function In Script&quot; combobox.&#10;' You can also enter a new action or condition in the combobox.&#10;' This adds a new subroutine or function stub to the script file.&#10;&#10;' To prevent an action or condition name from appearing in the combobox,&#10;' precede the subroutine or function with '*** USER DEFINED CODE START ***&#10;' and follow it with '*** USER DEFINED CODE END ***&#10;&#10;' Any number of functions and/or subroutines can be entered between&#10;' these lines. You can use this technique multiple times, and anywhere&#10;' in your script.&#10;&#10;' Following predefined globals are provided:&#10;'Dim theView As DVView        'the view object from which the rule was invoked&#10;'Dim theObject As DVObject    'the graphical object (if any) that invoked the rule&#10;&#10;' If SYS 600 is updated, you must merge your changes to the new version&#10;' of this file. To ease the merging, comment your changes in the existing&#10;' subs/functions and write your additional subs/functions either right after&#10;' this line or to the end of this file.&#10;&#10;&#10;'===========================================================================&#10;'&#10;'===========================================================================&#10;Sub Dummy()&#10;    '&#10;End Sub&#10;&#10;&#10;'===========================================================================&#10;' Executes a program specified in public data variables of a subdrawing object.&#10;' &quot;Execute Button&quot; uses this sub as an internal mouse click rule action.&#10;'===========================================================================&#10;Sub Execute()&#10;    Dim dVar As DVMappedVar&#10;    Dim exeFound As Boolean&#10;    Dim argsFound As Boolean&#10;    Dim executable As String&#10;    Dim arguments As String&#10;    &#10;    'On Error GoTo ErrorHandler&#10;    &#10;    If theObject.view.IsInSubdrawing Then&#10;        For Each dVar In theObject.view.Subdrawing.MappedVars&#10;            If dVar.SubdrawingDataVar.Name = &quot;Executable&quot; Then&#10;                exeFound = True&#10;                executable = dVar.StringMapping&#10;            ElseIf dVar.SubdrawingDataVar.Name = &quot;Arguments&quot; Then&#10;                argsFound = True&#10;                arguments = dVar.StringMapping&#10;            End If&#10;        Next dVar&#10;    End If&#10;    &#10;    If Not exeFound Then&#10;        MsgBox &quot;Data variable 'Executable' not found.&quot;, 16, &quot;SYS 600&quot;&#10;        Exit Sub&#10;    ElseIf executable = &quot;&quot; Then&#10;        MsgBox &quot;No program to execute.&quot;, 16, &quot;SYS 600&quot;&#10;        Exit Sub&#10;    End If&#10;    &#10;    If argsFound Then&#10;        Shell (executable &amp; &quot; &quot; &amp; arguments)&#10;    Else&#10;        Shell (executable)&#10;    End If&#10;    &#10;    Exit Sub&#10;&#10;'ErrorHandler:&#10;    '&#10;End Sub&#10;&#10;&#10;'===========================================================================&#10;' Executes a program specified in custom attributes of an object.&#10;' Use this sub as a mouse click rule action for objects in a process display.&#10;'===========================================================================&#10;Sub ExecuteFromCustomAttribute()&#10;    Dim i As Integer&#10;    Dim exeFound As Boolean&#10;    Dim argsFound As Boolean&#10;    Dim executable As String&#10;    Dim arguments As String&#10;    &#10;    'On Error GoTo ErrorHandler&#10;    &#10;    For i = 1 To theObject.CustomAttributes.Count&#10;        If theObject.CustomAttributes(i).Name = &quot;Executable&quot; Then&#10;             exeFound = True&#10;             executable = theObject.CustomAttributes(i).Value&#10;&#10;        ElseIf theObject.CustomAttributes(i).Name = &quot;Arguments&quot; Then&#10;             argsFound = True&#10;             arguments = theObject.CustomAttributes(i).Value&#10;        End If&#10;    Next i&#10;    &#10;    If Not exeFound Then&#10;        MsgBox &quot;Custom attribute 'Executable' not found.&quot;, 16, &quot;SYS 600&quot;&#10;        Exit Sub&#10;    ElseIf executable = &quot;&quot; Then&#10;        MsgBox &quot;No program to excecute.&quot;, 16, &quot;SYS 600&quot;&#10;        Exit Sub&#10;    End If&#10;    &#10;    If argsFound Then&#10;        Shell (executable &amp; &quot; &quot; &amp; arguments)&#10;    Else&#10;        Shell (executable)&#10;    End If&#10;    &#10;    Exit Sub&#10;&#10;'ErrorHandler:&#10;    '&#10;End Sub&#10;&#10;&#10;'===========================================================================&#10;' This sub is used as a rule action for AfterAttach event.&#10;' Display Builder adds the rule automatically when saving a process display&#10;' containing a subdrawing that has &quot;SAScriptAfterAttach&quot; custom attribute&#10;' key with value &quot;OnAfterAttach&quot;.&#10;'===========================================================================&#10;Sub OnAfterAttach()&#10;    SetMeasurementValueDecimals&#10;End Sub&#10;&#10;'===========================================================================&#10;' This sub is used as a rule action for AfterAttach event for measurement&#10;' value display.&#10;'===========================================================================&#10;Sub OnAfterAttachMeas()&#10;    SetMeasurementMinMax&#10;End Sub&#10;&#10;'***************************************************************************&#10;'***************************************************************************&#10;'*** USER DEFINED CODE START ***&#10;&#10;&#10;'===========================================================================&#10;'&#10;'===========================================================================&#10;Sub Dummy2()&#10;    '&#10;End Sub&#10;&#10;&#10;'===========================================================================&#10;'&#10;'===========================================================================&#10;Sub Dummy3()&#10;    '&#10;End Sub&#10;&#10;&#10;'===========================================================================&#10;' Set the decimal amount in the text format of measurement values&#10;'===========================================================================&#10;Sub SetMeasurementValueDecimals()&#10;    Dim obj As DVObject&#10;    Dim sd As DVSubdrawing&#10;    Dim sdObj As DVObject&#10;    Dim dynFeature As DVDynamicFeature&#10;    Dim txtDyn As DVTextDynamic&#10;    &#10;    'Dim startTime As Single&#10;    'startTime = Timer&#10;    &#10;    For Each obj In theView.Objects&#10;        If obj.ObjectType = 21 Then 'dvotSubdrawing&#10;            Set sd = obj&#10;            &#10;            If sd.SubdrawingView.CustomAttributes.HasName(&quot;SAObjectType&quot;) Then&#10;                If sd.SubdrawingView.CustomAttributes(&quot;SAObjectType&quot;).Value = &quot;Measurement Value&quot; Then&#10;                    If Not sd.MappedVars(4).ViewDataVar Is Nothing Then 'Decimals&#10;                        For Each sdObj In sd.SubdrawingView.Objects&#10;                            If sdObj.Name = &quot;Value Text&quot; Then&#10;                                For Each dynFeature In sdObj.DynamicFeatureSet.DynamicFeatures&#10;                                    If dynFeature.DynamicType = 44 Then 'dvftText&#10;                                        Set txtDyn = dynFeature&#10;                                        txtDyn.OutputTextFormat = _&#10;                                            &quot;%1.&quot; &amp; Abs(CInt(sd.MappedVars(4).DoubleMapping)) &amp; &quot;f&quot;&#10;                                        Set txtDyn = Nothing&#10;                                        sdObj.Erase&#10;                                        sdObj.Draw&#10;                                    End If&#10;                                Next dynFeature&#10;                            End If&#10;                        Next sdObj&#10;                    End If&#10;                End If&#10;            End If&#10;            &#10;            Set sd = Nothing&#10;        End If&#10;    Next obj&#10;    &#10;    'MsgBox (Timer - startTime)&#10;End Sub&#10;&#10;&#10;'===========================================================================&#10;' Set the decimal amount in the text format of measurement values&#10;'===========================================================================&#10;Sub SetMeasurementMinMax()&#10;    Dim obj As DVObject&#10;    Dim sd As DVSubdrawing&#10;    Dim sdObj As DVObject&#10;    Dim dynFeature As DVDynamicFeature&#10;    Dim InOutDyn As DVBasicDynamic&#10;    &#10;    'Dim startTime As Single&#10;    'startTime = Timer&#10;    &#10;    MsgBox &quot;TEST&quot;, 16, &quot;SYS 600&quot;&#10;&#10;    For Each obj In theView.Objects&#10;        If obj.ObjectType = 21 Then 'dvotSubdrawing&#10;            Set sd = obj&#10;            &#10;            If sd.SubdrawingView.CustomAttributes.HasName(&quot;SAObjectType&quot;) Then&#10;                If sd.SubdrawingView.CustomAttributes(&quot;SAObjectType&quot;).Value = &quot;Level Indicator&quot; Then&#10;                    If ((Not sd.MappedVars(2).ViewDataVar Is Nothing) And _&#10;                        (Not sd.MappedVars(2).ViewDataVar Is Nothing)) Then 'Min/Max Values&#10;                        For Each sdObj In sd.SubdrawingView.Objects&#10;                            If sdObj.Name = &quot;FillLevel&quot; Then&#10;                                For Each dynFeature In sdObj.DynamicFeatureSet.DynamicFeatures&#10;                                    If dynFeature.DynamicType = 41 Then 'dvftFillUp&#10;                                        dynFeature.InputLowerBound = 10&#10;                                        dynFeature.InputUpperBound = 90&#10;                                        sdObj.Erase&#10;                                        sdObj.Draw&#10;                                    End If&#10;                                Next dynFeature&#10;                            End If&#10;                        Next sdObj&#10;                    End If&#10;                End If&#10;            End If&#10;            &#10;            Set sd = Nothing&#10;        End If&#10;    Next obj&#10;    &#10;    'MsgBox (Timer - startTime)&#10;End Sub&#10;&#10;'*** USER DEFINED CODE END ***&#10;'***************************************************************************&#10;'***************************************************************************&#10;&#10;&#10;'***************************************************************************&#10;' Example subs how to use MFC controls.&#10;'&#10;' Following Display Builder's MFC control types can be accessed simply by&#10;' using rules and/or VBA script:&#10;' - Push Button&#10;' - Check Box&#10;' - Radio Button&#10;' - Combo Box&#10;' - Group Box&#10;' - Edit Field&#10;' - Text Field&#10;' The rest of the types are available in Display Builder but cannot be&#10;' accessed without lower level programming.&#10;' See \sc\prog\graphicsEngine\lib\views\MFCExample.v&#10;'***************************************************************************&#10;'*** USER DEFINED CODE START ***&#10;&#10;&#10;'===========================================================================&#10;' This sub is used as a rule action for AfterReadData event.&#10;'===========================================================================&#10;Sub SetMFCExampleProperties()&#10;    On Error GoTo ErrorHandler&#10;    &#10;    If theView.Comment = &quot;failed&quot; Then Exit Sub&#10;    &#10;    Dim state As Integer&#10;    Dim btn As DVMFCControl&#10;    Dim radio1 As DVMFCControl&#10;    Dim radio2 As DVMFCControl&#10;    Dim check1 As DVMFCControl&#10;    Dim static1 As DVMFCControl&#10;    Dim static2 As DVMFCControl&#10;    Dim edit1 As DVMFCControl&#10;    &#10;    state = theView.DataSources(1).DataVars(1).GetValue(0, 0)&#10;    Set btn = theView.Objects(&quot;PushButton1&quot;)&#10;    Set radio1 = theView.Objects(&quot;Radio1&quot;)&#10;    Set radio2 = theView.Objects(&quot;Radio2&quot;)&#10;    Set check1 = theView.Objects(&quot;Check1&quot;)&#10;    Set static1 = theView.Objects(&quot;Static1&quot;)&#10;    Set static2 = theView.Objects(&quot;Static2&quot;)&#10;    Set edit1 = theView.Objects(&quot;Edit1&quot;)&#10;    &#10;    If state = 1 Then&#10;        btn.ShowWindow 1&#10;        radio1.CheckMark = 0&#10;        radio2.CheckMark = 1&#10;        check1.CheckMark = 1&#10;        static1.WindowText = &quot;Value in MicroSCADA: 2&quot;&#10;    ElseIf state = 2 Then&#10;        btn.ShowWindow 1&#10;        radio1.CheckMark = 1&#10;        radio2.CheckMark = 0&#10;        check1.CheckMark = 0&#10;        static1.WindowText = &quot;Value in MicroSCADA: 1&quot;&#10;    Else&#10;        btn.ShowWindow 0&#10;        radio1.CheckMark = 0&#10;        radio2.CheckMark = 0&#10;        check1.CheckMark = 0&#10;        static1.WindowText = &quot;Value in MicroSCADA: &quot; &amp; state&#10;    End If&#10;    &#10;    static2.WindowText = &quot;Value in SA Symbol: &quot; &amp; state&#10;    edit1.WindowText = theView.DataSources(1).DataVars(3).GetStringValue(0, 0)&#10;    Set btn = Nothing&#10;    Set radio1 = Nothing&#10;    Set radio2 = Nothing&#10;    Set check1 = Nothing&#10;    Set static1 = Nothing&#10;    Set static2 = Nothing&#10;    Set edit1 = Nothing&#10;    Exit Sub&#10;&#10;ErrorHandler:&#10;    theView.Comment = &quot;failed&quot;&#10;    MsgBox &quot;SetMFCExampleProperties failed.&quot;&#10;End Sub&#10;&#10;&#10;'===========================================================================&#10;' This sub is used as a rule action for CBN_SELCHANGE event.&#10;'===========================================================================&#10;Sub OnCbnSelChange()&#10;    Dim combo As DVMFCControl&#10;    Set combo = theObject&#10;    MsgBox combo.WindowText, 16, &quot;SYS 600&quot;&#10;    Set combo = Nothing&#10;End Sub&#10;&#10;&#10;'*** USER DEFINED CODE END ***&#10;'***************************************************************************&#10;'***************************************************************************&#10;&#10;&#10;"/>
    <sk name="DV_SEARCH_PATH" type="string" size="0" value="C:\SC\APL\PIPELINE\PICT;C:\SC\APL\PIPELINE\AplMod4\Palette;C:\sc\prog\graphicsengine\Palette;C:\sc\prog\graphicsengine\etc;C:\sc\prog\graphicsengine\lib;C:\sc\prog\graphicsengine\lib\views;C:\sc\prog\graphicsengine\lib\fonts;C:\sc\prog\graphicsengine\lib\Templates;C:\sc\prog\graphicsengine\lib\templates\drawings;C:\sc\prog\graphicsengine\support"/>
    <sk name="DV_SA_REV_INFO" type="string" size="0" value="1"/>
    <sk name="SATopology" type="string" size="0" value=""/>
    <sk name="SAOpenVSCILOnClickVso" type="string" size="0" value="B5_USE/BPU_DLG_ENG.VSO@1MAIN@2@31SGTS:-1"/>
    <subdrawing id="go-310ffb8" drname="Tank 1" layer="1073741823" lod="all" invisible="0" foregroundcolor="31" backgroundcolor="empty" filename="08 - PL_Equipment/Tank 1.sd" dynamicflag="disabled" processrules="1" xscale="1.0" yscale="1.0" angle="0.0" bfg="empty" bbg="empty" bfreq="0">
      <pt x="0.0" y="0.0"/>
    </subdrawing>
    <subdrawing id="go-31100c8" drname="Scale 0-100" layer="1073741823" lod="all" invisible="0" foregroundcolor="empty" backgroundcolor="empty" filename="00 - Common/Scale 0-100.sd" dynamicflag="enabled" processrules="1" xscale="1.0" yscale="1.0" angle="0.0" bfg="empty" bbg="empty" bfreq="0">
      <pt x="0.0" y="1750.0"/>
      <sdvarmap sdvardpsname="default.mem" sdvardpname="Value" mainvar="#dp-2a5b5d8"/>
      <sdvarmap sdvardpsname="default.mem" sdvardpname="Status Color" mainvar="#dp-2a5b6e0"/>
      <sdvarmap sdvardpsname="default.mem" sdvardpname="Low Alarm Limit" mainvar="#dp-2a5b7e8"/>
      <sdvarmap sdvardpsname="default.mem" sdvardpname="Low Warning Limit" mainvar="#dp-2a5b8f0"/>
      <sdvarmap sdvardpsname="default.mem" sdvardpname="High Warning Limit" mainvar="#dp-2a5b9f8"/>
      <sdvarmap sdvardpsname="default.mem" sdvardpname="High Alarm Limit" mainvar="#dp-2a5bb00"/>
    </subdrawing>
    <rectangle id="go-30105b0" drname="Hotspot1" layer="1073741823" lod="all" invisible="0" foregroundcolor="empty" backgroundcolor="251" linewidth="1" strokewidth="0.0" rx="0.0" ry="0.0" linetype="1" capstyle="butt" joinstyle="miter" dashmode="empty" fillstatus="edge" bfg="empty" bbg="empty" bfreq="0">
      <pt x="-2000.0" y="5125.0"/>
      <pt x="-2000.0" y="5125.0"/>
    </rectangle>
    <rectangle id="go-3010638" drname="Hotspot2" layer="1073741823" lod="all" invisible="0" foregroundcolor="empty" backgroundcolor="251" linewidth="1" strokewidth="0.0" rx="0.0" ry="0.0" linetype="1" capstyle="butt" joinstyle="miter" dashmode="empty" fillstatus="edge" bfg="empty" bbg="empty" bfreq="0">
      <pt x="-2000.0" y="-1625.0"/>
      <pt x="-2000.0" y="-1625.0"/>
    </rectangle>
    <rectangle id="go-30106c0" drname="Hotspot3" layer="1073741823" lod="all" invisible="0" foregroundcolor="empty" backgroundcolor="251" linewidth="1" strokewidth="0.0" rx="0.0" ry="0.0" linetype="1" capstyle="butt" joinstyle="miter" dashmode="empty" fillstatus="edge" bfg="empty" bbg="empty" bfreq="0">
      <pt x="2000.0" y="5125.0"/>
      <pt x="2000.0" y="5125.0"/>
    </rectangle>
    <rectangle id="go-3010748" drname="Hotspot4" layer="1073741823" lod="all" invisible="0" foregroundcolor="empty" backgroundcolor="251" linewidth="1" strokewidth="0.0" rx="0.0" ry="0.0" linetype="1" capstyle="butt" joinstyle="miter" dashmode="empty" fillstatus="edge" bfg="empty" bbg="empty" bfreq="0">
      <pt x="2000.0" y="-1625.0"/>
      <pt x="2000.0" y="-1625.0"/>
      <dfs id="dfs-30d0740" erasemethod="redrawdelayed" erasecolor="empty" xformanchor="center-center"/>
    </rectangle>
    <rectangle id="go-30107d0" drname="Hotspot5" layer="1073741823" lod="all" invisible="0" foregroundcolor="empty" backgroundcolor="251" linewidth="1" strokewidth="0.0" rx="0.0" ry="0.0" linetype="1" capstyle="butt" joinstyle="miter" dashmode="empty" fillstatus="edge" bfg="empty" bbg="empty" bfreq="0">
      <pt x="0.0" y="-2000.0"/>
      <pt x="0.0" y="-2000.0"/>
    </rectangle>
    <rectangle id="go-3010858" drname="Hotspot6" layer="1073741823" lod="all" invisible="0" foregroundcolor="empty" backgroundcolor="251" linewidth="1" strokewidth="0.0" rx="0.0" ry="0.0" linetype="1" capstyle="butt" joinstyle="miter" dashmode="empty" fillstatus="edge" bfg="empty" bbg="empty" bfreq="0">
      <pt x="0.0" y="6000.0"/>
      <pt x="0.0" y="6000.0"/>
      <dfs id="dfs-30d07a0" erasemethod="redrawdelayed" erasecolor="empty" xformanchor="center-center"/>
    </rectangle>
  </graphics>
</view>

